[DEBUG] 2021-04-09 19:05:09.562 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-09 19:05:09.577 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-09 19:05:09.577 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-09 19:05:09.702 [http-nio-8080-exec-1] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-09 19:05:09.702 [http-nio-8080-exec-1] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-09 19:05:09.921 [http-nio-8080-exec-1] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-09 19:05:09.921 [http-nio-8080-exec-1] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-09 19:05:09.952 [http-nio-8080-exec-1] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-09 19:05:10.325 [http-nio-8080-exec-1] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-09 19:05:10.359 [http-nio-8080-exec-1] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-09 19:05:10.361 [http-nio-8080-exec-1] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-09 19:05:10.391 [http-nio-8080-exec-1] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-09 19:05:10.445 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4c4f23ed
[DEBUG] 2021-04-09 19:05:10.445 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4c4f23ed
[DEBUG] 2021-04-09 19:05:10.446 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4c4f23ed
[DEBUG] 2021-04-09 19:05:10.447 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@248539b2
[DEBUG] 2021-04-09 19:05:10.448 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@12d4848d
[DEBUG] 2021-04-09 19:05:10.448 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@11c7b517
[DEBUG] 2021-04-09 19:05:10.450 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5040585a
[DEBUG] 2021-04-09 19:05:10.450 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5040585a
[DEBUG] 2021-04-09 19:05:10.450 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5040585a
[DEBUG] 2021-04-09 19:05:10.451 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@323f6838
[DEBUG] 2021-04-09 19:05:10.451 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@323f6838
[DEBUG] 2021-04-09 19:05:10.452 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@323f6838
[DEBUG] 2021-04-09 19:05:10.453 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c9e3f69
[DEBUG] 2021-04-09 19:05:10.454 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c9e3f69
[DEBUG] 2021-04-09 19:05:10.454 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c9e3f69
[DEBUG] 2021-04-09 19:05:10.455 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6f032896
[DEBUG] 2021-04-09 19:05:10.455 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6f032896
[DEBUG] 2021-04-09 19:05:10.455 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f032896
[DEBUG] 2021-04-09 19:05:10.456 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6a1abd97
[DEBUG] 2021-04-09 19:05:10.457 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6a1abd97
[DEBUG] 2021-04-09 19:05:10.457 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6a1abd97
[DEBUG] 2021-04-09 19:05:10.458 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4932926e
[DEBUG] 2021-04-09 19:05:10.458 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4932926e
[DEBUG] 2021-04-09 19:05:10.458 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4932926e
[DEBUG] 2021-04-09 19:05:10.460 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@68d9632
[DEBUG] 2021-04-09 19:05:10.460 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@68d9632
[DEBUG] 2021-04-09 19:05:10.460 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68d9632
[DEBUG] 2021-04-09 19:05:10.461 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@e8aed41
[DEBUG] 2021-04-09 19:05:10.461 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@e8aed41
[DEBUG] 2021-04-09 19:05:10.463 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@565e7062
[DEBUG] 2021-04-09 19:05:10.463 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@565e7062
[DEBUG] 2021-04-09 19:05:10.464 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@35ee0e8b
[DEBUG] 2021-04-09 19:05:10.464 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@35ee0e8b
[DEBUG] 2021-04-09 19:05:10.465 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ad078a6
[DEBUG] 2021-04-09 19:05:10.466 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@ba56548
[DEBUG] 2021-04-09 19:05:10.467 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2915883f
[DEBUG] 2021-04-09 19:05:10.468 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2915883f
[DEBUG] 2021-04-09 19:05:10.469 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7386a2ec
[DEBUG] 2021-04-09 19:05:10.469 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7386a2ec
[DEBUG] 2021-04-09 19:05:10.472 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@704fc272
[DEBUG] 2021-04-09 19:05:10.472 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@704fc272
[DEBUG] 2021-04-09 19:05:10.474 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2ffe17f8
[DEBUG] 2021-04-09 19:05:10.474 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2ffe17f8
[DEBUG] 2021-04-09 19:05:10.475 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3ed1cf31
[DEBUG] 2021-04-09 19:05:10.476 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3ed1cf31
[DEBUG] 2021-04-09 19:05:10.477 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@29b7b65a
[DEBUG] 2021-04-09 19:05:10.478 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@29b7b65a
[DEBUG] 2021-04-09 19:05:10.480 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4aa8cd5b
[DEBUG] 2021-04-09 19:05:10.480 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4aa8cd5b
[DEBUG] 2021-04-09 19:05:10.482 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6141178d
[DEBUG] 2021-04-09 19:05:10.483 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6141178d
[DEBUG] 2021-04-09 19:05:10.485 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@277208e2
[DEBUG] 2021-04-09 19:05:10.490 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@277208e2
[DEBUG] 2021-04-09 19:05:10.492 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@40227a80
[DEBUG] 2021-04-09 19:05:10.492 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@40227a80
[DEBUG] 2021-04-09 19:05:10.494 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4b45c81f
[DEBUG] 2021-04-09 19:05:10.494 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4b45c81f
[DEBUG] 2021-04-09 19:05:10.496 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5e5be7f9
[DEBUG] 2021-04-09 19:05:10.496 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5e5be7f9
[DEBUG] 2021-04-09 19:05:10.496 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5e5be7f9
[DEBUG] 2021-04-09 19:05:10.499 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@c2b258
[DEBUG] 2021-04-09 19:05:10.500 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@20465094
[DEBUG] 2021-04-09 19:05:10.500 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@20465094
[DEBUG] 2021-04-09 19:05:10.501 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@20465094
[DEBUG] 2021-04-09 19:05:10.502 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6865714f
[DEBUG] 2021-04-09 19:05:10.503 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@18383370
[DEBUG] 2021-04-09 19:05:10.503 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@18383370
[DEBUG] 2021-04-09 19:05:10.504 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@46d4eff1
[DEBUG] 2021-04-09 19:05:10.504 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46d4eff1
[DEBUG] 2021-04-09 19:05:10.505 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@72da634
[DEBUG] 2021-04-09 19:05:10.506 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@72da634
[DEBUG] 2021-04-09 19:05:10.506 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@202cb176
[DEBUG] 2021-04-09 19:05:10.507 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@202cb176
[DEBUG] 2021-04-09 19:05:10.507 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d962c97
[DEBUG] 2021-04-09 19:05:10.508 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d962c97
[DEBUG] 2021-04-09 19:05:10.508 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@778a8c88
[DEBUG] 2021-04-09 19:05:10.510 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3147e017
[DEBUG] 2021-04-09 19:05:10.510 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3147e017
[DEBUG] 2021-04-09 19:05:10.510 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3147e017
[DEBUG] 2021-04-09 19:05:10.514 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7fc35945
[DEBUG] 2021-04-09 19:05:10.514 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7fc35945
[DEBUG] 2021-04-09 19:05:10.514 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7fc35945
[DEBUG] 2021-04-09 19:05:10.516 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@bbeab90
[DEBUG] 2021-04-09 19:05:10.516 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6a4dd9a3
[DEBUG] 2021-04-09 19:05:10.517 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@11fa0592
[DEBUG] 2021-04-09 19:05:10.517 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@11fa0592
[DEBUG] 2021-04-09 19:05:10.518 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@11fa0592
[DEBUG] 2021-04-09 19:05:10.519 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@52b78282
[DEBUG] 2021-04-09 19:05:10.519 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@52b78282
[DEBUG] 2021-04-09 19:05:10.519 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@52b78282
[DEBUG] 2021-04-09 19:05:10.519 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6b79ea36
[DEBUG] 2021-04-09 19:05:10.520 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7e9779ad
[DEBUG] 2021-04-09 19:05:10.522 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@50ab1ba0
[DEBUG] 2021-04-09 19:05:10.522 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@50ab1ba0
[DEBUG] 2021-04-09 19:05:10.523 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@863550a
[DEBUG] 2021-04-09 19:05:10.525 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@c8eea49
[DEBUG] 2021-04-09 19:05:10.525 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@c8eea49
[DEBUG] 2021-04-09 19:05:10.527 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6fce4649
[DEBUG] 2021-04-09 19:05:10.527 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6fce4649
[DEBUG] 2021-04-09 19:05:10.529 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@98d2544
[DEBUG] 2021-04-09 19:05:10.530 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53b1d880
[DEBUG] 2021-04-09 19:05:10.532 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5325d7cd
[DEBUG] 2021-04-09 19:05:10.535 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5eda7b3e
[DEBUG] 2021-04-09 19:05:10.536 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5eda7b3e
[DEBUG] 2021-04-09 19:05:10.536 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11b8f805
[DEBUG] 2021-04-09 19:05:10.537 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@20a28f75
[DEBUG] 2021-04-09 19:05:10.537 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b102a22
[DEBUG] 2021-04-09 19:05:10.537 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3410c5a5
[DEBUG] 2021-04-09 19:05:10.537 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@62be7bf2
[DEBUG] 2021-04-09 19:05:10.537 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@56d389f7
[DEBUG] 2021-04-09 19:05:10.537 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4c88e835
[DEBUG] 2021-04-09 19:05:10.538 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7e8721ec
[DEBUG] 2021-04-09 19:05:10.578 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-09 19:05:10.579 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-09 19:05:10.580 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-09 19:05:10.582 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-09 19:05:10.583 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-09 19:05:10.585 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-09 19:05:10.585 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-09 19:05:10.587 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-09 19:05:10.588 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-09 19:05:10.589 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-09 19:05:10.589 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-09 19:05:10.590 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-09 19:05:10.590 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-09 19:05:10.591 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-09 19:05:10.600 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-09 19:05:10.601 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-09 19:05:10.601 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-09 19:05:10.858 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-09 19:05:11.445 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-09 19:05:11.445 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-09 19:05:11.445 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-09 19:05:11.523 [http-nio-8080-exec-1] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-09 19:05:11.539 [http-nio-8080-exec-1] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-09 19:05:11.617 [http-nio-8080-exec-1] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-09 19:05:11.664 [http-nio-8080-exec-1] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-09 19:05:11.680 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4afd2fa3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1a604e3e]
[DEBUG] 2021-04-09 19:05:11.742 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-09 19:05:11.773 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-09 19:05:11.789 [http-nio-8080-exec-1] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-09 19:05:11.789 [http-nio-8080-exec-1] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-09 19:05:11.836 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-09 19:05:11.852 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-09 19:05:11.852 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-09 19:05:11.867 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-09 19:05:11.867 [http-nio-8080-exec-1] PropertyBinder - Building property id
[DEBUG] 2021-04-09 19:05:11.867 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] PropertyBinder - Building property alignment
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] PropertyBinder - Building property franchise
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] PropertyBinder - Building property media
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] PropertyBinder - Building property name
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] PropertyBinder - Building property species
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-09 19:05:11.883 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-09 19:05:11.898 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-09 19:05:11.898 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-09 19:05:11.898 [http-nio-8080-exec-1] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-09 19:05:11.930 [http-nio-8080-exec-1] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - SessionFactory name : null
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Statistics: disabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Default null ordering: NONE
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Query language substitutions: {}
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Named query checking : enabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Second-level cache: disabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - JDBC batch size: 15
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - JPA compliance - query : 
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-09 19:05:11.945 [http-nio-8080-exec-1] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-09 19:05:12.023 [http-nio-8080-exec-1] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-09 19:05:12.039 [http-nio-8080-exec-1] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-09 19:05:12.039 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, org.apache.activemq.broker.jmx.createConnector=false, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=13.0.1+9, user.name=Walker, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, derby.system.home=C:\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=13.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=Jun 30 2020 21:49:10 UTC, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, tomee.version=7.1.4, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.path=C:\tomcat\bin\bootstrap.jar;C:\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.57.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/tomcat/lib","C:/tomcat/lib/*.jar","C:\tomcat/lib","C:\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=6.3, openejb.version=7.1.4, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=C:\tomcat, user.dir=C:\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1f3c9308, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0, authconfigprovider.factory=false}
[DEBUG] 2021-04-09 19:05:12.070 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-09 19:05:12.070 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-09 19:05:12.070 [http-nio-8080-exec-1] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-09 19:05:12.070 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-09 19:05:12.070 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4afd2fa3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6716cd71]
[DEBUG] 2021-04-09 19:05:12.133 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-09 19:05:12.133 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-09 19:05:12.149 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-09 19:05:12.149 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-09 19:05:12.445 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-09 19:05:12.445 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-09 19:05:12.445 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-09 19:05:12.445 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-09 19:05:12.445 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-09 19:05:12.445 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-09 19:05:12.445 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-09 19:05:12.477 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1faffc19]
[DEBUG] 2021-04-09 19:05:12.477 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-09 19:05:12.492 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-09 19:05:12.492 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-09 19:05:12.492 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-09 19:05:12.492 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-09 19:05:12.492 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-09 19:05:12.508 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-09 19:05:12.508 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-09 19:05:12.508 [http-nio-8080-exec-1] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-09 19:05:12.508 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1afe87ba]
[DEBUG] 2021-04-09 19:05:12.508 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-09 19:05:12.508 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-09 19:05:12.508 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-09 19:05:12.508 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-09 19:05:12.508 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-09 19:05:12.508 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-09 19:05:12.508 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-09 19:05:12.508 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-09 19:05:12.508 [http-nio-8080-exec-1] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-09 19:05:12.524 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-09 19:05:12.524 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-09 19:05:12.570 [http-nio-8080-exec-1] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-09 19:05:12.570 [http-nio-8080-exec-1] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-09 19:05:12.570 [http-nio-8080-exec-1] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-09 19:05:12.586 [http-nio-8080-exec-1] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-09 19:05:12.586 [http-nio-8080-exec-1] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-09 19:05:12.586 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-09 19:05:12.586 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-09 19:05:12.586 [http-nio-8080-exec-1] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@742103b3
[DEBUG] 2021-04-09 19:05:12.586 [http-nio-8080-exec-1] SessionFactoryRegistry - Registering SessionFactory: 94a86452-3c33-4f81-b441-566764b64b81 (<unnamed>)
[DEBUG] 2021-04-09 19:05:12.586 [http-nio-8080-exec-1] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-09 19:05:12.695 [http-nio-8080-exec-1] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-09 19:05:12.711 [http-nio-8080-exec-1] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-09 19:05:12.805 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-09 19:05:12.805 [http-nio-8080-exec-1] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-09 19:05:12.820 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-09 19:05:12.820 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-09 19:05:12.820 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-09 19:05:12.820 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-09 19:05:12.820 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-09 19:05:12.820 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-09 19:05:12.820 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-09 19:05:12.820 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-09 19:05:12.820 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-09 19:05:12.820 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-09 19:05:12.820 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-09 19:05:12.820 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-09 19:05:12.820 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-09 19:05:12.820 [http-nio-8080-exec-1] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-09 19:05:12.820 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-09 19:36:27.199 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-09 19:36:27.199 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-09 19:36:27.215 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-09 19:36:27.371 [http-nio-8080-exec-9] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-09 19:36:27.387 [http-nio-8080-exec-9] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-09 19:36:27.559 [http-nio-8080-exec-9] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-09 19:36:27.559 [http-nio-8080-exec-9] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-09 19:36:27.590 [http-nio-8080-exec-9] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-09 19:36:27.963 [http-nio-8080-exec-9] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-09 19:36:28.004 [http-nio-8080-exec-9] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-09 19:36:28.005 [http-nio-8080-exec-9] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-09 19:36:28.040 [http-nio-8080-exec-9] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-09 19:36:28.103 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2094993
[DEBUG] 2021-04-09 19:36:28.103 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2094993
[DEBUG] 2021-04-09 19:36:28.104 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2094993
[DEBUG] 2021-04-09 19:36:28.104 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ff53f51
[DEBUG] 2021-04-09 19:36:28.105 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2bc09e2a
[DEBUG] 2021-04-09 19:36:28.106 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@77230922
[DEBUG] 2021-04-09 19:36:28.109 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@280005ce
[DEBUG] 2021-04-09 19:36:28.109 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@280005ce
[DEBUG] 2021-04-09 19:36:28.109 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@280005ce
[DEBUG] 2021-04-09 19:36:28.111 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6093545
[DEBUG] 2021-04-09 19:36:28.111 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6093545
[DEBUG] 2021-04-09 19:36:28.111 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6093545
[DEBUG] 2021-04-09 19:36:28.113 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@381e4acc
[DEBUG] 2021-04-09 19:36:28.114 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@381e4acc
[DEBUG] 2021-04-09 19:36:28.114 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@381e4acc
[DEBUG] 2021-04-09 19:36:28.115 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@518b52a
[DEBUG] 2021-04-09 19:36:28.116 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@518b52a
[DEBUG] 2021-04-09 19:36:28.116 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@518b52a
[DEBUG] 2021-04-09 19:36:28.117 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3ebf2f79
[DEBUG] 2021-04-09 19:36:28.117 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3ebf2f79
[DEBUG] 2021-04-09 19:36:28.117 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ebf2f79
[DEBUG] 2021-04-09 19:36:28.118 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@27812073
[DEBUG] 2021-04-09 19:36:28.119 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@27812073
[DEBUG] 2021-04-09 19:36:28.120 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@27812073
[DEBUG] 2021-04-09 19:36:28.121 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5bd803a1
[DEBUG] 2021-04-09 19:36:28.122 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5bd803a1
[DEBUG] 2021-04-09 19:36:28.122 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5bd803a1
[DEBUG] 2021-04-09 19:36:28.123 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@411a7f72
[DEBUG] 2021-04-09 19:36:28.123 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@411a7f72
[DEBUG] 2021-04-09 19:36:28.127 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1afad774
[DEBUG] 2021-04-09 19:36:28.127 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1afad774
[DEBUG] 2021-04-09 19:36:28.129 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5a6f59d6
[DEBUG] 2021-04-09 19:36:28.129 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5a6f59d6
[DEBUG] 2021-04-09 19:36:28.130 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6d6128f1
[DEBUG] 2021-04-09 19:36:28.131 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2e3feeb4
[DEBUG] 2021-04-09 19:36:28.132 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@38581b8f
[DEBUG] 2021-04-09 19:36:28.133 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@38581b8f
[DEBUG] 2021-04-09 19:36:28.134 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4e598860
[DEBUG] 2021-04-09 19:36:28.135 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4e598860
[DEBUG] 2021-04-09 19:36:28.139 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@24edf1c3
[DEBUG] 2021-04-09 19:36:28.140 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@24edf1c3
[DEBUG] 2021-04-09 19:36:28.143 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2acddf1
[DEBUG] 2021-04-09 19:36:28.143 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2acddf1
[DEBUG] 2021-04-09 19:36:28.144 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@202b4c21
[DEBUG] 2021-04-09 19:36:28.145 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@202b4c21
[DEBUG] 2021-04-09 19:36:28.147 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@61c529b9
[DEBUG] 2021-04-09 19:36:28.147 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@61c529b9
[DEBUG] 2021-04-09 19:36:28.149 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@14779e8f
[DEBUG] 2021-04-09 19:36:28.149 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@14779e8f
[DEBUG] 2021-04-09 19:36:28.150 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@19bc2ef8
[DEBUG] 2021-04-09 19:36:28.151 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@19bc2ef8
[DEBUG] 2021-04-09 19:36:28.153 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@57529fbe
[DEBUG] 2021-04-09 19:36:28.153 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@57529fbe
[DEBUG] 2021-04-09 19:36:28.156 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7b5186d9
[DEBUG] 2021-04-09 19:36:28.156 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7b5186d9
[DEBUG] 2021-04-09 19:36:28.157 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4a117632
[DEBUG] 2021-04-09 19:36:28.160 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4a117632
[DEBUG] 2021-04-09 19:36:28.161 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5f4f8f96
[DEBUG] 2021-04-09 19:36:28.162 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5f4f8f96
[DEBUG] 2021-04-09 19:36:28.162 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5f4f8f96
[DEBUG] 2021-04-09 19:36:28.165 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57201887
[DEBUG] 2021-04-09 19:36:28.166 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1d73c50e
[DEBUG] 2021-04-09 19:36:28.166 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d73c50e
[DEBUG] 2021-04-09 19:36:28.168 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d73c50e
[DEBUG] 2021-04-09 19:36:28.169 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5780cbba
[DEBUG] 2021-04-09 19:36:28.170 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3b1fa6c1
[DEBUG] 2021-04-09 19:36:28.170 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3b1fa6c1
[DEBUG] 2021-04-09 19:36:28.172 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1d1a49d8
[DEBUG] 2021-04-09 19:36:28.172 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1d1a49d8
[DEBUG] 2021-04-09 19:36:28.173 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1fc98cc6
[DEBUG] 2021-04-09 19:36:28.173 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1fc98cc6
[DEBUG] 2021-04-09 19:36:28.176 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@28b8f10f
[DEBUG] 2021-04-09 19:36:28.176 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@28b8f10f
[DEBUG] 2021-04-09 19:36:28.177 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@795f8401
[DEBUG] 2021-04-09 19:36:28.177 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@795f8401
[DEBUG] 2021-04-09 19:36:28.178 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@407d6e8c
[DEBUG] 2021-04-09 19:36:28.180 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4c9651a0
[DEBUG] 2021-04-09 19:36:28.180 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4c9651a0
[DEBUG] 2021-04-09 19:36:28.180 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4c9651a0
[DEBUG] 2021-04-09 19:36:28.181 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6c1587ac
[DEBUG] 2021-04-09 19:36:28.181 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6c1587ac
[DEBUG] 2021-04-09 19:36:28.181 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6c1587ac
[DEBUG] 2021-04-09 19:36:28.183 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@8fd3ca7
[DEBUG] 2021-04-09 19:36:28.184 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5a3972c2
[DEBUG] 2021-04-09 19:36:28.185 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@42d91f58
[DEBUG] 2021-04-09 19:36:28.186 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@42d91f58
[DEBUG] 2021-04-09 19:36:28.187 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@42d91f58
[DEBUG] 2021-04-09 19:36:28.189 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2846f99f
[DEBUG] 2021-04-09 19:36:28.189 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2846f99f
[DEBUG] 2021-04-09 19:36:28.189 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2846f99f
[DEBUG] 2021-04-09 19:36:28.189 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@34c606a2
[DEBUG] 2021-04-09 19:36:28.190 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7876b8f9
[DEBUG] 2021-04-09 19:36:28.194 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1ff6dfe0
[DEBUG] 2021-04-09 19:36:28.195 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1ff6dfe0
[DEBUG] 2021-04-09 19:36:28.195 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3a2eb9b
[DEBUG] 2021-04-09 19:36:28.197 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4da3f17d
[DEBUG] 2021-04-09 19:36:28.198 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4da3f17d
[DEBUG] 2021-04-09 19:36:28.200 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@38f115f4
[DEBUG] 2021-04-09 19:36:28.200 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@38f115f4
[DEBUG] 2021-04-09 19:36:28.201 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7c6860ab
[DEBUG] 2021-04-09 19:36:28.203 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@684cb55d
[DEBUG] 2021-04-09 19:36:28.205 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1a142ee9
[DEBUG] 2021-04-09 19:36:28.211 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2176e387
[DEBUG] 2021-04-09 19:36:28.211 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2176e387
[DEBUG] 2021-04-09 19:36:28.212 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e387d6a
[DEBUG] 2021-04-09 19:36:28.212 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@65859315
[DEBUG] 2021-04-09 19:36:28.212 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@24162033
[DEBUG] 2021-04-09 19:36:28.212 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6a95c83e
[DEBUG] 2021-04-09 19:36:28.215 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@57fb2b2b
[DEBUG] 2021-04-09 19:36:28.215 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1eaf07fa
[DEBUG] 2021-04-09 19:36:28.215 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b2daba4
[DEBUG] 2021-04-09 19:36:28.216 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4fbd56c7
[DEBUG] 2021-04-09 19:36:28.269 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-09 19:36:28.270 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-09 19:36:28.271 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-09 19:36:28.275 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-09 19:36:28.277 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-09 19:36:28.278 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-09 19:36:28.279 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-09 19:36:28.281 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-09 19:36:28.282 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-09 19:36:28.283 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-09 19:36:28.283 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-09 19:36:28.284 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-09 19:36:28.284 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-09 19:36:28.285 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-09 19:36:28.297 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-09 19:36:28.297 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-09 19:36:28.298 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-09 19:36:28.550 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-09 19:36:29.235 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-09 19:36:29.235 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-09 19:36:29.235 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-09 19:36:29.270 [http-nio-8080-exec-9] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-09 19:36:29.301 [http-nio-8080-exec-9] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-09 19:36:29.363 [http-nio-8080-exec-9] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-09 19:36:29.410 [http-nio-8080-exec-9] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-09 19:36:29.410 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@367e0950] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2f2ebe96]
[DEBUG] 2021-04-09 19:36:29.504 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-09 19:36:29.535 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-09 19:36:29.550 [http-nio-8080-exec-9] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-09 19:36:29.550 [http-nio-8080-exec-9] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-09 19:36:29.616 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-09 19:36:29.621 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-09 19:36:29.625 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-09 19:36:29.628 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-09 19:36:29.632 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2021-04-09 19:36:29.638 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-09 19:36:29.640 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-09 19:36:29.642 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-09 19:36:29.642 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-09 19:36:29.642 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-09 19:36:29.642 [http-nio-8080-exec-9] PropertyBinder - Building property alignment
[DEBUG] 2021-04-09 19:36:29.643 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-09 19:36:29.643 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-09 19:36:29.643 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-09 19:36:29.643 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-09 19:36:29.643 [http-nio-8080-exec-9] PropertyBinder - Building property franchise
[DEBUG] 2021-04-09 19:36:29.644 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-09 19:36:29.644 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-09 19:36:29.644 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-09 19:36:29.645 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-09 19:36:29.645 [http-nio-8080-exec-9] PropertyBinder - Building property media
[DEBUG] 2021-04-09 19:36:29.647 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-09 19:36:29.647 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-09 19:36:29.647 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-09 19:36:29.647 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-09 19:36:29.647 [http-nio-8080-exec-9] PropertyBinder - Building property name
[DEBUG] 2021-04-09 19:36:29.648 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-09 19:36:29.649 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-09 19:36:29.649 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-09 19:36:29.649 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-09 19:36:29.649 [http-nio-8080-exec-9] PropertyBinder - Building property species
[DEBUG] 2021-04-09 19:36:29.654 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-09 19:36:29.654 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-09 19:36:29.654 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-09 19:36:29.654 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-09 19:36:29.654 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-09 19:36:29.654 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-09 19:36:29.656 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - SessionFactory name : null
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Statistics: disabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Default null ordering: NONE
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Query language substitutions: {}
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Named query checking : enabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Second-level cache: disabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - JDBC batch size: 15
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - JPA compliance - query : 
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-09 19:36:29.698 [http-nio-8080-exec-9] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-09 19:36:29.792 [http-nio-8080-exec-9] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-09 19:36:29.808 [http-nio-8080-exec-9] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-09 19:36:29.808 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, org.apache.activemq.broker.jmx.createConnector=false, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=13.0.1+9, user.name=Walker, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, derby.system.home=C:\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=13.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=Jun 30 2020 21:49:10 UTC, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, tomee.version=7.1.4, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.path=C:\tomcat\bin\bootstrap.jar;C:\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.57.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/tomcat/lib","C:/tomcat/lib/*.jar","C:\tomcat/lib","C:\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=6.3, openejb.version=7.1.4, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=C:\tomcat, user.dir=C:\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5dcd1d96, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0, authconfigprovider.factory=false}
[DEBUG] 2021-04-09 19:36:29.839 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-09 19:36:29.839 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-09 19:36:29.839 [http-nio-8080-exec-9] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-09 19:36:29.855 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-09 19:36:29.855 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@367e0950] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@92903bf]
[DEBUG] 2021-04-09 19:36:29.917 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-09 19:36:29.917 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-09 19:36:29.949 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-09 19:36:29.949 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-09 19:36:30.261 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-09 19:36:30.261 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-09 19:36:30.261 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-09 19:36:30.261 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-09 19:36:30.261 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-09 19:36:30.261 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-09 19:36:30.261 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-09 19:36:30.292 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1843f22f]
[DEBUG] 2021-04-09 19:36:30.292 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-09 19:36:30.292 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-09 19:36:30.292 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-09 19:36:30.292 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-09 19:36:30.292 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-09 19:36:30.292 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-09 19:36:30.308 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-09 19:36:30.324 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-09 19:36:30.324 [http-nio-8080-exec-9] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-09 19:36:30.324 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b1e335f]
[DEBUG] 2021-04-09 19:36:30.324 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-09 19:36:30.324 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-09 19:36:30.324 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-09 19:36:30.324 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-09 19:36:30.324 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-09 19:36:30.324 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-09 19:36:30.324 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-09 19:36:30.324 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-09 19:36:30.324 [http-nio-8080-exec-9] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-09 19:36:30.339 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-09 19:36:30.339 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-09 19:36:30.386 [http-nio-8080-exec-9] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-09 19:36:30.386 [http-nio-8080-exec-9] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-09 19:36:30.386 [http-nio-8080-exec-9] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-09 19:36:30.402 [http-nio-8080-exec-9] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-09 19:36:30.402 [http-nio-8080-exec-9] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-09 19:36:30.402 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-09 19:36:30.402 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-09 19:36:30.402 [http-nio-8080-exec-9] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@42bfb61c
[DEBUG] 2021-04-09 19:36:30.417 [http-nio-8080-exec-9] SessionFactoryRegistry - Registering SessionFactory: ff315d29-6b1a-4da0-9193-a7e41bbe054b (<unnamed>)
[DEBUG] 2021-04-09 19:36:30.417 [http-nio-8080-exec-9] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-09 19:36:30.511 [http-nio-8080-exec-9] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-09 19:36:30.527 [http-nio-8080-exec-9] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-09 19:36:30.652 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-09 19:36:30.652 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-09 19:36:30.667 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-09 19:36:30.667 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-09 19:36:30.667 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-09 19:36:30.667 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-09 19:36:30.667 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-09 19:36:30.667 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-09 19:36:30.667 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-09 19:36:30.667 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-09 19:36:30.667 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-09 19:36:30.667 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-09 19:36:30.667 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-09 19:36:30.683 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-09 19:36:30.683 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-09 19:36:30.683 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-09 19:36:30.683 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 13:48:05.261 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 13:48:05.274 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 13:48:05.302 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 13:48:05.598 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 13:48:05.602 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 13:48:06.311 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 13:48:06.311 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 13:48:06.316 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 13:48:07.575 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 13:48:07.682 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 13:48:07.704 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 13:48:07.907 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 13:48:08.158 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1f44ddab
[DEBUG] 2021-04-12 13:48:08.158 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1f44ddab
[DEBUG] 2021-04-12 13:48:08.161 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1f44ddab
[DEBUG] 2021-04-12 13:48:08.161 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7eb6b6b6
[DEBUG] 2021-04-12 13:48:08.162 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@10ef5fa0
[DEBUG] 2021-04-12 13:48:08.163 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@b25b095
[DEBUG] 2021-04-12 13:48:08.164 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@747d1932
[DEBUG] 2021-04-12 13:48:08.164 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@747d1932
[DEBUG] 2021-04-12 13:48:08.164 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@747d1932
[DEBUG] 2021-04-12 13:48:08.165 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7c891ba7
[DEBUG] 2021-04-12 13:48:08.166 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7c891ba7
[DEBUG] 2021-04-12 13:48:08.166 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c891ba7
[DEBUG] 2021-04-12 13:48:08.167 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2a03d65c
[DEBUG] 2021-04-12 13:48:08.167 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2a03d65c
[DEBUG] 2021-04-12 13:48:08.167 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2a03d65c
[DEBUG] 2021-04-12 13:48:08.169 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4eb45fec
[DEBUG] 2021-04-12 13:48:08.170 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4eb45fec
[DEBUG] 2021-04-12 13:48:08.170 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4eb45fec
[DEBUG] 2021-04-12 13:48:08.173 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@459cfcca
[DEBUG] 2021-04-12 13:48:08.173 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@459cfcca
[DEBUG] 2021-04-12 13:48:08.173 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@459cfcca
[DEBUG] 2021-04-12 13:48:08.174 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@55a609dd
[DEBUG] 2021-04-12 13:48:08.174 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@55a609dd
[DEBUG] 2021-04-12 13:48:08.174 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@55a609dd
[DEBUG] 2021-04-12 13:48:08.175 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4d27d9d
[DEBUG] 2021-04-12 13:48:08.176 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4d27d9d
[DEBUG] 2021-04-12 13:48:08.177 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4d27d9d
[DEBUG] 2021-04-12 13:48:08.179 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@58b71ceb
[DEBUG] 2021-04-12 13:48:08.179 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@58b71ceb
[DEBUG] 2021-04-12 13:48:08.180 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1108adc8
[DEBUG] 2021-04-12 13:48:08.180 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1108adc8
[DEBUG] 2021-04-12 13:48:08.181 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5fb65013
[DEBUG] 2021-04-12 13:48:08.181 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5fb65013
[DEBUG] 2021-04-12 13:48:08.181 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1744a475
[DEBUG] 2021-04-12 13:48:08.183 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2eb917d0
[DEBUG] 2021-04-12 13:48:08.184 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@12ffd1de
[DEBUG] 2021-04-12 13:48:08.184 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@12ffd1de
[DEBUG] 2021-04-12 13:48:08.185 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@71d8cfe7
[DEBUG] 2021-04-12 13:48:08.186 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@71d8cfe7
[DEBUG] 2021-04-12 13:48:08.227 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7a2b1eb4
[DEBUG] 2021-04-12 13:48:08.228 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7a2b1eb4
[DEBUG] 2021-04-12 13:48:08.230 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@aa149ed
[DEBUG] 2021-04-12 13:48:08.231 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@aa149ed
[DEBUG] 2021-04-12 13:48:08.232 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@8ee0c23
[DEBUG] 2021-04-12 13:48:08.232 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@8ee0c23
[DEBUG] 2021-04-12 13:48:08.233 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2f508f3c
[DEBUG] 2021-04-12 13:48:08.233 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2f508f3c
[DEBUG] 2021-04-12 13:48:08.247 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@ffaaaf0
[DEBUG] 2021-04-12 13:48:08.247 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@ffaaaf0
[DEBUG] 2021-04-12 13:48:08.249 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@62d73ead
[DEBUG] 2021-04-12 13:48:08.249 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@62d73ead
[DEBUG] 2021-04-12 13:48:08.272 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@73fc518f
[DEBUG] 2021-04-12 13:48:08.273 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@73fc518f
[DEBUG] 2021-04-12 13:48:08.274 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@497aec8c
[DEBUG] 2021-04-12 13:48:08.274 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@497aec8c
[DEBUG] 2021-04-12 13:48:08.275 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1846579f
[DEBUG] 2021-04-12 13:48:08.275 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1846579f
[DEBUG] 2021-04-12 13:48:08.276 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3abfe845
[DEBUG] 2021-04-12 13:48:08.276 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3abfe845
[DEBUG] 2021-04-12 13:48:08.276 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3abfe845
[DEBUG] 2021-04-12 13:48:08.277 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7f08caf
[DEBUG] 2021-04-12 13:48:08.279 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@40e60ece
[DEBUG] 2021-04-12 13:48:08.280 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@40e60ece
[DEBUG] 2021-04-12 13:48:08.281 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@40e60ece
[DEBUG] 2021-04-12 13:48:08.282 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@61f39bb
[DEBUG] 2021-04-12 13:48:08.282 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4d654825
[DEBUG] 2021-04-12 13:48:08.284 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4d654825
[DEBUG] 2021-04-12 13:48:08.285 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@b0fc838
[DEBUG] 2021-04-12 13:48:08.285 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b0fc838
[DEBUG] 2021-04-12 13:48:08.286 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2954b5ea
[DEBUG] 2021-04-12 13:48:08.286 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2954b5ea
[DEBUG] 2021-04-12 13:48:08.287 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3ab6678b
[DEBUG] 2021-04-12 13:48:08.288 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3ab6678b
[DEBUG] 2021-04-12 13:48:08.288 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@642505c7
[DEBUG] 2021-04-12 13:48:08.288 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@642505c7
[DEBUG] 2021-04-12 13:48:08.289 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d9f64c9
[DEBUG] 2021-04-12 13:48:08.290 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2a685eba
[DEBUG] 2021-04-12 13:48:08.290 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2a685eba
[DEBUG] 2021-04-12 13:48:08.290 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2a685eba
[DEBUG] 2021-04-12 13:48:08.292 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@77d680e6
[DEBUG] 2021-04-12 13:48:08.292 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@77d680e6
[DEBUG] 2021-04-12 13:48:08.294 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@77d680e6
[DEBUG] 2021-04-12 13:48:08.295 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@37b57b54
[DEBUG] 2021-04-12 13:48:08.296 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7be71476
[DEBUG] 2021-04-12 13:48:08.297 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@154bd49b
[DEBUG] 2021-04-12 13:48:08.297 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@154bd49b
[DEBUG] 2021-04-12 13:48:08.297 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@154bd49b
[DEBUG] 2021-04-12 13:48:08.299 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2dd8239
[DEBUG] 2021-04-12 13:48:08.299 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2dd8239
[DEBUG] 2021-04-12 13:48:08.300 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2dd8239
[DEBUG] 2021-04-12 13:48:08.300 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e53b094
[DEBUG] 2021-04-12 13:48:08.300 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@cf67838
[DEBUG] 2021-04-12 13:48:08.388 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@288214b1
[DEBUG] 2021-04-12 13:48:08.388 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@288214b1
[DEBUG] 2021-04-12 13:48:08.389 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@639aba11
[DEBUG] 2021-04-12 13:48:08.390 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@fabb651
[DEBUG] 2021-04-12 13:48:08.390 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@fabb651
[DEBUG] 2021-04-12 13:48:08.392 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@144ab54
[DEBUG] 2021-04-12 13:48:08.393 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@144ab54
[DEBUG] 2021-04-12 13:48:08.394 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6c518474
[DEBUG] 2021-04-12 13:48:08.394 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5e2a3040
[DEBUG] 2021-04-12 13:48:08.397 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@74dbb1ee
[DEBUG] 2021-04-12 13:48:08.419 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5e8cda75
[DEBUG] 2021-04-12 13:48:08.419 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5e8cda75
[DEBUG] 2021-04-12 13:48:08.486 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6fd12c5
[DEBUG] 2021-04-12 13:48:08.487 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1de0a46c
[DEBUG] 2021-04-12 13:48:08.487 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4d1f1ff5
[DEBUG] 2021-04-12 13:48:08.487 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@222afc67
[DEBUG] 2021-04-12 13:48:08.487 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4c2fb9dd
[DEBUG] 2021-04-12 13:48:08.487 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@54f4a7f0
[DEBUG] 2021-04-12 13:48:08.488 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@61a1ea2c
[DEBUG] 2021-04-12 13:48:08.488 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@149debbb
[DEBUG] 2021-04-12 13:48:08.664 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 13:48:08.667 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 13:48:08.679 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 13:48:08.679 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 13:48:08.680 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 13:48:08.682 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 13:48:08.686 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 13:48:08.687 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 13:48:08.688 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 13:48:08.689 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 13:48:08.689 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 13:48:08.690 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 13:48:08.690 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 13:48:08.691 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 13:48:08.696 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 13:48:08.697 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 13:48:08.697 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 13:48:09.071 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 13:48:09.965 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 13:48:09.965 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 13:48:09.965 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 13:48:10.343 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 13:48:10.446 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 13:48:11.749 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 13:48:11.862 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 13:48:11.866 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@37b56ac7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@37c41ec0]
[DEBUG] 2021-04-12 13:48:11.982 [main] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 13:48:12.020 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 13:48:12.024 [main] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 13:48:12.039 [main] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 13:48:12.064 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 13:48:12.068 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 13:48:12.071 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 13:48:12.073 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 13:48:12.075 [main] PropertyBinder - Building property id
[DEBUG] 2021-04-12 13:48:12.078 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 13:48:12.079 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 13:48:12.080 [main] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 13:48:12.080 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 13:48:12.081 [main] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 13:48:12.081 [main] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 13:48:12.081 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 13:48:12.082 [main] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 13:48:12.082 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 13:48:12.087 [main] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 13:48:12.087 [main] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 13:48:12.087 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 13:48:12.088 [main] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 13:48:12.088 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 13:48:12.089 [main] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 13:48:12.090 [main] PropertyBinder - Building property media
[DEBUG] 2021-04-12 13:48:12.092 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 13:48:12.096 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 13:48:12.098 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 13:48:12.100 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 13:48:12.100 [main] PropertyBinder - Building property name
[DEBUG] 2021-04-12 13:48:12.100 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 13:48:12.100 [main] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 13:48:12.100 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 13:48:12.100 [main] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 13:48:12.100 [main] PropertyBinder - Building property species
[DEBUG] 2021-04-12 13:48:12.106 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 13:48:12.107 [main] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 13:48:12.107 [main] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 13:48:12.107 [main] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 13:48:12.107 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 13:48:12.107 [main] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 13:48:12.108 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 13:48:12.179 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 13:48:12.180 [main] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 13:48:12.180 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 13:48:12.180 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 13:48:12.180 [main] Settings - Statistics: disabled
[DEBUG] 2021-04-12 13:48:12.180 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 13:48:12.180 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 13:48:12.180 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 13:48:12.180 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 13:48:12.180 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 13:48:12.180 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 13:48:12.180 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 13:48:12.180 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 13:48:12.180 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 13:48:12.180 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 13:48:12.181 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 13:48:12.182 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 13:48:12.249 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 13:48:12.271 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 13:48:12.272 [main] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit-rt.jar;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\test-classes;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\classes;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Walker\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Walker\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Walker\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Walker\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Walker\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Walker\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Walker\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Walker\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Walker\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Walker\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Walker\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Walker\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Walker\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Walker\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\Walker\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Walker\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Walker\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Walker\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Walker\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-client\2.29.1\jersey-client-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\2.1.6\jakarta.ws.rs-api-2.1.6.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-common\2.29.1\jersey-common-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.3\osgi-resource-locator-1.0.3.jar;C:\Users\Walker\.m2\repository\com\sun\activation\jakarta.activation\1.2.1\jakarta.activation-1.2.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\jakarta.inject\2.6.1\jakarta.inject-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\inject\jersey-hk2\2.29.1\jersey-hk2-2.29.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-locator\2.6.1\hk2-locator-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\aopalliance-repackaged\2.6.1\aopalliance-repackaged-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-api\2.6.1\hk2-api-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-utils\2.6.1\hk2-utils-2.6.1.jar;C:\Users\Walker\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Walker\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Walker\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0\jackson-core-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 team.persistence.GenericDaoTest,getByIdSuccess, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=13.0.1+9, user.name=Walker, path.separator=;, hibernate.connection.username=****, os.version=6.3, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Walker\AppData\Local\Temp\, java.version=13.0.1, user.dir=C:\Users\Walker\IdeaProjects\fictionalCharacterAPI, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@38ee7a9d, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0}
[DEBUG] 2021-04-12 13:48:12.319 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-04-12 13:48:12.319 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 13:48:12.320 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 13:48:12.320 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@37b56ac7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3fc7c734]
[DEBUG] 2021-04-12 13:48:12.391 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 13:48:12.391 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 13:48:12.435 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 13:48:12.435 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 13:48:12.826 [main] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 13:48:12.826 [main] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 13:48:12.826 [main] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 13:48:12.826 [main] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 13:48:12.826 [main] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 13:48:12.826 [main] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 13:48:12.826 [main] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 13:48:12.859 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8c0a23f]
[DEBUG] 2021-04-12 13:48:12.860 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 13:48:12.860 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 13:48:12.860 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 13:48:12.860 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 13:48:12.860 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 13:48:12.861 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 13:48:12.869 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 13:48:12.871 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 13:48:12.873 [main] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 13:48:12.873 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@666618d6]
[DEBUG] 2021-04-12 13:48:12.873 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 13:48:12.873 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 13:48:12.873 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 13:48:12.873 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 13:48:12.873 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 13:48:12.873 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 13:48:12.874 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 13:48:12.874 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 13:48:12.874 [main] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 13:48:12.898 [main] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 13:48:12.898 [main] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 13:48:12.951 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 13:48:12.951 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 13:48:12.952 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 13:48:12.956 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 13:48:12.956 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 13:48:12.973 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 13:48:12.973 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 13:48:12.993 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@33e4b9c4
[DEBUG] 2021-04-12 13:48:12.999 [main] SessionFactoryRegistry - Registering SessionFactory: db531b27-0dda-42e3-8519-11c1c517ed2a (<unnamed>)
[DEBUG] 2021-04-12 13:48:12.999 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 13:48:13.168 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 13:48:13.265 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 13:48:13.367 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 13:48:13.368 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 13:48:13.393 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 13:48:13.395 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 13:48:13.396 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 13:48:13.396 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 13:48:13.396 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 13:48:13.396 [main] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 13:48:13.396 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 13:48:13.396 [main] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 13:48:13.396 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 13:48:13.396 [main] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 13:48:13.397 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 13:48:13.399 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 13:48:13.400 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 13:48:13.403 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 13:48:13.405 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 13:50:20.087 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 13:50:20.091 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 13:50:20.100 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 13:50:20.284 [http-nio-8080-exec-1] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 13:50:20.289 [http-nio-8080-exec-1] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 13:50:20.578 [http-nio-8080-exec-1] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 13:50:20.578 [http-nio-8080-exec-1] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 13:50:20.683 [http-nio-8080-exec-1] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 13:50:21.108 [http-nio-8080-exec-1] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 13:50:21.151 [http-nio-8080-exec-1] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 13:50:21.152 [http-nio-8080-exec-1] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 13:50:21.186 [http-nio-8080-exec-1] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 13:50:21.253 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@73a6f15a
[DEBUG] 2021-04-12 13:50:21.253 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@73a6f15a
[DEBUG] 2021-04-12 13:50:21.254 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@73a6f15a
[DEBUG] 2021-04-12 13:50:21.255 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@35794845
[DEBUG] 2021-04-12 13:50:21.256 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@dd8cec3
[DEBUG] 2021-04-12 13:50:21.256 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2aabae40
[DEBUG] 2021-04-12 13:50:21.259 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@198fc5e6
[DEBUG] 2021-04-12 13:50:21.259 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@198fc5e6
[DEBUG] 2021-04-12 13:50:21.259 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@198fc5e6
[DEBUG] 2021-04-12 13:50:21.261 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7adff721
[DEBUG] 2021-04-12 13:50:21.261 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7adff721
[DEBUG] 2021-04-12 13:50:21.262 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7adff721
[DEBUG] 2021-04-12 13:50:21.264 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4521b7f2
[DEBUG] 2021-04-12 13:50:21.265 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4521b7f2
[DEBUG] 2021-04-12 13:50:21.265 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4521b7f2
[DEBUG] 2021-04-12 13:50:21.266 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4877f0f8
[DEBUG] 2021-04-12 13:50:21.267 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4877f0f8
[DEBUG] 2021-04-12 13:50:21.267 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4877f0f8
[DEBUG] 2021-04-12 13:50:21.269 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@28f7d468
[DEBUG] 2021-04-12 13:50:21.269 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@28f7d468
[DEBUG] 2021-04-12 13:50:21.269 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@28f7d468
[DEBUG] 2021-04-12 13:50:21.271 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@d56a053
[DEBUG] 2021-04-12 13:50:21.271 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@d56a053
[DEBUG] 2021-04-12 13:50:21.272 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d56a053
[DEBUG] 2021-04-12 13:50:21.273 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2d99b095
[DEBUG] 2021-04-12 13:50:21.273 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2d99b095
[DEBUG] 2021-04-12 13:50:21.273 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2d99b095
[DEBUG] 2021-04-12 13:50:21.276 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@41a1ae6b
[DEBUG] 2021-04-12 13:50:21.276 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@41a1ae6b
[DEBUG] 2021-04-12 13:50:21.278 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2b5a3e03
[DEBUG] 2021-04-12 13:50:21.278 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2b5a3e03
[DEBUG] 2021-04-12 13:50:21.280 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@423cfa
[DEBUG] 2021-04-12 13:50:21.280 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@423cfa
[DEBUG] 2021-04-12 13:50:21.281 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57c7d93
[DEBUG] 2021-04-12 13:50:21.282 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f4e0be3
[DEBUG] 2021-04-12 13:50:21.283 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3e05bf86
[DEBUG] 2021-04-12 13:50:21.283 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3e05bf86
[DEBUG] 2021-04-12 13:50:21.285 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7fc3ed76
[DEBUG] 2021-04-12 13:50:21.285 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7fc3ed76
[DEBUG] 2021-04-12 13:50:21.361 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@31e18808
[DEBUG] 2021-04-12 13:50:21.362 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@31e18808
[DEBUG] 2021-04-12 13:50:21.363 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@22f784fb
[DEBUG] 2021-04-12 13:50:21.364 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@22f784fb
[DEBUG] 2021-04-12 13:50:21.367 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3cd86f79
[DEBUG] 2021-04-12 13:50:21.368 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3cd86f79
[DEBUG] 2021-04-12 13:50:21.370 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5341eacb
[DEBUG] 2021-04-12 13:50:21.370 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5341eacb
[DEBUG] 2021-04-12 13:50:21.372 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2d521dc
[DEBUG] 2021-04-12 13:50:21.372 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2d521dc
[DEBUG] 2021-04-12 13:50:21.373 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@663d231a
[DEBUG] 2021-04-12 13:50:21.374 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@663d231a
[DEBUG] 2021-04-12 13:50:21.377 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@77319882
[DEBUG] 2021-04-12 13:50:21.377 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@77319882
[DEBUG] 2021-04-12 13:50:21.379 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@202f6eb5
[DEBUG] 2021-04-12 13:50:21.379 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@202f6eb5
[DEBUG] 2021-04-12 13:50:21.380 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@e1d8d69
[DEBUG] 2021-04-12 13:50:21.381 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@e1d8d69
[DEBUG] 2021-04-12 13:50:21.382 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@76a3fb1a
[DEBUG] 2021-04-12 13:50:21.383 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76a3fb1a
[DEBUG] 2021-04-12 13:50:21.383 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76a3fb1a
[DEBUG] 2021-04-12 13:50:21.385 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@c37a87a
[DEBUG] 2021-04-12 13:50:21.387 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2f449085
[DEBUG] 2021-04-12 13:50:21.387 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2f449085
[DEBUG] 2021-04-12 13:50:21.387 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2f449085
[DEBUG] 2021-04-12 13:50:21.388 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@ae4f481
[DEBUG] 2021-04-12 13:50:21.390 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@144c5a37
[DEBUG] 2021-04-12 13:50:21.390 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@144c5a37
[DEBUG] 2021-04-12 13:50:21.392 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@77599653
[DEBUG] 2021-04-12 13:50:21.392 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77599653
[DEBUG] 2021-04-12 13:50:21.393 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@54c91d34
[DEBUG] 2021-04-12 13:50:21.393 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@54c91d34
[DEBUG] 2021-04-12 13:50:21.394 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4d8f06bd
[DEBUG] 2021-04-12 13:50:21.395 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4d8f06bd
[DEBUG] 2021-04-12 13:50:21.396 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6761b4ee
[DEBUG] 2021-04-12 13:50:21.396 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6761b4ee
[DEBUG] 2021-04-12 13:50:21.397 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@443a8987
[DEBUG] 2021-04-12 13:50:21.399 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2d26285e
[DEBUG] 2021-04-12 13:50:21.400 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2d26285e
[DEBUG] 2021-04-12 13:50:21.401 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2d26285e
[DEBUG] 2021-04-12 13:50:21.403 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1149705
[DEBUG] 2021-04-12 13:50:21.403 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1149705
[DEBUG] 2021-04-12 13:50:21.404 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1149705
[DEBUG] 2021-04-12 13:50:21.406 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@17bad9d7
[DEBUG] 2021-04-12 13:50:21.411 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6c5de065
[DEBUG] 2021-04-12 13:50:21.412 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@ce91389
[DEBUG] 2021-04-12 13:50:21.412 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@ce91389
[DEBUG] 2021-04-12 13:50:21.413 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@ce91389
[DEBUG] 2021-04-12 13:50:21.416 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ba28ff6
[DEBUG] 2021-04-12 13:50:21.416 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ba28ff6
[DEBUG] 2021-04-12 13:50:21.416 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ba28ff6
[DEBUG] 2021-04-12 13:50:21.417 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@609dc8d9
[DEBUG] 2021-04-12 13:50:21.418 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@71937cc2
[DEBUG] 2021-04-12 13:50:21.422 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7088df7c
[DEBUG] 2021-04-12 13:50:21.423 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7088df7c
[DEBUG] 2021-04-12 13:50:21.423 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7fc03d39
[DEBUG] 2021-04-12 13:50:21.430 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@21072127
[DEBUG] 2021-04-12 13:50:21.433 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@21072127
[DEBUG] 2021-04-12 13:50:21.437 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3448b5f8
[DEBUG] 2021-04-12 13:50:21.438 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3448b5f8
[DEBUG] 2021-04-12 13:50:21.439 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@489473ea
[DEBUG] 2021-04-12 13:50:21.446 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d691cc4
[DEBUG] 2021-04-12 13:50:21.452 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@61c8ecf3
[DEBUG] 2021-04-12 13:50:21.458 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@423851d3
[DEBUG] 2021-04-12 13:50:21.458 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@423851d3
[DEBUG] 2021-04-12 13:50:21.459 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5868f0b3
[DEBUG] 2021-04-12 13:50:21.461 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@42894b5c
[DEBUG] 2021-04-12 13:50:21.461 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6a3904a8
[DEBUG] 2021-04-12 13:50:21.462 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@466ee649
[DEBUG] 2021-04-12 13:50:21.467 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@599c7b5f
[DEBUG] 2021-04-12 13:50:21.467 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@51c7189b
[DEBUG] 2021-04-12 13:50:21.467 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@73794a4f
[DEBUG] 2021-04-12 13:50:21.468 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4294a6c7
[DEBUG] 2021-04-12 13:50:21.518 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 13:50:21.519 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 13:50:21.520 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 13:50:21.522 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 13:50:21.523 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 13:50:21.528 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 13:50:21.528 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 13:50:21.532 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 13:50:21.533 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 13:50:21.534 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 13:50:21.534 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 13:50:21.535 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 13:50:21.536 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 13:50:21.537 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 13:50:21.545 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 13:50:21.545 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 13:50:21.545 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 13:50:21.867 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 13:50:22.769 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 13:50:22.769 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 13:50:22.769 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 13:50:22.809 [http-nio-8080-exec-1] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 13:50:23.261 [http-nio-8080-exec-1] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 13:50:23.568 [http-nio-8080-exec-1] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 13:50:23.649 [http-nio-8080-exec-1] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 13:50:23.656 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6edfb56] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6054df25]
[DEBUG] 2021-04-12 13:50:23.774 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 13:50:23.853 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 13:50:23.894 [http-nio-8080-exec-1] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 13:50:23.899 [http-nio-8080-exec-1] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 13:50:23.997 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 13:50:24.023 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 13:50:24.027 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 13:50:24.032 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 13:50:24.036 [http-nio-8080-exec-1] PropertyBinder - Building property id
[DEBUG] 2021-04-12 13:50:24.047 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 13:50:24.049 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 13:50:24.051 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 13:50:24.051 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 13:50:24.051 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 13:50:24.051 [http-nio-8080-exec-1] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 13:50:24.052 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 13:50:24.052 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 13:50:24.052 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 13:50:24.052 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 13:50:24.052 [http-nio-8080-exec-1] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 13:50:24.052 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 13:50:24.052 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 13:50:24.052 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 13:50:24.052 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 13:50:24.052 [http-nio-8080-exec-1] PropertyBinder - Building property media
[DEBUG] 2021-04-12 13:50:24.054 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 13:50:24.055 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 13:50:24.055 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 13:50:24.055 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 13:50:24.055 [http-nio-8080-exec-1] PropertyBinder - Building property name
[DEBUG] 2021-04-12 13:50:24.055 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 13:50:24.055 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 13:50:24.055 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 13:50:24.055 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 13:50:24.055 [http-nio-8080-exec-1] PropertyBinder - Building property species
[DEBUG] 2021-04-12 13:50:24.062 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 13:50:24.062 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 13:50:24.062 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 13:50:24.062 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 13:50:24.062 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 13:50:24.062 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 13:50:24.064 [http-nio-8080-exec-1] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 13:50:24.156 [http-nio-8080-exec-1] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 13:50:24.158 [http-nio-8080-exec-1] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 13:50:24.158 [http-nio-8080-exec-1] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 13:50:24.158 [http-nio-8080-exec-1] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 13:50:24.158 [http-nio-8080-exec-1] Settings - Statistics: disabled
[DEBUG] 2021-04-12 13:50:24.161 [http-nio-8080-exec-1] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 13:50:24.161 [http-nio-8080-exec-1] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 13:50:24.161 [http-nio-8080-exec-1] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 13:50:24.161 [http-nio-8080-exec-1] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 13:50:24.161 [http-nio-8080-exec-1] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 13:50:24.161 [http-nio-8080-exec-1] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 13:50:24.161 [http-nio-8080-exec-1] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 13:50:24.161 [http-nio-8080-exec-1] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 13:50:24.161 [http-nio-8080-exec-1] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 13:50:24.161 [http-nio-8080-exec-1] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 13:50:24.161 [http-nio-8080-exec-1] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 13:50:24.162 [http-nio-8080-exec-1] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 13:50:24.162 [http-nio-8080-exec-1] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 13:50:24.162 [http-nio-8080-exec-1] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 13:50:24.163 [http-nio-8080-exec-1] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 13:50:24.167 [http-nio-8080-exec-1] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 13:50:24.167 [http-nio-8080-exec-1] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 13:50:24.167 [http-nio-8080-exec-1] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 13:50:24.167 [http-nio-8080-exec-1] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 13:50:24.167 [http-nio-8080-exec-1] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 13:50:24.167 [http-nio-8080-exec-1] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 13:50:24.167 [http-nio-8080-exec-1] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 13:50:24.167 [http-nio-8080-exec-1] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 13:50:24.167 [http-nio-8080-exec-1] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 13:50:24.167 [http-nio-8080-exec-1] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 13:50:24.167 [http-nio-8080-exec-1] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 13:50:24.167 [http-nio-8080-exec-1] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 13:50:24.167 [http-nio-8080-exec-1] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 13:50:24.167 [http-nio-8080-exec-1] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 13:50:24.167 [http-nio-8080-exec-1] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 13:50:24.168 [http-nio-8080-exec-1] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 13:50:24.168 [http-nio-8080-exec-1] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 13:50:24.168 [http-nio-8080-exec-1] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 13:50:24.168 [http-nio-8080-exec-1] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 13:50:24.288 [http-nio-8080-exec-1] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 13:50:24.329 [http-nio-8080-exec-1] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 13:50:24.329 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, org.apache.activemq.broker.jmx.createConnector=false, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=13.0.1+9, user.name=Walker, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, derby.system.home=C:\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=13.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=Jun 30 2020 21:49:10 UTC, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, tomee.version=7.1.4, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.path=C:\tomcat\bin\bootstrap.jar;C:\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.57.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/tomcat/lib","C:/tomcat/lib/*.jar","C:\tomcat/lib","C:\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=6.3, openejb.version=7.1.4, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=C:\tomcat, user.dir=C:\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7995c09b, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0, authconfigprovider.factory=false}
[DEBUG] 2021-04-12 13:50:24.364 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 13:50:24.364 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 13:50:24.368 [http-nio-8080-exec-1] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 13:50:24.369 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 13:50:24.369 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6edfb56] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@470ad0b7]
[DEBUG] 2021-04-12 13:50:24.454 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 13:50:24.454 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 13:50:24.489 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 13:50:24.489 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 13:50:25.015 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 13:50:25.015 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 13:50:25.015 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 13:50:25.015 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 13:50:25.015 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 13:50:25.015 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 13:50:25.016 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 13:50:25.070 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e7d83c6]
[DEBUG] 2021-04-12 13:50:25.072 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 13:50:25.073 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 13:50:25.073 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 13:50:25.074 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 13:50:25.084 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 13:50:25.085 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 13:50:25.123 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 13:50:25.132 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 13:50:25.137 [http-nio-8080-exec-1] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 13:50:25.137 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bf9a199]
[DEBUG] 2021-04-12 13:50:25.137 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 13:50:25.137 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 13:50:25.137 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 13:50:25.137 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 13:50:25.137 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 13:50:25.137 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 13:50:25.138 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 13:50:25.138 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 13:50:25.138 [http-nio-8080-exec-1] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 13:50:25.168 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 13:50:25.169 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 13:50:25.230 [http-nio-8080-exec-1] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 13:50:25.230 [http-nio-8080-exec-1] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 13:50:25.231 [http-nio-8080-exec-1] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 13:50:25.248 [http-nio-8080-exec-1] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 13:50:25.248 [http-nio-8080-exec-1] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 13:50:25.250 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 13:50:25.250 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 13:50:25.254 [http-nio-8080-exec-1] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@20c064c
[DEBUG] 2021-04-12 13:50:25.256 [http-nio-8080-exec-1] SessionFactoryRegistry - Registering SessionFactory: 3b88d9f4-ed0c-4212-a378-a3ef518c67eb (<unnamed>)
[DEBUG] 2021-04-12 13:50:25.256 [http-nio-8080-exec-1] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 13:50:25.530 [http-nio-8080-exec-1] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 13:50:25.571 [http-nio-8080-exec-1] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 13:50:25.711 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 13:50:25.712 [http-nio-8080-exec-1] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 13:50:25.727 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 13:50:25.728 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 13:50:25.728 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 13:50:25.728 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 13:50:25.728 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 13:50:25.728 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 13:50:25.728 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 13:50:25.728 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 13:50:25.728 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 13:50:25.728 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 13:50:25.728 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 13:50:25.730 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 13:50:25.730 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 13:50:25.731 [http-nio-8080-exec-1] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 13:50:25.731 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 14:36:41.983 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 14:36:41.987 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 14:36:41.995 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 14:36:42.159 [http-nio-8080-exec-9] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 14:36:42.164 [http-nio-8080-exec-9] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 14:36:42.365 [http-nio-8080-exec-9] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 14:36:42.365 [http-nio-8080-exec-9] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 14:36:42.398 [http-nio-8080-exec-9] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 14:36:42.759 [http-nio-8080-exec-9] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 14:36:42.790 [http-nio-8080-exec-9] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 14:36:42.791 [http-nio-8080-exec-9] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 14:36:42.826 [http-nio-8080-exec-9] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 14:36:42.880 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@30bbff03
[DEBUG] 2021-04-12 14:36:42.881 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@30bbff03
[DEBUG] 2021-04-12 14:36:42.881 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@30bbff03
[DEBUG] 2021-04-12 14:36:42.882 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@426694e1
[DEBUG] 2021-04-12 14:36:42.883 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@749a5587
[DEBUG] 2021-04-12 14:36:42.884 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@e67c99
[DEBUG] 2021-04-12 14:36:42.885 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@64995541
[DEBUG] 2021-04-12 14:36:42.885 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@64995541
[DEBUG] 2021-04-12 14:36:42.885 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@64995541
[DEBUG] 2021-04-12 14:36:42.887 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@a8050a8
[DEBUG] 2021-04-12 14:36:42.887 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@a8050a8
[DEBUG] 2021-04-12 14:36:42.887 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@a8050a8
[DEBUG] 2021-04-12 14:36:42.890 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@56dc1032
[DEBUG] 2021-04-12 14:36:42.891 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@56dc1032
[DEBUG] 2021-04-12 14:36:42.891 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56dc1032
[DEBUG] 2021-04-12 14:36:42.893 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@d58f522
[DEBUG] 2021-04-12 14:36:42.893 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@d58f522
[DEBUG] 2021-04-12 14:36:42.893 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@d58f522
[DEBUG] 2021-04-12 14:36:42.894 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@138bec9f
[DEBUG] 2021-04-12 14:36:42.894 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@138bec9f
[DEBUG] 2021-04-12 14:36:42.894 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@138bec9f
[DEBUG] 2021-04-12 14:36:42.896 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7fd3359
[DEBUG] 2021-04-12 14:36:42.896 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7fd3359
[DEBUG] 2021-04-12 14:36:42.897 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7fd3359
[DEBUG] 2021-04-12 14:36:42.898 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@a176ee2
[DEBUG] 2021-04-12 14:36:42.899 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@a176ee2
[DEBUG] 2021-04-12 14:36:42.899 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a176ee2
[DEBUG] 2021-04-12 14:36:42.900 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@44148eef
[DEBUG] 2021-04-12 14:36:42.900 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@44148eef
[DEBUG] 2021-04-12 14:36:42.902 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3bd89c6d
[DEBUG] 2021-04-12 14:36:42.903 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3bd89c6d
[DEBUG] 2021-04-12 14:36:42.907 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5c2c5e78
[DEBUG] 2021-04-12 14:36:42.907 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5c2c5e78
[DEBUG] 2021-04-12 14:36:42.908 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@47419bf3
[DEBUG] 2021-04-12 14:36:42.909 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@616a6b0d
[DEBUG] 2021-04-12 14:36:42.911 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6172cd18
[DEBUG] 2021-04-12 14:36:42.911 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6172cd18
[DEBUG] 2021-04-12 14:36:42.912 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7d774a0
[DEBUG] 2021-04-12 14:36:42.912 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7d774a0
[DEBUG] 2021-04-12 14:36:42.916 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7e474d9b
[DEBUG] 2021-04-12 14:36:42.916 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7e474d9b
[DEBUG] 2021-04-12 14:36:42.918 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4ac5e3b9
[DEBUG] 2021-04-12 14:36:42.918 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4ac5e3b9
[DEBUG] 2021-04-12 14:36:42.919 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2bf4738b
[DEBUG] 2021-04-12 14:36:42.920 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2bf4738b
[DEBUG] 2021-04-12 14:36:42.921 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@183e4323
[DEBUG] 2021-04-12 14:36:42.921 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@183e4323
[DEBUG] 2021-04-12 14:36:42.923 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@31c02905
[DEBUG] 2021-04-12 14:36:42.923 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@31c02905
[DEBUG] 2021-04-12 14:36:42.925 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1246d45d
[DEBUG] 2021-04-12 14:36:42.925 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1246d45d
[DEBUG] 2021-04-12 14:36:42.927 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43c4c530
[DEBUG] 2021-04-12 14:36:42.927 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43c4c530
[DEBUG] 2021-04-12 14:36:42.929 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1ec47fc1
[DEBUG] 2021-04-12 14:36:42.929 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1ec47fc1
[DEBUG] 2021-04-12 14:36:42.930 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@c575c1c
[DEBUG] 2021-04-12 14:36:42.930 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@c575c1c
[DEBUG] 2021-04-12 14:36:42.932 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@35d50801
[DEBUG] 2021-04-12 14:36:42.932 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35d50801
[DEBUG] 2021-04-12 14:36:42.932 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35d50801
[DEBUG] 2021-04-12 14:36:42.935 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@94ca557
[DEBUG] 2021-04-12 14:36:42.936 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@21bcc08b
[DEBUG] 2021-04-12 14:36:42.936 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21bcc08b
[DEBUG] 2021-04-12 14:36:42.937 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21bcc08b
[DEBUG] 2021-04-12 14:36:42.938 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@58cbcc23
[DEBUG] 2021-04-12 14:36:42.940 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3c616dfd
[DEBUG] 2021-04-12 14:36:42.940 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3c616dfd
[DEBUG] 2021-04-12 14:36:42.941 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6c3f6cbb
[DEBUG] 2021-04-12 14:36:42.941 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6c3f6cbb
[DEBUG] 2021-04-12 14:36:42.943 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3bba476a
[DEBUG] 2021-04-12 14:36:42.943 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3bba476a
[DEBUG] 2021-04-12 14:36:42.944 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1d4a6ca6
[DEBUG] 2021-04-12 14:36:42.944 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1d4a6ca6
[DEBUG] 2021-04-12 14:36:42.945 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7acad9cd
[DEBUG] 2021-04-12 14:36:42.945 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7acad9cd
[DEBUG] 2021-04-12 14:36:42.946 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5d7d5231
[DEBUG] 2021-04-12 14:36:42.947 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7ff9c697
[DEBUG] 2021-04-12 14:36:42.947 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7ff9c697
[DEBUG] 2021-04-12 14:36:42.947 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7ff9c697
[DEBUG] 2021-04-12 14:36:42.949 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@74700424
[DEBUG] 2021-04-12 14:36:42.949 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@74700424
[DEBUG] 2021-04-12 14:36:42.949 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@74700424
[DEBUG] 2021-04-12 14:36:42.950 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6aaec9ed
[DEBUG] 2021-04-12 14:36:42.951 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@48b00604
[DEBUG] 2021-04-12 14:36:42.952 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@165209ae
[DEBUG] 2021-04-12 14:36:42.952 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@165209ae
[DEBUG] 2021-04-12 14:36:42.952 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@165209ae
[DEBUG] 2021-04-12 14:36:42.954 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@10189921
[DEBUG] 2021-04-12 14:36:42.954 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@10189921
[DEBUG] 2021-04-12 14:36:42.954 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@10189921
[DEBUG] 2021-04-12 14:36:42.955 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@21015c69
[DEBUG] 2021-04-12 14:36:42.955 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4ab3b501
[DEBUG] 2021-04-12 14:36:42.958 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2b8bdd60
[DEBUG] 2021-04-12 14:36:42.958 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2b8bdd60
[DEBUG] 2021-04-12 14:36:42.959 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3eef1fc5
[DEBUG] 2021-04-12 14:36:42.961 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@59d16244
[DEBUG] 2021-04-12 14:36:42.961 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@59d16244
[DEBUG] 2021-04-12 14:36:42.964 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4cd720b6
[DEBUG] 2021-04-12 14:36:42.964 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4cd720b6
[DEBUG] 2021-04-12 14:36:42.964 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7bde532b
[DEBUG] 2021-04-12 14:36:42.965 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@c408b31
[DEBUG] 2021-04-12 14:36:42.967 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5f628a78
[DEBUG] 2021-04-12 14:36:42.971 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6d9f0240
[DEBUG] 2021-04-12 14:36:42.971 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6d9f0240
[DEBUG] 2021-04-12 14:36:42.973 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4edca298
[DEBUG] 2021-04-12 14:36:42.973 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4b50b2e5
[DEBUG] 2021-04-12 14:36:42.973 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@63020676
[DEBUG] 2021-04-12 14:36:42.973 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1989dd82
[DEBUG] 2021-04-12 14:36:42.974 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@326a6449
[DEBUG] 2021-04-12 14:36:42.974 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7ce32f7b
[DEBUG] 2021-04-12 14:36:42.974 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f21b727
[DEBUG] 2021-04-12 14:36:42.975 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58931e8c
[DEBUG] 2021-04-12 14:36:43.016 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 14:36:43.017 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 14:36:43.018 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 14:36:43.020 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 14:36:43.021 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 14:36:43.023 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 14:36:43.024 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 14:36:43.026 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 14:36:43.027 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 14:36:43.027 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 14:36:43.028 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 14:36:43.029 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 14:36:43.029 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 14:36:43.029 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 14:36:43.037 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 14:36:43.037 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 14:36:43.037 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 14:36:43.302 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 14:36:43.923 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 14:36:43.923 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 14:36:43.923 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 14:36:43.960 [http-nio-8080-exec-9] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 14:36:43.983 [http-nio-8080-exec-9] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 14:36:44.036 [http-nio-8080-exec-9] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 14:36:44.085 [http-nio-8080-exec-9] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 14:36:44.091 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@55b818d7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@f932dc9]
[DEBUG] 2021-04-12 14:36:44.165 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 14:36:44.199 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 14:36:44.211 [http-nio-8080-exec-9] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 14:36:44.216 [http-nio-8080-exec-9] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 14:36:44.262 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 14:36:44.266 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 14:36:44.269 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 14:36:44.274 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 14:36:44.277 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2021-04-12 14:36:44.283 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 14:36:44.285 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 14:36:44.287 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 14:36:44.287 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 14:36:44.287 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 14:36:44.287 [http-nio-8080-exec-9] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 14:36:44.288 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 14:36:44.289 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 14:36:44.289 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 14:36:44.289 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 14:36:44.289 [http-nio-8080-exec-9] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 14:36:44.290 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 14:36:44.290 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 14:36:44.290 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 14:36:44.290 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 14:36:44.291 [http-nio-8080-exec-9] PropertyBinder - Building property media
[DEBUG] 2021-04-12 14:36:44.293 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 14:36:44.295 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 14:36:44.295 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 14:36:44.295 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 14:36:44.295 [http-nio-8080-exec-9] PropertyBinder - Building property name
[DEBUG] 2021-04-12 14:36:44.295 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 14:36:44.296 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 14:36:44.296 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 14:36:44.296 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 14:36:44.296 [http-nio-8080-exec-9] PropertyBinder - Building property species
[DEBUG] 2021-04-12 14:36:44.315 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 14:36:44.315 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 14:36:44.315 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 14:36:44.315 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 14:36:44.315 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 14:36:44.315 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 14:36:44.317 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 14:36:44.366 [http-nio-8080-exec-9] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 14:36:44.367 [http-nio-8080-exec-9] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 14:36:44.367 [http-nio-8080-exec-9] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 14:36:44.367 [http-nio-8080-exec-9] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 14:36:44.367 [http-nio-8080-exec-9] Settings - Statistics: disabled
[DEBUG] 2021-04-12 14:36:44.367 [http-nio-8080-exec-9] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 14:36:44.367 [http-nio-8080-exec-9] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 14:36:44.367 [http-nio-8080-exec-9] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 14:36:44.367 [http-nio-8080-exec-9] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 14:36:44.367 [http-nio-8080-exec-9] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 14:36:44.367 [http-nio-8080-exec-9] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 14:36:44.367 [http-nio-8080-exec-9] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 14:36:44.367 [http-nio-8080-exec-9] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 14:36:44.367 [http-nio-8080-exec-9] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 14:36:44.367 [http-nio-8080-exec-9] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 14:36:44.368 [http-nio-8080-exec-9] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 14:36:44.450 [http-nio-8080-exec-9] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 14:36:44.472 [http-nio-8080-exec-9] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 14:36:44.473 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, org.apache.activemq.broker.jmx.createConnector=false, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=13.0.1+9, user.name=Walker, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, derby.system.home=C:\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=13.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=Jun 30 2020 21:49:10 UTC, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, tomee.version=7.1.4, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.path=C:\tomcat\bin\bootstrap.jar;C:\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.57.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/tomcat/lib","C:/tomcat/lib/*.jar","C:\tomcat/lib","C:\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=6.3, openejb.version=7.1.4, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=C:\tomcat, user.dir=C:\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5c74ff64, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0, authconfigprovider.factory=false}
[DEBUG] 2021-04-12 14:36:44.497 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 14:36:44.497 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 14:36:44.501 [http-nio-8080-exec-9] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 14:36:44.508 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 14:36:44.508 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@55b818d7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@33a18064]
[DEBUG] 2021-04-12 14:36:44.573 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 14:36:44.573 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 14:36:44.601 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 14:36:44.601 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 14:36:44.914 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 14:36:44.915 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 14:36:44.915 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 14:36:44.915 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 14:36:44.915 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 14:36:44.915 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 14:36:44.915 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 14:36:44.950 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72f6e35c]
[DEBUG] 2021-04-12 14:36:44.952 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 14:36:44.952 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 14:36:44.952 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 14:36:44.952 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 14:36:44.952 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 14:36:44.953 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 14:36:44.969 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 14:36:44.976 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 14:36:44.978 [http-nio-8080-exec-9] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 14:36:44.979 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17e08b93]
[DEBUG] 2021-04-12 14:36:44.979 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 14:36:44.979 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 14:36:44.979 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 14:36:44.979 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 14:36:44.979 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 14:36:44.979 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 14:36:44.979 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 14:36:44.979 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 14:36:44.979 [http-nio-8080-exec-9] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 14:36:44.998 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 14:36:44.998 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 14:36:45.037 [http-nio-8080-exec-9] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 14:36:45.038 [http-nio-8080-exec-9] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 14:36:45.039 [http-nio-8080-exec-9] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 14:36:45.050 [http-nio-8080-exec-9] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 14:36:45.050 [http-nio-8080-exec-9] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 14:36:45.051 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 14:36:45.052 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 14:36:45.057 [http-nio-8080-exec-9] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@102e9f85
[DEBUG] 2021-04-12 14:36:45.059 [http-nio-8080-exec-9] SessionFactoryRegistry - Registering SessionFactory: 4a04a332-0c5b-41d7-b9de-6096fd35d80a (<unnamed>)
[DEBUG] 2021-04-12 14:36:45.059 [http-nio-8080-exec-9] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 14:36:45.170 [http-nio-8080-exec-9] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 14:36:45.193 [http-nio-8080-exec-9] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 14:36:45.215 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 14:36:45.216 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 14:36:45.231 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 14:36:45.232 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 14:36:45.232 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 14:36:45.232 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 14:36:45.232 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 14:36:45.232 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 14:36:45.232 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 14:36:45.233 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 14:36:45.233 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 14:36:45.233 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 14:36:45.233 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 14:36:45.234 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 14:36:45.235 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 14:36:45.235 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 14:36:45.235 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 14:54:58.800 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 14:54:58.804 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 14:54:58.811 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 14:54:58.939 [http-nio-8080-exec-2] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 14:54:58.944 [http-nio-8080-exec-2] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 14:54:59.147 [http-nio-8080-exec-2] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 14:54:59.148 [http-nio-8080-exec-2] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 14:54:59.174 [http-nio-8080-exec-2] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 14:54:59.554 [http-nio-8080-exec-2] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 14:54:59.584 [http-nio-8080-exec-2] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 14:54:59.585 [http-nio-8080-exec-2] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 14:54:59.616 [http-nio-8080-exec-2] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 14:54:59.671 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@54b6ea85
[DEBUG] 2021-04-12 14:54:59.671 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@54b6ea85
[DEBUG] 2021-04-12 14:54:59.672 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@54b6ea85
[DEBUG] 2021-04-12 14:54:59.673 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6f336180
[DEBUG] 2021-04-12 14:54:59.673 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@191c978d
[DEBUG] 2021-04-12 14:54:59.674 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@ef65838
[DEBUG] 2021-04-12 14:54:59.678 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@153ba1d4
[DEBUG] 2021-04-12 14:54:59.678 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@153ba1d4
[DEBUG] 2021-04-12 14:54:59.678 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@153ba1d4
[DEBUG] 2021-04-12 14:54:59.680 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@59d3cf4a
[DEBUG] 2021-04-12 14:54:59.680 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@59d3cf4a
[DEBUG] 2021-04-12 14:54:59.680 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@59d3cf4a
[DEBUG] 2021-04-12 14:54:59.682 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@246d1b1d
[DEBUG] 2021-04-12 14:54:59.683 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@246d1b1d
[DEBUG] 2021-04-12 14:54:59.683 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@246d1b1d
[DEBUG] 2021-04-12 14:54:59.684 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@61c8ff32
[DEBUG] 2021-04-12 14:54:59.684 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@61c8ff32
[DEBUG] 2021-04-12 14:54:59.684 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@61c8ff32
[DEBUG] 2021-04-12 14:54:59.686 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@558911e4
[DEBUG] 2021-04-12 14:54:59.686 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@558911e4
[DEBUG] 2021-04-12 14:54:59.686 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@558911e4
[DEBUG] 2021-04-12 14:54:59.687 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@744fb756
[DEBUG] 2021-04-12 14:54:59.688 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@744fb756
[DEBUG] 2021-04-12 14:54:59.688 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@744fb756
[DEBUG] 2021-04-12 14:54:59.690 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@181f29ea
[DEBUG] 2021-04-12 14:54:59.690 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@181f29ea
[DEBUG] 2021-04-12 14:54:59.691 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@181f29ea
[DEBUG] 2021-04-12 14:54:59.693 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1ae65b70
[DEBUG] 2021-04-12 14:54:59.693 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1ae65b70
[DEBUG] 2021-04-12 14:54:59.694 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@399d2705
[DEBUG] 2021-04-12 14:54:59.694 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@399d2705
[DEBUG] 2021-04-12 14:54:59.695 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4a5de566
[DEBUG] 2021-04-12 14:54:59.696 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4a5de566
[DEBUG] 2021-04-12 14:54:59.696 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@637d35ba
[DEBUG] 2021-04-12 14:54:59.699 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@61f036b8
[DEBUG] 2021-04-12 14:54:59.700 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1f126d5b
[DEBUG] 2021-04-12 14:54:59.700 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1f126d5b
[DEBUG] 2021-04-12 14:54:59.702 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4f062632
[DEBUG] 2021-04-12 14:54:59.702 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4f062632
[DEBUG] 2021-04-12 14:54:59.706 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@44dfe1b6
[DEBUG] 2021-04-12 14:54:59.706 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@44dfe1b6
[DEBUG] 2021-04-12 14:54:59.710 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2fa478
[DEBUG] 2021-04-12 14:54:59.711 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2fa478
[DEBUG] 2021-04-12 14:54:59.713 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3267a48a
[DEBUG] 2021-04-12 14:54:59.714 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3267a48a
[DEBUG] 2021-04-12 14:54:59.716 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6f268a2c
[DEBUG] 2021-04-12 14:54:59.716 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6f268a2c
[DEBUG] 2021-04-12 14:54:59.717 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a55ced2
[DEBUG] 2021-04-12 14:54:59.717 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a55ced2
[DEBUG] 2021-04-12 14:54:59.719 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1b42b553
[DEBUG] 2021-04-12 14:54:59.719 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1b42b553
[DEBUG] 2021-04-12 14:54:59.721 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@a6cf67f
[DEBUG] 2021-04-12 14:54:59.721 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@a6cf67f
[DEBUG] 2021-04-12 14:54:59.723 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@419cd1ce
[DEBUG] 2021-04-12 14:54:59.723 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@419cd1ce
[DEBUG] 2021-04-12 14:54:59.724 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3fc9a6c2
[DEBUG] 2021-04-12 14:54:59.724 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3fc9a6c2
[DEBUG] 2021-04-12 14:54:59.727 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@61be54eb
[DEBUG] 2021-04-12 14:54:59.727 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@61be54eb
[DEBUG] 2021-04-12 14:54:59.727 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@61be54eb
[DEBUG] 2021-04-12 14:54:59.730 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@27da1e29
[DEBUG] 2021-04-12 14:54:59.731 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6a06f935
[DEBUG] 2021-04-12 14:54:59.732 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6a06f935
[DEBUG] 2021-04-12 14:54:59.733 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6a06f935
[DEBUG] 2021-04-12 14:54:59.734 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437a1598
[DEBUG] 2021-04-12 14:54:59.735 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@29880f6b
[DEBUG] 2021-04-12 14:54:59.735 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29880f6b
[DEBUG] 2021-04-12 14:54:59.736 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@a7f9ee2
[DEBUG] 2021-04-12 14:54:59.737 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@a7f9ee2
[DEBUG] 2021-04-12 14:54:59.738 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@22e09d1b
[DEBUG] 2021-04-12 14:54:59.738 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@22e09d1b
[DEBUG] 2021-04-12 14:54:59.739 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@342ae928
[DEBUG] 2021-04-12 14:54:59.740 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@342ae928
[DEBUG] 2021-04-12 14:54:59.741 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@31656c48
[DEBUG] 2021-04-12 14:54:59.741 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@31656c48
[DEBUG] 2021-04-12 14:54:59.742 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@56c643bc
[DEBUG] 2021-04-12 14:54:59.744 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4930b19d
[DEBUG] 2021-04-12 14:54:59.744 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4930b19d
[DEBUG] 2021-04-12 14:54:59.744 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4930b19d
[DEBUG] 2021-04-12 14:54:59.745 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29284796
[DEBUG] 2021-04-12 14:54:59.745 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29284796
[DEBUG] 2021-04-12 14:54:59.745 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29284796
[DEBUG] 2021-04-12 14:54:59.747 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6baa09cd
[DEBUG] 2021-04-12 14:54:59.748 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@41f195e
[DEBUG] 2021-04-12 14:54:59.749 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4449b300
[DEBUG] 2021-04-12 14:54:59.749 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4449b300
[DEBUG] 2021-04-12 14:54:59.751 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4449b300
[DEBUG] 2021-04-12 14:54:59.752 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@11fb1532
[DEBUG] 2021-04-12 14:54:59.753 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@11fb1532
[DEBUG] 2021-04-12 14:54:59.753 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@11fb1532
[DEBUG] 2021-04-12 14:54:59.753 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@247e4431
[DEBUG] 2021-04-12 14:54:59.754 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@489f57d7
[DEBUG] 2021-04-12 14:54:59.756 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@589b6dae
[DEBUG] 2021-04-12 14:54:59.756 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@589b6dae
[DEBUG] 2021-04-12 14:54:59.757 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@407ade2c
[DEBUG] 2021-04-12 14:54:59.762 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2f776b3f
[DEBUG] 2021-04-12 14:54:59.762 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2f776b3f
[DEBUG] 2021-04-12 14:54:59.763 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2fa0b442
[DEBUG] 2021-04-12 14:54:59.764 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2fa0b442
[DEBUG] 2021-04-12 14:54:59.765 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@44ece305
[DEBUG] 2021-04-12 14:54:59.766 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@64f3c47
[DEBUG] 2021-04-12 14:54:59.768 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7167922d
[DEBUG] 2021-04-12 14:54:59.772 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5912c3a0
[DEBUG] 2021-04-12 14:54:59.773 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5912c3a0
[DEBUG] 2021-04-12 14:54:59.774 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7a844de9
[DEBUG] 2021-04-12 14:54:59.774 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ce75375
[DEBUG] 2021-04-12 14:54:59.774 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@764ebcbd
[DEBUG] 2021-04-12 14:54:59.774 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@672258c1
[DEBUG] 2021-04-12 14:54:59.778 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3f11bac9
[DEBUG] 2021-04-12 14:54:59.778 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@95b2aa5
[DEBUG] 2021-04-12 14:54:59.778 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@af3c467
[DEBUG] 2021-04-12 14:54:59.778 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7f6261a8
[DEBUG] 2021-04-12 14:54:59.836 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 14:54:59.837 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 14:54:59.838 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 14:54:59.840 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 14:54:59.842 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 14:54:59.843 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 14:54:59.844 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 14:54:59.845 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 14:54:59.846 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 14:54:59.847 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 14:54:59.847 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 14:54:59.848 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 14:54:59.848 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 14:54:59.849 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 14:54:59.860 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 14:54:59.860 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 14:54:59.860 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 14:55:00.166 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 14:55:00.778 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 14:55:00.779 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 14:55:00.779 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 14:55:00.819 [http-nio-8080-exec-2] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 14:55:00.848 [http-nio-8080-exec-2] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 14:55:00.896 [http-nio-8080-exec-2] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 14:55:00.942 [http-nio-8080-exec-2] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 14:55:00.948 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@efe3a59] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@353c1c3d]
[DEBUG] 2021-04-12 14:55:01.019 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 14:55:01.052 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 14:55:01.062 [http-nio-8080-exec-2] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 14:55:01.066 [http-nio-8080-exec-2] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 14:55:01.100 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 14:55:01.104 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 14:55:01.106 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 14:55:01.110 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 14:55:01.113 [http-nio-8080-exec-2] PropertyBinder - Building property id
[DEBUG] 2021-04-12 14:55:01.119 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 14:55:01.120 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 14:55:01.121 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 14:55:01.121 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 14:55:01.121 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 14:55:01.121 [http-nio-8080-exec-2] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 14:55:01.122 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 14:55:01.122 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 14:55:01.122 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 14:55:01.122 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 14:55:01.122 [http-nio-8080-exec-2] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 14:55:01.122 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 14:55:01.122 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 14:55:01.122 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 14:55:01.122 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 14:55:01.123 [http-nio-8080-exec-2] PropertyBinder - Building property media
[DEBUG] 2021-04-12 14:55:01.129 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 14:55:01.130 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 14:55:01.130 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 14:55:01.130 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 14:55:01.130 [http-nio-8080-exec-2] PropertyBinder - Building property name
[DEBUG] 2021-04-12 14:55:01.130 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 14:55:01.131 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 14:55:01.131 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 14:55:01.131 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 14:55:01.131 [http-nio-8080-exec-2] PropertyBinder - Building property species
[DEBUG] 2021-04-12 14:55:01.135 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 14:55:01.135 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 14:55:01.135 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 14:55:01.135 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 14:55:01.135 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 14:55:01.135 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 14:55:01.136 [http-nio-8080-exec-2] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 14:55:01.182 [http-nio-8080-exec-2] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 14:55:01.182 [http-nio-8080-exec-2] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 14:55:01.183 [http-nio-8080-exec-2] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 14:55:01.183 [http-nio-8080-exec-2] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 14:55:01.183 [http-nio-8080-exec-2] Settings - Statistics: disabled
[DEBUG] 2021-04-12 14:55:01.183 [http-nio-8080-exec-2] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 14:55:01.183 [http-nio-8080-exec-2] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 14:55:01.183 [http-nio-8080-exec-2] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 14:55:01.183 [http-nio-8080-exec-2] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 14:55:01.183 [http-nio-8080-exec-2] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 14:55:01.183 [http-nio-8080-exec-2] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 14:55:01.183 [http-nio-8080-exec-2] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 14:55:01.183 [http-nio-8080-exec-2] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 14:55:01.183 [http-nio-8080-exec-2] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 14:55:01.183 [http-nio-8080-exec-2] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 14:55:01.184 [http-nio-8080-exec-2] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 14:55:01.184 [http-nio-8080-exec-2] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 14:55:01.184 [http-nio-8080-exec-2] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 14:55:01.184 [http-nio-8080-exec-2] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 14:55:01.184 [http-nio-8080-exec-2] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 14:55:01.184 [http-nio-8080-exec-2] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 14:55:01.184 [http-nio-8080-exec-2] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 14:55:01.184 [http-nio-8080-exec-2] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 14:55:01.184 [http-nio-8080-exec-2] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 14:55:01.184 [http-nio-8080-exec-2] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 14:55:01.184 [http-nio-8080-exec-2] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 14:55:01.184 [http-nio-8080-exec-2] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 14:55:01.184 [http-nio-8080-exec-2] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 14:55:01.184 [http-nio-8080-exec-2] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 14:55:01.184 [http-nio-8080-exec-2] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 14:55:01.185 [http-nio-8080-exec-2] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 14:55:01.186 [http-nio-8080-exec-2] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 14:55:01.186 [http-nio-8080-exec-2] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 14:55:01.186 [http-nio-8080-exec-2] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 14:55:01.186 [http-nio-8080-exec-2] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 14:55:01.186 [http-nio-8080-exec-2] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 14:55:01.186 [http-nio-8080-exec-2] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 14:55:01.186 [http-nio-8080-exec-2] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 14:55:01.186 [http-nio-8080-exec-2] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 14:55:01.275 [http-nio-8080-exec-2] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 14:55:01.298 [http-nio-8080-exec-2] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 14:55:01.298 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, org.apache.activemq.broker.jmx.createConnector=false, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=13.0.1+9, user.name=Walker, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, derby.system.home=C:\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=13.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=Jun 30 2020 21:49:10 UTC, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, tomee.version=7.1.4, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.path=C:\tomcat\bin\bootstrap.jar;C:\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.57.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/tomcat/lib","C:/tomcat/lib/*.jar","C:\tomcat/lib","C:\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=6.3, openejb.version=7.1.4, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=C:\tomcat, user.dir=C:\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1ac80d85, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0, authconfigprovider.factory=false}
[DEBUG] 2021-04-12 14:55:01.327 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 14:55:01.327 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 14:55:01.330 [http-nio-8080-exec-2] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 14:55:01.331 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 14:55:01.331 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@efe3a59] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3d916f61]
[DEBUG] 2021-04-12 14:55:01.406 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 14:55:01.406 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 14:55:01.438 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 14:55:01.438 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 14:55:01.751 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 14:55:01.752 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 14:55:01.752 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 14:55:01.752 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 14:55:01.752 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 14:55:01.752 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 14:55:01.752 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 14:55:01.786 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a3c025a]
[DEBUG] 2021-04-12 14:55:01.787 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 14:55:01.788 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 14:55:01.790 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 14:55:01.790 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 14:55:01.791 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 14:55:01.792 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 14:55:01.807 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 14:55:01.813 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 14:55:01.815 [http-nio-8080-exec-2] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 14:55:01.816 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e4be87f]
[DEBUG] 2021-04-12 14:55:01.816 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 14:55:01.816 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 14:55:01.816 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 14:55:01.816 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 14:55:01.816 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 14:55:01.816 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 14:55:01.816 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 14:55:01.816 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 14:55:01.816 [http-nio-8080-exec-2] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 14:55:01.834 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 14:55:01.834 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 14:55:01.872 [http-nio-8080-exec-2] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 14:55:01.872 [http-nio-8080-exec-2] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 14:55:01.873 [http-nio-8080-exec-2] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 14:55:01.885 [http-nio-8080-exec-2] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 14:55:01.885 [http-nio-8080-exec-2] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 14:55:01.886 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 14:55:01.886 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 14:55:01.890 [http-nio-8080-exec-2] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2993f1d1
[DEBUG] 2021-04-12 14:55:01.894 [http-nio-8080-exec-2] SessionFactoryRegistry - Registering SessionFactory: ce60158a-271d-4648-8f2a-7579ae18e404 (<unnamed>)
[DEBUG] 2021-04-12 14:55:01.894 [http-nio-8080-exec-2] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 14:55:01.997 [http-nio-8080-exec-2] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 14:55:02.019 [http-nio-8080-exec-2] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 14:55:02.040 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 14:55:02.042 [http-nio-8080-exec-2] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 14:55:02.055 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 14:55:02.056 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 14:55:02.056 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 14:55:02.056 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 14:55:02.056 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 14:55:02.056 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 14:55:02.056 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 14:55:02.056 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 14:55:02.056 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 14:55:02.056 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 14:55:02.056 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 14:55:02.057 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 14:55:02.058 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 14:55:02.058 [http-nio-8080-exec-2] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 14:55:02.059 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 15:12:40.342 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 15:12:40.344 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 15:12:40.353 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 15:12:40.528 [http-nio-8080-exec-3] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 15:12:40.535 [http-nio-8080-exec-3] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 15:12:40.747 [http-nio-8080-exec-3] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 15:12:40.749 [http-nio-8080-exec-3] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 15:12:40.781 [http-nio-8080-exec-3] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 15:12:41.175 [http-nio-8080-exec-3] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 15:12:41.203 [http-nio-8080-exec-3] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 15:12:41.204 [http-nio-8080-exec-3] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 15:12:41.234 [http-nio-8080-exec-3] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 15:12:41.285 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@527b1898
[DEBUG] 2021-04-12 15:12:41.286 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@527b1898
[DEBUG] 2021-04-12 15:12:41.286 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@527b1898
[DEBUG] 2021-04-12 15:12:41.286 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4feec9ff
[DEBUG] 2021-04-12 15:12:41.287 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5210f814
[DEBUG] 2021-04-12 15:12:41.288 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3fea6519
[DEBUG] 2021-04-12 15:12:41.289 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3817e368
[DEBUG] 2021-04-12 15:12:41.289 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3817e368
[DEBUG] 2021-04-12 15:12:41.289 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3817e368
[DEBUG] 2021-04-12 15:12:41.290 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@617abb2f
[DEBUG] 2021-04-12 15:12:41.291 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@617abb2f
[DEBUG] 2021-04-12 15:12:41.291 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@617abb2f
[DEBUG] 2021-04-12 15:12:41.292 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2e92db6
[DEBUG] 2021-04-12 15:12:41.293 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2e92db6
[DEBUG] 2021-04-12 15:12:41.293 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2e92db6
[DEBUG] 2021-04-12 15:12:41.294 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@33365511
[DEBUG] 2021-04-12 15:12:41.294 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@33365511
[DEBUG] 2021-04-12 15:12:41.294 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@33365511
[DEBUG] 2021-04-12 15:12:41.295 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@214b4901
[DEBUG] 2021-04-12 15:12:41.295 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@214b4901
[DEBUG] 2021-04-12 15:12:41.295 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@214b4901
[DEBUG] 2021-04-12 15:12:41.296 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@18386b12
[DEBUG] 2021-04-12 15:12:41.296 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@18386b12
[DEBUG] 2021-04-12 15:12:41.297 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@18386b12
[DEBUG] 2021-04-12 15:12:41.300 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7fa72b50
[DEBUG] 2021-04-12 15:12:41.300 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7fa72b50
[DEBUG] 2021-04-12 15:12:41.300 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7fa72b50
[DEBUG] 2021-04-12 15:12:41.301 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67159bda
[DEBUG] 2021-04-12 15:12:41.301 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67159bda
[DEBUG] 2021-04-12 15:12:41.303 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@61d3bd1d
[DEBUG] 2021-04-12 15:12:41.303 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@61d3bd1d
[DEBUG] 2021-04-12 15:12:41.304 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4e3cec09
[DEBUG] 2021-04-12 15:12:41.305 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4e3cec09
[DEBUG] 2021-04-12 15:12:41.305 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6b1a9945
[DEBUG] 2021-04-12 15:12:41.306 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@190a46cf
[DEBUG] 2021-04-12 15:12:41.308 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@38eedfd9
[DEBUG] 2021-04-12 15:12:41.308 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@38eedfd9
[DEBUG] 2021-04-12 15:12:41.309 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@59a39afd
[DEBUG] 2021-04-12 15:12:41.309 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@59a39afd
[DEBUG] 2021-04-12 15:12:41.318 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@71bda4c
[DEBUG] 2021-04-12 15:12:41.319 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@71bda4c
[DEBUG] 2021-04-12 15:12:41.322 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@20c8056f
[DEBUG] 2021-04-12 15:12:41.322 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@20c8056f
[DEBUG] 2021-04-12 15:12:41.323 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@744aba88
[DEBUG] 2021-04-12 15:12:41.324 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@744aba88
[DEBUG] 2021-04-12 15:12:41.325 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7fce2520
[DEBUG] 2021-04-12 15:12:41.325 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7fce2520
[DEBUG] 2021-04-12 15:12:41.327 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@ed2cfa
[DEBUG] 2021-04-12 15:12:41.327 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@ed2cfa
[DEBUG] 2021-04-12 15:12:41.328 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7f858a49
[DEBUG] 2021-04-12 15:12:41.329 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7f858a49
[DEBUG] 2021-04-12 15:12:41.335 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@737e7348
[DEBUG] 2021-04-12 15:12:41.335 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@737e7348
[DEBUG] 2021-04-12 15:12:41.336 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5fb6f332
[DEBUG] 2021-04-12 15:12:41.337 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5fb6f332
[DEBUG] 2021-04-12 15:12:41.338 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@7897b333
[DEBUG] 2021-04-12 15:12:41.338 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7897b333
[DEBUG] 2021-04-12 15:12:41.339 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1832e484
[DEBUG] 2021-04-12 15:12:41.340 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1832e484
[DEBUG] 2021-04-12 15:12:41.340 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1832e484
[DEBUG] 2021-04-12 15:12:41.342 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@44c02b85
[DEBUG] 2021-04-12 15:12:41.343 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@544061cd
[DEBUG] 2021-04-12 15:12:41.344 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@544061cd
[DEBUG] 2021-04-12 15:12:41.344 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@544061cd
[DEBUG] 2021-04-12 15:12:41.345 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@248d2f0d
[DEBUG] 2021-04-12 15:12:41.346 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2991a976
[DEBUG] 2021-04-12 15:12:41.346 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2991a976
[DEBUG] 2021-04-12 15:12:41.352 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@29a42423
[DEBUG] 2021-04-12 15:12:41.352 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@29a42423
[DEBUG] 2021-04-12 15:12:41.353 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@24b47f7c
[DEBUG] 2021-04-12 15:12:41.353 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@24b47f7c
[DEBUG] 2021-04-12 15:12:41.354 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4b7e16af
[DEBUG] 2021-04-12 15:12:41.354 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4b7e16af
[DEBUG] 2021-04-12 15:12:41.356 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4f3d797c
[DEBUG] 2021-04-12 15:12:41.356 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4f3d797c
[DEBUG] 2021-04-12 15:12:41.356 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3970504c
[DEBUG] 2021-04-12 15:12:41.357 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@114bf6bf
[DEBUG] 2021-04-12 15:12:41.357 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@114bf6bf
[DEBUG] 2021-04-12 15:12:41.357 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@114bf6bf
[DEBUG] 2021-04-12 15:12:41.358 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4ca99f04
[DEBUG] 2021-04-12 15:12:41.359 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4ca99f04
[DEBUG] 2021-04-12 15:12:41.359 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4ca99f04
[DEBUG] 2021-04-12 15:12:41.360 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2899a745
[DEBUG] 2021-04-12 15:12:41.360 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@17e967c2
[DEBUG] 2021-04-12 15:12:41.361 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5050905f
[DEBUG] 2021-04-12 15:12:41.362 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5050905f
[DEBUG] 2021-04-12 15:12:41.362 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5050905f
[DEBUG] 2021-04-12 15:12:41.368 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@203511fd
[DEBUG] 2021-04-12 15:12:41.369 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@203511fd
[DEBUG] 2021-04-12 15:12:41.369 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@203511fd
[DEBUG] 2021-04-12 15:12:41.369 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e1a8395
[DEBUG] 2021-04-12 15:12:41.370 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@74c05171
[DEBUG] 2021-04-12 15:12:41.371 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@134b6d20
[DEBUG] 2021-04-12 15:12:41.372 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134b6d20
[DEBUG] 2021-04-12 15:12:41.373 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5affd97e
[DEBUG] 2021-04-12 15:12:41.376 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2cc6fa78
[DEBUG] 2021-04-12 15:12:41.376 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2cc6fa78
[DEBUG] 2021-04-12 15:12:41.378 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@34c25e80
[DEBUG] 2021-04-12 15:12:41.378 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@34c25e80
[DEBUG] 2021-04-12 15:12:41.378 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6a6ebecb
[DEBUG] 2021-04-12 15:12:41.380 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@47ddd211
[DEBUG] 2021-04-12 15:12:41.384 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@73e500d1
[DEBUG] 2021-04-12 15:12:41.388 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4f41ddda
[DEBUG] 2021-04-12 15:12:41.388 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4f41ddda
[DEBUG] 2021-04-12 15:12:41.389 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@57f877f5
[DEBUG] 2021-04-12 15:12:41.389 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@314b08a4
[DEBUG] 2021-04-12 15:12:41.389 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@49b08425
[DEBUG] 2021-04-12 15:12:41.390 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@69b96334
[DEBUG] 2021-04-12 15:12:41.390 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7deaf629
[DEBUG] 2021-04-12 15:12:41.390 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@140ddf18
[DEBUG] 2021-04-12 15:12:41.390 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5951f010
[DEBUG] 2021-04-12 15:12:41.391 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7b5398cd
[DEBUG] 2021-04-12 15:12:41.436 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 15:12:41.437 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 15:12:41.437 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 15:12:41.439 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 15:12:41.441 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 15:12:41.442 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 15:12:41.443 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 15:12:41.444 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 15:12:41.445 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 15:12:41.446 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 15:12:41.446 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 15:12:41.447 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 15:12:41.447 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 15:12:41.452 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 15:12:41.460 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 15:12:41.461 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 15:12:41.461 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 15:12:41.818 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 15:12:42.472 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 15:12:42.472 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 15:12:42.473 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 15:12:42.542 [http-nio-8080-exec-3] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 15:12:42.573 [http-nio-8080-exec-3] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 15:12:42.650 [http-nio-8080-exec-3] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 15:12:42.705 [http-nio-8080-exec-3] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 15:12:42.710 [http-nio-8080-exec-3] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5de9911f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1b898892]
[DEBUG] 2021-04-12 15:12:42.780 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 15:12:42.817 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 15:12:42.825 [http-nio-8080-exec-3] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 15:12:42.829 [http-nio-8080-exec-3] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 15:12:42.872 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 15:12:42.876 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 15:12:42.878 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 15:12:42.882 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 15:12:42.886 [http-nio-8080-exec-3] PropertyBinder - Building property id
[DEBUG] 2021-04-12 15:12:42.891 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 15:12:42.893 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 15:12:42.893 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 15:12:42.893 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 15:12:42.894 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 15:12:42.894 [http-nio-8080-exec-3] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 15:12:42.894 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 15:12:42.894 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 15:12:42.894 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 15:12:42.894 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 15:12:42.894 [http-nio-8080-exec-3] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 15:12:42.895 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 15:12:42.895 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 15:12:42.895 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 15:12:42.895 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 15:12:42.895 [http-nio-8080-exec-3] PropertyBinder - Building property media
[DEBUG] 2021-04-12 15:12:42.896 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 15:12:42.896 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 15:12:42.896 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 15:12:42.897 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 15:12:42.898 [http-nio-8080-exec-3] PropertyBinder - Building property name
[DEBUG] 2021-04-12 15:12:42.898 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 15:12:42.898 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 15:12:42.899 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 15:12:42.899 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 15:12:42.899 [http-nio-8080-exec-3] PropertyBinder - Building property species
[DEBUG] 2021-04-12 15:12:42.903 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 15:12:42.903 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 15:12:42.904 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 15:12:42.904 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 15:12:42.904 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 15:12:42.904 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 15:12:42.905 [http-nio-8080-exec-3] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 15:12:42.952 [http-nio-8080-exec-3] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 15:12:42.953 [http-nio-8080-exec-3] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 15:12:42.953 [http-nio-8080-exec-3] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 15:12:42.953 [http-nio-8080-exec-3] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 15:12:42.953 [http-nio-8080-exec-3] Settings - Statistics: disabled
[DEBUG] 2021-04-12 15:12:42.953 [http-nio-8080-exec-3] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 15:12:42.954 [http-nio-8080-exec-3] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 15:12:42.954 [http-nio-8080-exec-3] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 15:12:42.954 [http-nio-8080-exec-3] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 15:12:42.954 [http-nio-8080-exec-3] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 15:12:42.954 [http-nio-8080-exec-3] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 15:12:42.954 [http-nio-8080-exec-3] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 15:12:42.954 [http-nio-8080-exec-3] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 15:12:42.954 [http-nio-8080-exec-3] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 15:12:42.954 [http-nio-8080-exec-3] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 15:12:42.954 [http-nio-8080-exec-3] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 15:12:42.954 [http-nio-8080-exec-3] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 15:12:42.954 [http-nio-8080-exec-3] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 15:12:42.954 [http-nio-8080-exec-3] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 15:12:42.955 [http-nio-8080-exec-3] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 15:12:42.955 [http-nio-8080-exec-3] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 15:12:42.955 [http-nio-8080-exec-3] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 15:12:42.955 [http-nio-8080-exec-3] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 15:12:42.955 [http-nio-8080-exec-3] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 15:12:42.955 [http-nio-8080-exec-3] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 15:12:42.955 [http-nio-8080-exec-3] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 15:12:42.955 [http-nio-8080-exec-3] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 15:12:42.955 [http-nio-8080-exec-3] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 15:12:42.955 [http-nio-8080-exec-3] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 15:12:42.956 [http-nio-8080-exec-3] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 15:12:42.956 [http-nio-8080-exec-3] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 15:12:42.956 [http-nio-8080-exec-3] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 15:12:42.956 [http-nio-8080-exec-3] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 15:12:42.956 [http-nio-8080-exec-3] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 15:12:42.956 [http-nio-8080-exec-3] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 15:12:42.956 [http-nio-8080-exec-3] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 15:12:42.956 [http-nio-8080-exec-3] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 15:12:42.956 [http-nio-8080-exec-3] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 15:12:42.956 [http-nio-8080-exec-3] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 15:12:43.043 [http-nio-8080-exec-3] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 15:12:43.068 [http-nio-8080-exec-3] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 15:12:43.069 [http-nio-8080-exec-3] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, org.apache.activemq.broker.jmx.createConnector=false, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=13.0.1+9, user.name=Walker, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, derby.system.home=C:\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=13.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=Jun 30 2020 21:49:10 UTC, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, tomee.version=7.1.4, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.path=C:\tomcat\bin\bootstrap.jar;C:\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.57.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/tomcat/lib","C:/tomcat/lib/*.jar","C:\tomcat/lib","C:\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=6.3, openejb.version=7.1.4, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=C:\tomcat, user.dir=C:\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@61b92558, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0, authconfigprovider.factory=false}
[DEBUG] 2021-04-12 15:12:43.093 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 15:12:43.093 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 15:12:43.097 [http-nio-8080-exec-3] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 15:12:43.101 [http-nio-8080-exec-3] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 15:12:43.101 [http-nio-8080-exec-3] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5de9911f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6b22e38e]
[DEBUG] 2021-04-12 15:12:43.167 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 15:12:43.167 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 15:12:43.193 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 15:12:43.194 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 15:12:43.509 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 15:12:43.509 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 15:12:43.509 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 15:12:43.509 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 15:12:43.509 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 15:12:43.509 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 15:12:43.509 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 15:12:43.551 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10e4bdb7]
[DEBUG] 2021-04-12 15:12:43.553 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 15:12:43.553 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 15:12:43.553 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 15:12:43.553 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 15:12:43.553 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 15:12:43.553 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 15:12:43.571 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 15:12:43.575 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 15:12:43.578 [http-nio-8080-exec-3] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 15:12:43.579 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dc1ca2e]
[DEBUG] 2021-04-12 15:12:43.579 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 15:12:43.579 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 15:12:43.579 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 15:12:43.579 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 15:12:43.579 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 15:12:43.579 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 15:12:43.579 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 15:12:43.579 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 15:12:43.579 [http-nio-8080-exec-3] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 15:12:43.608 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 15:12:43.608 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 15:12:43.648 [http-nio-8080-exec-3] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 15:12:43.648 [http-nio-8080-exec-3] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 15:12:43.649 [http-nio-8080-exec-3] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 15:12:43.661 [http-nio-8080-exec-3] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 15:12:43.661 [http-nio-8080-exec-3] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 15:12:43.663 [http-nio-8080-exec-3] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 15:12:43.663 [http-nio-8080-exec-3] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 15:12:43.668 [http-nio-8080-exec-3] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6b01c2e0
[DEBUG] 2021-04-12 15:12:43.670 [http-nio-8080-exec-3] SessionFactoryRegistry - Registering SessionFactory: 0ab69269-cff5-4652-ae09-54ff6dfba586 (<unnamed>)
[DEBUG] 2021-04-12 15:12:43.670 [http-nio-8080-exec-3] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 15:12:43.777 [http-nio-8080-exec-3] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 15:12:43.802 [http-nio-8080-exec-3] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 15:12:43.842 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 15:12:43.843 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 15:12:43.858 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 15:12:43.859 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 15:12:43.859 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:12:43.859 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 15:12:43.859 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:12:43.859 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 15:12:43.859 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:12:43.859 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 15:12:43.859 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:12:43.859 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 15:12:43.859 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:12:43.860 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 15:12:43.861 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 15:12:43.861 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 15:12:43.862 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 15:30:44.093 [http-nio-8080-exec-6] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 15:30:44.097 [http-nio-8080-exec-6] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 15:30:44.104 [http-nio-8080-exec-6] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 15:30:44.318 [http-nio-8080-exec-6] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 15:30:44.321 [http-nio-8080-exec-6] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 15:30:44.504 [http-nio-8080-exec-6] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 15:30:44.504 [http-nio-8080-exec-6] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 15:30:44.534 [http-nio-8080-exec-6] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 15:30:44.886 [http-nio-8080-exec-6] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 15:30:44.914 [http-nio-8080-exec-6] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 15:30:44.916 [http-nio-8080-exec-6] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 15:30:44.950 [http-nio-8080-exec-6] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 15:30:45.012 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@127b6cbe
[DEBUG] 2021-04-12 15:30:45.013 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@127b6cbe
[DEBUG] 2021-04-12 15:30:45.013 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@127b6cbe
[DEBUG] 2021-04-12 15:30:45.014 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@751bed36
[DEBUG] 2021-04-12 15:30:45.014 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5cf36dfa
[DEBUG] 2021-04-12 15:30:45.015 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@247739cc
[DEBUG] 2021-04-12 15:30:45.016 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5bfe53f3
[DEBUG] 2021-04-12 15:30:45.016 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5bfe53f3
[DEBUG] 2021-04-12 15:30:45.016 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5bfe53f3
[DEBUG] 2021-04-12 15:30:45.017 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6f56b167
[DEBUG] 2021-04-12 15:30:45.018 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6f56b167
[DEBUG] 2021-04-12 15:30:45.018 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6f56b167
[DEBUG] 2021-04-12 15:30:45.020 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@298868f1
[DEBUG] 2021-04-12 15:30:45.020 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@298868f1
[DEBUG] 2021-04-12 15:30:45.020 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@298868f1
[DEBUG] 2021-04-12 15:30:45.021 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2360e40f
[DEBUG] 2021-04-12 15:30:45.022 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2360e40f
[DEBUG] 2021-04-12 15:30:45.022 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2360e40f
[DEBUG] 2021-04-12 15:30:45.023 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@673090db
[DEBUG] 2021-04-12 15:30:45.023 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@673090db
[DEBUG] 2021-04-12 15:30:45.023 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@673090db
[DEBUG] 2021-04-12 15:30:45.024 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7e517d18
[DEBUG] 2021-04-12 15:30:45.025 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7e517d18
[DEBUG] 2021-04-12 15:30:45.025 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e517d18
[DEBUG] 2021-04-12 15:30:45.026 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1809c2ed
[DEBUG] 2021-04-12 15:30:45.026 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1809c2ed
[DEBUG] 2021-04-12 15:30:45.026 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1809c2ed
[DEBUG] 2021-04-12 15:30:45.027 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@786de764
[DEBUG] 2021-04-12 15:30:45.027 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@786de764
[DEBUG] 2021-04-12 15:30:45.028 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d382f8b
[DEBUG] 2021-04-12 15:30:45.029 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d382f8b
[DEBUG] 2021-04-12 15:30:45.030 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4c35c5a6
[DEBUG] 2021-04-12 15:30:45.030 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4c35c5a6
[DEBUG] 2021-04-12 15:30:45.031 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2e332b2
[DEBUG] 2021-04-12 15:30:45.031 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ca0a17f
[DEBUG] 2021-04-12 15:30:45.032 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1b8c552b
[DEBUG] 2021-04-12 15:30:45.033 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1b8c552b
[DEBUG] 2021-04-12 15:30:45.034 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@11409bb0
[DEBUG] 2021-04-12 15:30:45.034 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@11409bb0
[DEBUG] 2021-04-12 15:30:45.054 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@613ed307
[DEBUG] 2021-04-12 15:30:45.055 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@613ed307
[DEBUG] 2021-04-12 15:30:45.059 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3c523ad0
[DEBUG] 2021-04-12 15:30:45.059 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3c523ad0
[DEBUG] 2021-04-12 15:30:45.060 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@12862b10
[DEBUG] 2021-04-12 15:30:45.061 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@12862b10
[DEBUG] 2021-04-12 15:30:45.062 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4f7dbbdf
[DEBUG] 2021-04-12 15:30:45.062 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4f7dbbdf
[DEBUG] 2021-04-12 15:30:45.064 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28717058
[DEBUG] 2021-04-12 15:30:45.064 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28717058
[DEBUG] 2021-04-12 15:30:45.066 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@fe47d69
[DEBUG] 2021-04-12 15:30:45.066 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@fe47d69
[DEBUG] 2021-04-12 15:30:45.068 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@500d8814
[DEBUG] 2021-04-12 15:30:45.068 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@500d8814
[DEBUG] 2021-04-12 15:30:45.069 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4c576d86
[DEBUG] 2021-04-12 15:30:45.069 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4c576d86
[DEBUG] 2021-04-12 15:30:45.071 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@470c59ee
[DEBUG] 2021-04-12 15:30:45.071 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@470c59ee
[DEBUG] 2021-04-12 15:30:45.072 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@37dcbec9
[DEBUG] 2021-04-12 15:30:45.072 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@37dcbec9
[DEBUG] 2021-04-12 15:30:45.073 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@37dcbec9
[DEBUG] 2021-04-12 15:30:45.075 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@18a7fc29
[DEBUG] 2021-04-12 15:30:45.076 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@43b1dc29
[DEBUG] 2021-04-12 15:30:45.076 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@43b1dc29
[DEBUG] 2021-04-12 15:30:45.077 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@43b1dc29
[DEBUG] 2021-04-12 15:30:45.078 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2a8b9633
[DEBUG] 2021-04-12 15:30:45.079 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@401a6b8c
[DEBUG] 2021-04-12 15:30:45.079 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@401a6b8c
[DEBUG] 2021-04-12 15:30:45.080 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4b06acd0
[DEBUG] 2021-04-12 15:30:45.080 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b06acd0
[DEBUG] 2021-04-12 15:30:45.081 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@295c9dac
[DEBUG] 2021-04-12 15:30:45.081 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@295c9dac
[DEBUG] 2021-04-12 15:30:45.082 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@223cf4db
[DEBUG] 2021-04-12 15:30:45.082 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@223cf4db
[DEBUG] 2021-04-12 15:30:45.084 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@47013145
[DEBUG] 2021-04-12 15:30:45.084 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@47013145
[DEBUG] 2021-04-12 15:30:45.084 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1d80ef86
[DEBUG] 2021-04-12 15:30:45.086 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6c44ae2a
[DEBUG] 2021-04-12 15:30:45.086 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6c44ae2a
[DEBUG] 2021-04-12 15:30:45.086 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6c44ae2a
[DEBUG] 2021-04-12 15:30:45.087 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3aa0ba44
[DEBUG] 2021-04-12 15:30:45.087 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3aa0ba44
[DEBUG] 2021-04-12 15:30:45.087 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3aa0ba44
[DEBUG] 2021-04-12 15:30:45.088 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5de4c563
[DEBUG] 2021-04-12 15:30:45.089 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@749fcdb7
[DEBUG] 2021-04-12 15:30:45.090 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@a831ae5
[DEBUG] 2021-04-12 15:30:45.090 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@a831ae5
[DEBUG] 2021-04-12 15:30:45.090 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@a831ae5
[DEBUG] 2021-04-12 15:30:45.091 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ee811fc
[DEBUG] 2021-04-12 15:30:45.092 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ee811fc
[DEBUG] 2021-04-12 15:30:45.092 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ee811fc
[DEBUG] 2021-04-12 15:30:45.093 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4c9f0e64
[DEBUG] 2021-04-12 15:30:45.094 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@76c4741c
[DEBUG] 2021-04-12 15:30:45.096 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5572c51c
[DEBUG] 2021-04-12 15:30:45.096 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5572c51c
[DEBUG] 2021-04-12 15:30:45.097 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@12e47205
[DEBUG] 2021-04-12 15:30:45.099 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@f932dc9
[DEBUG] 2021-04-12 15:30:45.099 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@f932dc9
[DEBUG] 2021-04-12 15:30:45.101 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7d6a3dda
[DEBUG] 2021-04-12 15:30:45.101 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7d6a3dda
[DEBUG] 2021-04-12 15:30:45.102 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@f0779b2
[DEBUG] 2021-04-12 15:30:45.103 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@31d85e74
[DEBUG] 2021-04-12 15:30:45.104 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@20978d8d
[DEBUG] 2021-04-12 15:30:45.111 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@135cdba5
[DEBUG] 2021-04-12 15:30:45.111 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@135cdba5
[DEBUG] 2021-04-12 15:30:45.112 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@67e28ee6
[DEBUG] 2021-04-12 15:30:45.112 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7b0abfde
[DEBUG] 2021-04-12 15:30:45.112 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@ed9f8f8
[DEBUG] 2021-04-12 15:30:45.113 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2b1d662f
[DEBUG] 2021-04-12 15:30:45.113 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@587b4814
[DEBUG] 2021-04-12 15:30:45.113 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7621e88a
[DEBUG] 2021-04-12 15:30:45.113 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@377ec08e
[DEBUG] 2021-04-12 15:30:45.113 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7792f450
[DEBUG] 2021-04-12 15:30:45.153 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 15:30:45.154 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 15:30:45.154 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 15:30:45.159 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 15:30:45.161 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 15:30:45.162 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 15:30:45.163 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 15:30:45.164 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 15:30:45.165 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 15:30:45.166 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 15:30:45.167 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 15:30:45.167 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 15:30:45.167 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 15:30:45.168 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 15:30:45.176 [http-nio-8080-exec-6] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 15:30:45.176 [http-nio-8080-exec-6] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 15:30:45.176 [http-nio-8080-exec-6] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 15:30:45.490 [http-nio-8080-exec-6] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 15:30:46.143 [http-nio-8080-exec-6] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 15:30:46.143 [http-nio-8080-exec-6] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 15:30:46.143 [http-nio-8080-exec-6] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 15:30:46.180 [http-nio-8080-exec-6] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 15:30:46.209 [http-nio-8080-exec-6] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 15:30:46.295 [http-nio-8080-exec-6] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 15:30:46.345 [http-nio-8080-exec-6] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 15:30:46.350 [http-nio-8080-exec-6] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@73f1c3b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1427d4d6]
[DEBUG] 2021-04-12 15:30:46.417 [http-nio-8080-exec-6] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 15:30:46.450 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 15:30:46.462 [http-nio-8080-exec-6] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 15:30:46.466 [http-nio-8080-exec-6] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 15:30:46.500 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 15:30:46.505 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 15:30:46.520 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 15:30:46.524 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 15:30:46.527 [http-nio-8080-exec-6] PropertyBinder - Building property id
[DEBUG] 2021-04-12 15:30:46.533 [http-nio-8080-exec-6] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 15:30:46.536 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 15:30:46.537 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 15:30:46.537 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 15:30:46.537 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 15:30:46.537 [http-nio-8080-exec-6] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 15:30:46.538 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 15:30:46.538 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 15:30:46.538 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 15:30:46.538 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 15:30:46.538 [http-nio-8080-exec-6] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 15:30:46.539 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 15:30:46.539 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 15:30:46.539 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 15:30:46.539 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 15:30:46.540 [http-nio-8080-exec-6] PropertyBinder - Building property media
[DEBUG] 2021-04-12 15:30:46.540 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 15:30:46.543 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 15:30:46.543 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 15:30:46.545 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 15:30:46.545 [http-nio-8080-exec-6] PropertyBinder - Building property name
[DEBUG] 2021-04-12 15:30:46.545 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 15:30:46.545 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 15:30:46.546 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 15:30:46.546 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 15:30:46.546 [http-nio-8080-exec-6] PropertyBinder - Building property species
[DEBUG] 2021-04-12 15:30:46.564 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 15:30:46.564 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 15:30:46.564 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 15:30:46.564 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 15:30:46.564 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 15:30:46.564 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 15:30:46.566 [http-nio-8080-exec-6] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 15:30:46.627 [http-nio-8080-exec-6] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 15:30:46.628 [http-nio-8080-exec-6] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 15:30:46.628 [http-nio-8080-exec-6] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 15:30:46.628 [http-nio-8080-exec-6] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 15:30:46.628 [http-nio-8080-exec-6] Settings - Statistics: disabled
[DEBUG] 2021-04-12 15:30:46.628 [http-nio-8080-exec-6] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 15:30:46.628 [http-nio-8080-exec-6] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 15:30:46.628 [http-nio-8080-exec-6] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 15:30:46.628 [http-nio-8080-exec-6] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 15:30:46.628 [http-nio-8080-exec-6] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 15:30:46.628 [http-nio-8080-exec-6] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 15:30:46.628 [http-nio-8080-exec-6] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 15:30:46.628 [http-nio-8080-exec-6] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 15:30:46.628 [http-nio-8080-exec-6] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 15:30:46.628 [http-nio-8080-exec-6] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 15:30:46.628 [http-nio-8080-exec-6] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 15:30:46.628 [http-nio-8080-exec-6] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 15:30:46.628 [http-nio-8080-exec-6] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 15:30:46.629 [http-nio-8080-exec-6] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 15:30:46.629 [http-nio-8080-exec-6] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 15:30:46.629 [http-nio-8080-exec-6] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 15:30:46.629 [http-nio-8080-exec-6] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 15:30:46.629 [http-nio-8080-exec-6] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 15:30:46.629 [http-nio-8080-exec-6] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 15:30:46.629 [http-nio-8080-exec-6] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 15:30:46.629 [http-nio-8080-exec-6] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 15:30:46.629 [http-nio-8080-exec-6] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 15:30:46.630 [http-nio-8080-exec-6] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 15:30:46.630 [http-nio-8080-exec-6] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 15:30:46.630 [http-nio-8080-exec-6] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 15:30:46.630 [http-nio-8080-exec-6] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 15:30:46.630 [http-nio-8080-exec-6] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 15:30:46.630 [http-nio-8080-exec-6] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 15:30:46.630 [http-nio-8080-exec-6] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 15:30:46.630 [http-nio-8080-exec-6] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 15:30:46.630 [http-nio-8080-exec-6] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 15:30:46.630 [http-nio-8080-exec-6] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 15:30:46.630 [http-nio-8080-exec-6] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 15:30:46.630 [http-nio-8080-exec-6] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 15:30:46.713 [http-nio-8080-exec-6] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 15:30:46.741 [http-nio-8080-exec-6] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 15:30:46.741 [http-nio-8080-exec-6] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, org.apache.activemq.broker.jmx.createConnector=false, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=13.0.1+9, user.name=Walker, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, derby.system.home=C:\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=13.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=Jun 30 2020 21:49:10 UTC, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, tomee.version=7.1.4, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.path=C:\tomcat\bin\bootstrap.jar;C:\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.57.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/tomcat/lib","C:/tomcat/lib/*.jar","C:\tomcat/lib","C:\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=6.3, openejb.version=7.1.4, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=C:\tomcat, user.dir=C:\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1186f4ea, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0, authconfigprovider.factory=false}
[DEBUG] 2021-04-12 15:30:46.782 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 15:30:46.782 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 15:30:46.785 [http-nio-8080-exec-6] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 15:30:46.787 [http-nio-8080-exec-6] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 15:30:46.787 [http-nio-8080-exec-6] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@73f1c3b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@19c7e60d]
[DEBUG] 2021-04-12 15:30:46.844 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 15:30:46.845 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 15:30:46.869 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 15:30:46.870 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 15:30:47.161 [http-nio-8080-exec-6] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 15:30:47.161 [http-nio-8080-exec-6] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 15:30:47.161 [http-nio-8080-exec-6] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 15:30:47.161 [http-nio-8080-exec-6] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 15:30:47.162 [http-nio-8080-exec-6] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 15:30:47.162 [http-nio-8080-exec-6] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 15:30:47.162 [http-nio-8080-exec-6] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 15:30:47.193 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b6a7796]
[DEBUG] 2021-04-12 15:30:47.195 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 15:30:47.195 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 15:30:47.196 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 15:30:47.197 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 15:30:47.197 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 15:30:47.197 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 15:30:47.215 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 15:30:47.221 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 15:30:47.223 [http-nio-8080-exec-6] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 15:30:47.223 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cd11aff]
[DEBUG] 2021-04-12 15:30:47.224 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 15:30:47.224 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 15:30:47.224 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 15:30:47.224 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 15:30:47.224 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 15:30:47.224 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 15:30:47.224 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 15:30:47.224 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 15:30:47.224 [http-nio-8080-exec-6] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 15:30:47.256 [http-nio-8080-exec-6] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 15:30:47.257 [http-nio-8080-exec-6] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 15:30:47.315 [http-nio-8080-exec-6] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 15:30:47.315 [http-nio-8080-exec-6] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 15:30:47.316 [http-nio-8080-exec-6] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 15:30:47.327 [http-nio-8080-exec-6] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 15:30:47.327 [http-nio-8080-exec-6] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 15:30:47.328 [http-nio-8080-exec-6] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 15:30:47.328 [http-nio-8080-exec-6] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 15:30:47.332 [http-nio-8080-exec-6] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@60d8ea98
[DEBUG] 2021-04-12 15:30:47.334 [http-nio-8080-exec-6] SessionFactoryRegistry - Registering SessionFactory: f3a03c7c-53c1-4d76-8b4b-b4eda5a3440d (<unnamed>)
[DEBUG] 2021-04-12 15:30:47.334 [http-nio-8080-exec-6] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 15:30:47.444 [http-nio-8080-exec-6] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 15:30:47.466 [http-nio-8080-exec-6] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 15:30:47.488 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 15:30:47.488 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 15:30:47.501 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 15:30:47.502 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 15:30:47.502 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:30:47.502 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 15:30:47.502 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:30:47.502 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 15:30:47.502 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:30:47.502 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 15:30:47.502 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:30:47.502 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 15:30:47.502 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:30:47.503 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 15:30:47.504 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 15:30:47.504 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 15:30:47.504 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 15:31:53.903 [http-nio-8080-exec-10] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 15:31:53.925 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 15:31:53.925 [http-nio-8080-exec-10] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 15:31:53.926 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 15:31:53.926 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 15:31:53.926 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:31:53.926 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 15:31:53.926 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:31:53.926 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 15:31:53.926 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:31:53.926 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 15:31:53.927 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:31:53.928 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 15:31:53.928 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:31:53.928 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 15:31:53.928 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 15:31:53.928 [http-nio-8080-exec-10] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 15:31:53.928 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 15:39:31.408 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 15:39:31.412 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 15:39:31.418 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 15:39:31.543 [http-nio-8080-exec-1] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 15:39:31.553 [http-nio-8080-exec-1] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 15:39:31.748 [http-nio-8080-exec-1] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 15:39:31.749 [http-nio-8080-exec-1] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 15:39:31.781 [http-nio-8080-exec-1] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 15:39:32.109 [http-nio-8080-exec-1] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 15:39:32.145 [http-nio-8080-exec-1] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 15:39:32.146 [http-nio-8080-exec-1] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 15:39:32.224 [http-nio-8080-exec-1] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 15:39:32.301 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@76416b2b
[DEBUG] 2021-04-12 15:39:32.301 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@76416b2b
[DEBUG] 2021-04-12 15:39:32.302 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@76416b2b
[DEBUG] 2021-04-12 15:39:32.302 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4f2ee24b
[DEBUG] 2021-04-12 15:39:32.303 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4b2269df
[DEBUG] 2021-04-12 15:39:32.304 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6d4da3a4
[DEBUG] 2021-04-12 15:39:32.305 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@678ca5ae
[DEBUG] 2021-04-12 15:39:32.305 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@678ca5ae
[DEBUG] 2021-04-12 15:39:32.306 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@678ca5ae
[DEBUG] 2021-04-12 15:39:32.307 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@198fc5e6
[DEBUG] 2021-04-12 15:39:32.307 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@198fc5e6
[DEBUG] 2021-04-12 15:39:32.308 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@198fc5e6
[DEBUG] 2021-04-12 15:39:32.310 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7adff721
[DEBUG] 2021-04-12 15:39:32.310 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7adff721
[DEBUG] 2021-04-12 15:39:32.310 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7adff721
[DEBUG] 2021-04-12 15:39:32.312 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4521b7f2
[DEBUG] 2021-04-12 15:39:32.312 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4521b7f2
[DEBUG] 2021-04-12 15:39:32.312 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4521b7f2
[DEBUG] 2021-04-12 15:39:32.314 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4877f0f8
[DEBUG] 2021-04-12 15:39:32.314 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4877f0f8
[DEBUG] 2021-04-12 15:39:32.314 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4877f0f8
[DEBUG] 2021-04-12 15:39:32.315 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@28f7d468
[DEBUG] 2021-04-12 15:39:32.316 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@28f7d468
[DEBUG] 2021-04-12 15:39:32.316 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@28f7d468
[DEBUG] 2021-04-12 15:39:32.317 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@d56a053
[DEBUG] 2021-04-12 15:39:32.318 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@d56a053
[DEBUG] 2021-04-12 15:39:32.318 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@d56a053
[DEBUG] 2021-04-12 15:39:32.319 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2d99b095
[DEBUG] 2021-04-12 15:39:32.319 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2d99b095
[DEBUG] 2021-04-12 15:39:32.320 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@41a1ae6b
[DEBUG] 2021-04-12 15:39:32.320 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@41a1ae6b
[DEBUG] 2021-04-12 15:39:32.321 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2b5a3e03
[DEBUG] 2021-04-12 15:39:32.321 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2b5a3e03
[DEBUG] 2021-04-12 15:39:32.322 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@55412efc
[DEBUG] 2021-04-12 15:39:32.322 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c28c4c0
[DEBUG] 2021-04-12 15:39:32.323 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@f4e0be3
[DEBUG] 2021-04-12 15:39:32.324 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@f4e0be3
[DEBUG] 2021-04-12 15:39:32.325 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3e05bf86
[DEBUG] 2021-04-12 15:39:32.325 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3e05bf86
[DEBUG] 2021-04-12 15:39:32.328 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@37b9b047
[DEBUG] 2021-04-12 15:39:32.328 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@37b9b047
[DEBUG] 2021-04-12 15:39:32.330 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@14a20ff3
[DEBUG] 2021-04-12 15:39:32.330 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@14a20ff3
[DEBUG] 2021-04-12 15:39:32.332 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@66be5ec5
[DEBUG] 2021-04-12 15:39:32.333 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@66be5ec5
[DEBUG] 2021-04-12 15:39:32.334 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@39d67096
[DEBUG] 2021-04-12 15:39:32.334 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@39d67096
[DEBUG] 2021-04-12 15:39:32.336 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@57f138ff
[DEBUG] 2021-04-12 15:39:32.336 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@57f138ff
[DEBUG] 2021-04-12 15:39:32.337 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3bad7a74
[DEBUG] 2021-04-12 15:39:32.338 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3bad7a74
[DEBUG] 2021-04-12 15:39:32.340 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@464a4d5b
[DEBUG] 2021-04-12 15:39:32.340 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@464a4d5b
[DEBUG] 2021-04-12 15:39:32.341 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@58a412b8
[DEBUG] 2021-04-12 15:39:32.341 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@58a412b8
[DEBUG] 2021-04-12 15:39:32.342 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@17ef6f88
[DEBUG] 2021-04-12 15:39:32.343 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@17ef6f88
[DEBUG] 2021-04-12 15:39:32.344 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1f23e71e
[DEBUG] 2021-04-12 15:39:32.344 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1f23e71e
[DEBUG] 2021-04-12 15:39:32.345 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1f23e71e
[DEBUG] 2021-04-12 15:39:32.347 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31ee832b
[DEBUG] 2021-04-12 15:39:32.349 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@58ddb984
[DEBUG] 2021-04-12 15:39:32.349 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@58ddb984
[DEBUG] 2021-04-12 15:39:32.350 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@58ddb984
[DEBUG] 2021-04-12 15:39:32.350 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@9a7965f
[DEBUG] 2021-04-12 15:39:32.351 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2276ded4
[DEBUG] 2021-04-12 15:39:32.351 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2276ded4
[DEBUG] 2021-04-12 15:39:32.353 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@18757ad6
[DEBUG] 2021-04-12 15:39:32.353 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@18757ad6
[DEBUG] 2021-04-12 15:39:32.354 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@73ee9ee0
[DEBUG] 2021-04-12 15:39:32.354 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@73ee9ee0
[DEBUG] 2021-04-12 15:39:32.355 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@56a16ab0
[DEBUG] 2021-04-12 15:39:32.355 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@56a16ab0
[DEBUG] 2021-04-12 15:39:32.356 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4a42965b
[DEBUG] 2021-04-12 15:39:32.356 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4a42965b
[DEBUG] 2021-04-12 15:39:32.357 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@33fa0556
[DEBUG] 2021-04-12 15:39:32.358 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3c71856e
[DEBUG] 2021-04-12 15:39:32.358 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3c71856e
[DEBUG] 2021-04-12 15:39:32.358 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3c71856e
[DEBUG] 2021-04-12 15:39:32.360 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@e51e91b
[DEBUG] 2021-04-12 15:39:32.360 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@e51e91b
[DEBUG] 2021-04-12 15:39:32.360 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@e51e91b
[DEBUG] 2021-04-12 15:39:32.361 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@191bcd0a
[DEBUG] 2021-04-12 15:39:32.362 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@20859c6
[DEBUG] 2021-04-12 15:39:32.363 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@174145f8
[DEBUG] 2021-04-12 15:39:32.363 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@174145f8
[DEBUG] 2021-04-12 15:39:32.363 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@174145f8
[DEBUG] 2021-04-12 15:39:32.364 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3a31e6c6
[DEBUG] 2021-04-12 15:39:32.365 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3a31e6c6
[DEBUG] 2021-04-12 15:39:32.365 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3a31e6c6
[DEBUG] 2021-04-12 15:39:32.365 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5be9c5b
[DEBUG] 2021-04-12 15:39:32.366 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@288bd078
[DEBUG] 2021-04-12 15:39:32.368 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5773f1b3
[DEBUG] 2021-04-12 15:39:32.368 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5773f1b3
[DEBUG] 2021-04-12 15:39:32.368 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b3648e6
[DEBUG] 2021-04-12 15:39:32.370 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5a3a2dd7
[DEBUG] 2021-04-12 15:39:32.370 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a3a2dd7
[DEBUG] 2021-04-12 15:39:32.372 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3ee5b396
[DEBUG] 2021-04-12 15:39:32.372 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3ee5b396
[DEBUG] 2021-04-12 15:39:32.373 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@556896ae
[DEBUG] 2021-04-12 15:39:32.374 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74701dc9
[DEBUG] 2021-04-12 15:39:32.375 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@356bf985
[DEBUG] 2021-04-12 15:39:32.379 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@502e4a44
[DEBUG] 2021-04-12 15:39:32.379 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@502e4a44
[DEBUG] 2021-04-12 15:39:32.380 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@406bde19
[DEBUG] 2021-04-12 15:39:32.381 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4c30983c
[DEBUG] 2021-04-12 15:39:32.381 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@423851d3
[DEBUG] 2021-04-12 15:39:32.381 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@e628329
[DEBUG] 2021-04-12 15:39:32.381 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@10e71fea
[DEBUG] 2021-04-12 15:39:32.381 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@58de84b2
[DEBUG] 2021-04-12 15:39:32.381 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5868f0b3
[DEBUG] 2021-04-12 15:39:32.382 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@42894b5c
[DEBUG] 2021-04-12 15:39:32.423 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 15:39:32.424 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 15:39:32.425 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 15:39:32.426 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 15:39:32.428 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 15:39:32.429 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 15:39:32.430 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 15:39:32.432 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 15:39:32.433 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 15:39:32.433 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 15:39:32.434 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 15:39:32.434 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 15:39:32.434 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 15:39:32.435 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 15:39:32.443 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 15:39:32.443 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 15:39:32.443 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 15:39:32.684 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 15:39:33.376 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 15:39:33.376 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 15:39:33.376 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 15:39:33.430 [http-nio-8080-exec-1] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 15:39:33.455 [http-nio-8080-exec-1] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 15:39:33.505 [http-nio-8080-exec-1] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 15:39:33.574 [http-nio-8080-exec-1] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 15:39:33.579 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@39acab13] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5c2e161a]
[DEBUG] 2021-04-12 15:39:33.638 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 15:39:33.669 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 15:39:33.678 [http-nio-8080-exec-1] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 15:39:33.682 [http-nio-8080-exec-1] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 15:39:33.730 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 15:39:33.750 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 15:39:33.753 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 15:39:33.757 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 15:39:33.761 [http-nio-8080-exec-1] PropertyBinder - Building property id
[DEBUG] 2021-04-12 15:39:33.767 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 15:39:33.769 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 15:39:33.770 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 15:39:33.771 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 15:39:33.771 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 15:39:33.771 [http-nio-8080-exec-1] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 15:39:33.772 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 15:39:33.772 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 15:39:33.772 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 15:39:33.773 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 15:39:33.773 [http-nio-8080-exec-1] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 15:39:33.774 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 15:39:33.774 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 15:39:33.774 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 15:39:33.774 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 15:39:33.774 [http-nio-8080-exec-1] PropertyBinder - Building property media
[DEBUG] 2021-04-12 15:39:33.774 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 15:39:33.777 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 15:39:33.777 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 15:39:33.778 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 15:39:33.778 [http-nio-8080-exec-1] PropertyBinder - Building property name
[DEBUG] 2021-04-12 15:39:33.778 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 15:39:33.779 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 15:39:33.780 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 15:39:33.780 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 15:39:33.780 [http-nio-8080-exec-1] PropertyBinder - Building property species
[DEBUG] 2021-04-12 15:39:33.794 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 15:39:33.794 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 15:39:33.794 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 15:39:33.794 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 15:39:33.794 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 15:39:33.794 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 15:39:33.796 [http-nio-8080-exec-1] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 15:39:33.843 [http-nio-8080-exec-1] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 15:39:33.844 [http-nio-8080-exec-1] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 15:39:33.844 [http-nio-8080-exec-1] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - Statistics: disabled
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 15:39:33.845 [http-nio-8080-exec-1] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 15:39:33.846 [http-nio-8080-exec-1] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 15:39:33.846 [http-nio-8080-exec-1] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 15:39:33.846 [http-nio-8080-exec-1] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 15:39:33.846 [http-nio-8080-exec-1] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 15:39:33.846 [http-nio-8080-exec-1] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 15:39:33.846 [http-nio-8080-exec-1] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 15:39:33.846 [http-nio-8080-exec-1] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 15:39:33.846 [http-nio-8080-exec-1] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 15:39:33.846 [http-nio-8080-exec-1] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 15:39:33.846 [http-nio-8080-exec-1] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 15:39:33.848 [http-nio-8080-exec-1] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 15:39:33.848 [http-nio-8080-exec-1] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 15:39:33.848 [http-nio-8080-exec-1] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 15:39:33.849 [http-nio-8080-exec-1] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 15:39:33.929 [http-nio-8080-exec-1] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 15:39:33.953 [http-nio-8080-exec-1] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 15:39:33.953 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, org.apache.activemq.broker.jmx.createConnector=false, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=13.0.1+9, user.name=Walker, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, derby.system.home=C:\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=13.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=Jun 30 2020 21:49:10 UTC, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, tomee.version=7.1.4, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.path=C:\tomcat\bin\bootstrap.jar;C:\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.57.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/tomcat/lib","C:/tomcat/lib/*.jar","C:\tomcat/lib","C:\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=6.3, openejb.version=7.1.4, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=C:\tomcat, user.dir=C:\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2c1f77de, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0, authconfigprovider.factory=false}
[DEBUG] 2021-04-12 15:39:33.977 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 15:39:33.977 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 15:39:33.981 [http-nio-8080-exec-1] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 15:39:33.983 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 15:39:33.983 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@39acab13] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@24338a7e]
[DEBUG] 2021-04-12 15:39:34.042 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 15:39:34.042 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 15:39:34.066 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 15:39:34.066 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 15:39:34.349 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 15:39:34.349 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 15:39:34.349 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 15:39:34.349 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 15:39:34.349 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 15:39:34.349 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 15:39:34.349 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 15:39:34.380 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31087274]
[DEBUG] 2021-04-12 15:39:34.381 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 15:39:34.381 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 15:39:34.381 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 15:39:34.382 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 15:39:34.383 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 15:39:34.383 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 15:39:34.405 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 15:39:34.410 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 15:39:34.412 [http-nio-8080-exec-1] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 15:39:34.413 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23f4d3bc]
[DEBUG] 2021-04-12 15:39:34.413 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 15:39:34.413 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 15:39:34.413 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 15:39:34.413 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 15:39:34.413 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 15:39:34.413 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 15:39:34.413 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 15:39:34.413 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 15:39:34.413 [http-nio-8080-exec-1] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 15:39:34.430 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 15:39:34.430 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 15:39:34.464 [http-nio-8080-exec-1] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 15:39:34.464 [http-nio-8080-exec-1] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 15:39:34.465 [http-nio-8080-exec-1] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 15:39:34.476 [http-nio-8080-exec-1] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 15:39:34.476 [http-nio-8080-exec-1] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 15:39:34.479 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 15:39:34.479 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 15:39:34.482 [http-nio-8080-exec-1] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2d1d18f9
[DEBUG] 2021-04-12 15:39:34.484 [http-nio-8080-exec-1] SessionFactoryRegistry - Registering SessionFactory: 6efcb293-239a-4b12-95cb-5e2434ac089a (<unnamed>)
[DEBUG] 2021-04-12 15:39:34.484 [http-nio-8080-exec-1] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 15:39:34.578 [http-nio-8080-exec-1] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 15:39:34.602 [http-nio-8080-exec-1] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 15:39:34.667 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 15:39:34.667 [http-nio-8080-exec-1] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 15:39:34.680 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 15:39:34.681 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 15:39:34.681 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:39:34.681 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 15:39:34.681 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:39:34.681 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 15:39:34.681 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:39:34.681 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 15:39:34.681 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:39:34.682 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 15:39:34.682 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:39:34.683 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 15:39:34.683 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 15:39:34.683 [http-nio-8080-exec-1] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 15:39:34.684 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 15:39:37.007 [http-nio-8080-exec-2] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 15:39:37.010 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 15:39:37.010 [http-nio-8080-exec-2] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 15:39:37.011 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 15:39:37.011 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 15:39:37.011 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:39:37.011 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 15:39:37.011 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:39:37.011 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 15:39:37.011 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:39:37.011 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 15:39:37.011 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:39:37.011 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 15:39:37.011 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:39:37.011 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 15:39:37.011 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 15:39:37.012 [http-nio-8080-exec-2] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 15:39:37.012 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 15:39:40.017 [http-nio-8080-exec-3] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 15:39:40.035 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 15:39:40.035 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 15:39:40.036 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 15:39:40.036 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 15:39:40.036 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:39:40.036 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 15:39:40.036 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:39:40.036 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 15:39:40.036 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:39:40.036 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 15:39:40.036 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:39:40.036 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 15:39:40.036 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:39:40.036 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 15:39:40.037 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 15:39:40.038 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 15:39:40.038 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 15:41:09.641 [http-nio-8080-exec-4] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 15:41:09.644 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 15:41:09.644 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 15:41:09.645 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 15:41:09.645 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 15:41:09.645 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:41:09.645 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 15:41:09.645 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:41:09.645 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 15:41:09.645 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:41:09.645 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 15:41:09.645 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:41:09.645 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 15:41:09.645 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:41:09.645 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 15:41:09.645 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 15:41:09.645 [http-nio-8080-exec-4] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 15:41:09.645 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 15:42:27.200 [http-nio-8080-exec-7] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 15:42:27.209 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 15:42:27.209 [http-nio-8080-exec-7] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 15:42:27.209 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 15:42:27.209 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 15:42:27.209 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:42:27.209 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 15:42:27.209 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:42:27.209 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 15:42:27.209 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:42:27.209 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 15:42:27.209 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:42:27.209 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 15:42:27.209 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 15:42:27.209 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 15:42:27.209 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 15:42:27.209 [http-nio-8080-exec-7] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 15:42:27.209 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:02:40.337 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 16:02:40.349 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 16:02:40.357 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 16:02:40.564 [http-nio-8080-exec-1] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 16:02:40.569 [http-nio-8080-exec-1] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 16:02:40.784 [http-nio-8080-exec-1] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 16:02:40.785 [http-nio-8080-exec-1] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 16:02:40.815 [http-nio-8080-exec-1] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 16:02:41.215 [http-nio-8080-exec-1] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 16:02:41.245 [http-nio-8080-exec-1] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 16:02:41.247 [http-nio-8080-exec-1] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 16:02:41.277 [http-nio-8080-exec-1] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 16:02:41.327 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7ced93d7
[DEBUG] 2021-04-12 16:02:41.327 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7ced93d7
[DEBUG] 2021-04-12 16:02:41.327 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7ced93d7
[DEBUG] 2021-04-12 16:02:41.328 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48e9e7d3
[DEBUG] 2021-04-12 16:02:41.329 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@278d65c4
[DEBUG] 2021-04-12 16:02:41.329 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@31877b74
[DEBUG] 2021-04-12 16:02:41.331 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@26e9bd76
[DEBUG] 2021-04-12 16:02:41.331 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@26e9bd76
[DEBUG] 2021-04-12 16:02:41.331 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@26e9bd76
[DEBUG] 2021-04-12 16:02:41.332 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@66ea9d
[DEBUG] 2021-04-12 16:02:41.332 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@66ea9d
[DEBUG] 2021-04-12 16:02:41.332 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66ea9d
[DEBUG] 2021-04-12 16:02:41.334 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2ed910ef
[DEBUG] 2021-04-12 16:02:41.334 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2ed910ef
[DEBUG] 2021-04-12 16:02:41.334 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2ed910ef
[DEBUG] 2021-04-12 16:02:41.336 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@286c11a3
[DEBUG] 2021-04-12 16:02:41.336 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@286c11a3
[DEBUG] 2021-04-12 16:02:41.336 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@286c11a3
[DEBUG] 2021-04-12 16:02:41.337 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@530ff330
[DEBUG] 2021-04-12 16:02:41.337 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@530ff330
[DEBUG] 2021-04-12 16:02:41.337 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@530ff330
[DEBUG] 2021-04-12 16:02:41.338 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@bcb6426
[DEBUG] 2021-04-12 16:02:41.341 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@bcb6426
[DEBUG] 2021-04-12 16:02:41.342 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@bcb6426
[DEBUG] 2021-04-12 16:02:41.343 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@136a5e3
[DEBUG] 2021-04-12 16:02:41.343 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@136a5e3
[DEBUG] 2021-04-12 16:02:41.343 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@136a5e3
[DEBUG] 2021-04-12 16:02:41.346 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3c56e362
[DEBUG] 2021-04-12 16:02:41.346 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3c56e362
[DEBUG] 2021-04-12 16:02:41.347 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7e99bda9
[DEBUG] 2021-04-12 16:02:41.347 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7e99bda9
[DEBUG] 2021-04-12 16:02:41.348 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@cc4ed03
[DEBUG] 2021-04-12 16:02:41.348 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@cc4ed03
[DEBUG] 2021-04-12 16:02:41.349 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1988aed1
[DEBUG] 2021-04-12 16:02:41.350 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@763dd3ec
[DEBUG] 2021-04-12 16:02:41.351 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2d5d55aa
[DEBUG] 2021-04-12 16:02:41.352 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2d5d55aa
[DEBUG] 2021-04-12 16:02:41.353 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4e3c6e53
[DEBUG] 2021-04-12 16:02:41.353 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4e3c6e53
[DEBUG] 2021-04-12 16:02:41.359 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@23f99b59
[DEBUG] 2021-04-12 16:02:41.359 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@23f99b59
[DEBUG] 2021-04-12 16:02:41.361 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@702a3f8f
[DEBUG] 2021-04-12 16:02:41.361 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@702a3f8f
[DEBUG] 2021-04-12 16:02:41.363 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2c9418ad
[DEBUG] 2021-04-12 16:02:41.364 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2c9418ad
[DEBUG] 2021-04-12 16:02:41.366 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ceeebe1
[DEBUG] 2021-04-12 16:02:41.366 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ceeebe1
[DEBUG] 2021-04-12 16:02:41.368 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@47c25f94
[DEBUG] 2021-04-12 16:02:41.368 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@47c25f94
[DEBUG] 2021-04-12 16:02:41.370 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@450e73b9
[DEBUG] 2021-04-12 16:02:41.370 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@450e73b9
[DEBUG] 2021-04-12 16:02:41.372 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24bd9a9a
[DEBUG] 2021-04-12 16:02:41.372 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24bd9a9a
[DEBUG] 2021-04-12 16:02:41.374 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@26510435
[DEBUG] 2021-04-12 16:02:41.374 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@26510435
[DEBUG] 2021-04-12 16:02:41.376 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2031cf65
[DEBUG] 2021-04-12 16:02:41.376 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2031cf65
[DEBUG] 2021-04-12 16:02:41.378 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@12b8aca
[DEBUG] 2021-04-12 16:02:41.379 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12b8aca
[DEBUG] 2021-04-12 16:02:41.379 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12b8aca
[DEBUG] 2021-04-12 16:02:41.381 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6bfdae9c
[DEBUG] 2021-04-12 16:02:41.383 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@62e9a31d
[DEBUG] 2021-04-12 16:02:41.384 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@62e9a31d
[DEBUG] 2021-04-12 16:02:41.385 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@62e9a31d
[DEBUG] 2021-04-12 16:02:41.386 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@31677131
[DEBUG] 2021-04-12 16:02:41.387 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2dbdfd5c
[DEBUG] 2021-04-12 16:02:41.387 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2dbdfd5c
[DEBUG] 2021-04-12 16:02:41.388 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@19546cf9
[DEBUG] 2021-04-12 16:02:41.391 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@19546cf9
[DEBUG] 2021-04-12 16:02:41.393 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7bfe218
[DEBUG] 2021-04-12 16:02:41.393 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7bfe218
[DEBUG] 2021-04-12 16:02:41.394 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@866dbee
[DEBUG] 2021-04-12 16:02:41.394 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@866dbee
[DEBUG] 2021-04-12 16:02:41.396 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5694832
[DEBUG] 2021-04-12 16:02:41.397 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5694832
[DEBUG] 2021-04-12 16:02:41.397 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7d164850
[DEBUG] 2021-04-12 16:02:41.399 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@69c37f7a
[DEBUG] 2021-04-12 16:02:41.399 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@69c37f7a
[DEBUG] 2021-04-12 16:02:41.399 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@69c37f7a
[DEBUG] 2021-04-12 16:02:41.401 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@69ea525b
[DEBUG] 2021-04-12 16:02:41.401 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@69ea525b
[DEBUG] 2021-04-12 16:02:41.401 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@69ea525b
[DEBUG] 2021-04-12 16:02:41.414 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@25de71e3
[DEBUG] 2021-04-12 16:02:41.415 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@16490a2e
[DEBUG] 2021-04-12 16:02:41.416 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@34e67c2d
[DEBUG] 2021-04-12 16:02:41.417 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@34e67c2d
[DEBUG] 2021-04-12 16:02:41.418 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@34e67c2d
[DEBUG] 2021-04-12 16:02:41.420 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5d99f0a
[DEBUG] 2021-04-12 16:02:41.420 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5d99f0a
[DEBUG] 2021-04-12 16:02:41.420 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5d99f0a
[DEBUG] 2021-04-12 16:02:41.420 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3326279e
[DEBUG] 2021-04-12 16:02:41.421 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@66624b2f
[DEBUG] 2021-04-12 16:02:41.441 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@23ca2b68
[DEBUG] 2021-04-12 16:02:41.441 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@23ca2b68
[DEBUG] 2021-04-12 16:02:41.442 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4ea5a7a1
[DEBUG] 2021-04-12 16:02:41.444 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3247b897
[DEBUG] 2021-04-12 16:02:41.444 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3247b897
[DEBUG] 2021-04-12 16:02:41.446 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@96762c2
[DEBUG] 2021-04-12 16:02:41.447 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@96762c2
[DEBUG] 2021-04-12 16:02:41.448 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3e0bd5c2
[DEBUG] 2021-04-12 16:02:41.449 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74266dd9
[DEBUG] 2021-04-12 16:02:41.451 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@77f6c6a1
[DEBUG] 2021-04-12 16:02:41.465 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@47d7c2f4
[DEBUG] 2021-04-12 16:02:41.465 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@47d7c2f4
[DEBUG] 2021-04-12 16:02:41.467 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@676960b
[DEBUG] 2021-04-12 16:02:41.467 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4ff600f
[DEBUG] 2021-04-12 16:02:41.467 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2902794b
[DEBUG] 2021-04-12 16:02:41.467 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f907384
[DEBUG] 2021-04-12 16:02:41.468 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d647eb3
[DEBUG] 2021-04-12 16:02:41.468 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@62649a08
[DEBUG] 2021-04-12 16:02:41.468 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@58966f2e
[DEBUG] 2021-04-12 16:02:41.468 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@74362beb
[DEBUG] 2021-04-12 16:02:41.513 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 16:02:41.514 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 16:02:41.515 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:02:41.517 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:02:41.518 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 16:02:41.519 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 16:02:41.520 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 16:02:41.522 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:02:41.523 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 16:02:41.523 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 16:02:41.524 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 16:02:41.524 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 16:02:41.524 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:02:41.525 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 16:02:41.535 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 16:02:41.535 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 16:02:41.535 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 16:02:41.823 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 16:02:42.756 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:02:42.756 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:02:42.756 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 16:02:42.790 [http-nio-8080-exec-1] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 16:02:42.821 [http-nio-8080-exec-1] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 16:02:42.953 [http-nio-8080-exec-1] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 16:02:43.058 [http-nio-8080-exec-1] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 16:02:43.063 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@338857ea] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@35ef37cd]
[DEBUG] 2021-04-12 16:02:43.163 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 16:02:43.198 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 16:02:43.206 [http-nio-8080-exec-1] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 16:02:43.209 [http-nio-8080-exec-1] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 16:02:43.243 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:02:43.247 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 16:02:43.249 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 16:02:43.254 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 16:02:43.256 [http-nio-8080-exec-1] PropertyBinder - Building property id
[DEBUG] 2021-04-12 16:02:43.262 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 16:02:43.264 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:02:43.264 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 16:02:43.264 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 16:02:43.264 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 16:02:43.265 [http-nio-8080-exec-1] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 16:02:43.265 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:02:43.265 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 16:02:43.265 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 16:02:43.265 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 16:02:43.266 [http-nio-8080-exec-1] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 16:02:43.266 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:02:43.266 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 16:02:43.266 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 16:02:43.266 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 16:02:43.266 [http-nio-8080-exec-1] PropertyBinder - Building property media
[DEBUG] 2021-04-12 16:02:43.267 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:02:43.268 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 16:02:43.268 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 16:02:43.268 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 16:02:43.268 [http-nio-8080-exec-1] PropertyBinder - Building property name
[DEBUG] 2021-04-12 16:02:43.268 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:02:43.268 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 16:02:43.268 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 16:02:43.268 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 16:02:43.268 [http-nio-8080-exec-1] PropertyBinder - Building property species
[DEBUG] 2021-04-12 16:02:43.273 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 16:02:43.273 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 16:02:43.273 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 16:02:43.273 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 16:02:43.273 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 16:02:43.273 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 16:02:43.275 [http-nio-8080-exec-1] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 16:02:43.322 [http-nio-8080-exec-1] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 16:02:43.323 [http-nio-8080-exec-1] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 16:02:43.323 [http-nio-8080-exec-1] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 16:02:43.323 [http-nio-8080-exec-1] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 16:02:43.323 [http-nio-8080-exec-1] Settings - Statistics: disabled
[DEBUG] 2021-04-12 16:02:43.323 [http-nio-8080-exec-1] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 16:02:43.323 [http-nio-8080-exec-1] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 16:02:43.323 [http-nio-8080-exec-1] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 16:02:43.323 [http-nio-8080-exec-1] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 16:02:43.323 [http-nio-8080-exec-1] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 16:02:43.323 [http-nio-8080-exec-1] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 16:02:43.323 [http-nio-8080-exec-1] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 16:02:43.323 [http-nio-8080-exec-1] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 16:02:43.323 [http-nio-8080-exec-1] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 16:02:43.323 [http-nio-8080-exec-1] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 16:02:43.324 [http-nio-8080-exec-1] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 16:02:43.324 [http-nio-8080-exec-1] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 16:02:43.324 [http-nio-8080-exec-1] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 16:02:43.324 [http-nio-8080-exec-1] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 16:02:43.324 [http-nio-8080-exec-1] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 16:02:43.324 [http-nio-8080-exec-1] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 16:02:43.326 [http-nio-8080-exec-1] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 16:02:43.326 [http-nio-8080-exec-1] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 16:02:43.326 [http-nio-8080-exec-1] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 16:02:43.326 [http-nio-8080-exec-1] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 16:02:43.326 [http-nio-8080-exec-1] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 16:02:43.326 [http-nio-8080-exec-1] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 16:02:43.326 [http-nio-8080-exec-1] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 16:02:43.326 [http-nio-8080-exec-1] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 16:02:43.326 [http-nio-8080-exec-1] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 16:02:43.326 [http-nio-8080-exec-1] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 16:02:43.326 [http-nio-8080-exec-1] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 16:02:43.326 [http-nio-8080-exec-1] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 16:02:43.326 [http-nio-8080-exec-1] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 16:02:43.326 [http-nio-8080-exec-1] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 16:02:43.326 [http-nio-8080-exec-1] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 16:02:43.326 [http-nio-8080-exec-1] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 16:02:43.327 [http-nio-8080-exec-1] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 16:02:43.327 [http-nio-8080-exec-1] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 16:02:43.414 [http-nio-8080-exec-1] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 16:02:43.435 [http-nio-8080-exec-1] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 16:02:43.435 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, org.apache.activemq.broker.jmx.createConnector=false, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=13.0.1+9, user.name=Walker, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, derby.system.home=C:\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=13.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=Jun 30 2020 21:49:10 UTC, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, tomee.version=7.1.4, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.path=C:\tomcat\bin\bootstrap.jar;C:\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.57.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/tomcat/lib","C:/tomcat/lib/*.jar","C:\tomcat/lib","C:\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=6.3, openejb.version=7.1.4, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=C:\tomcat, user.dir=C:\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1457389, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0, authconfigprovider.factory=false}
[DEBUG] 2021-04-12 16:02:43.481 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:02:43.482 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:02:43.485 [http-nio-8080-exec-1] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 16:02:43.487 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 16:02:43.487 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@338857ea] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@faec81f]
[DEBUG] 2021-04-12 16:02:43.558 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:02:43.558 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:02:43.582 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:02:43.582 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:02:43.897 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 16:02:43.897 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 16:02:43.897 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 16:02:43.897 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:02:43.897 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 16:02:43.897 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 16:02:43.897 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:02:43.933 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a1ff11c]
[DEBUG] 2021-04-12 16:02:43.934 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:02:43.935 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:02:43.935 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:02:43.935 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:02:43.935 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:02:43.935 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:02:43.964 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:02:43.983 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:02:43.986 [http-nio-8080-exec-1] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:02:43.986 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27afa43e]
[DEBUG] 2021-04-12 16:02:43.986 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:02:43.986 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:02:43.986 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:02:43.986 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:02:43.987 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:02:43.987 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:02:43.987 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:02:43.987 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:02:43.987 [http-nio-8080-exec-1] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:02:44.007 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:02:44.008 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:02:44.048 [http-nio-8080-exec-1] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 16:02:44.048 [http-nio-8080-exec-1] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 16:02:44.049 [http-nio-8080-exec-1] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 16:02:44.062 [http-nio-8080-exec-1] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 16:02:44.062 [http-nio-8080-exec-1] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 16:02:44.063 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 16:02:44.063 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 16:02:44.067 [http-nio-8080-exec-1] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1dc9aeef
[DEBUG] 2021-04-12 16:02:44.069 [http-nio-8080-exec-1] SessionFactoryRegistry - Registering SessionFactory: c0aeaab8-4a30-459d-a374-83839691d984 (<unnamed>)
[DEBUG] 2021-04-12 16:02:44.069 [http-nio-8080-exec-1] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 16:02:44.178 [http-nio-8080-exec-1] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 16:02:44.203 [http-nio-8080-exec-1] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:02:44.226 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:02:44.227 [http-nio-8080-exec-1] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:02:44.239 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:02:44.243 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:02:44.243 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:02:44.243 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:02:44.243 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:02:44.243 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:02:44.243 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:02:44.244 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 16:02:44.244 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:02:44.244 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:02:44.244 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:02:44.246 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:02:44.246 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:02:44.247 [http-nio-8080-exec-1] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 16:02:44.247 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:04:29.240 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 16:04:29.245 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 16:04:29.253 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 16:04:29.489 [http-nio-8080-exec-9] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 16:04:29.492 [http-nio-8080-exec-9] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 16:04:29.697 [http-nio-8080-exec-9] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 16:04:29.698 [http-nio-8080-exec-9] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 16:04:29.729 [http-nio-8080-exec-9] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 16:04:30.102 [http-nio-8080-exec-9] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 16:04:30.142 [http-nio-8080-exec-9] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 16:04:30.143 [http-nio-8080-exec-9] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 16:04:30.176 [http-nio-8080-exec-9] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 16:04:30.243 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@134b002c
[DEBUG] 2021-04-12 16:04:30.244 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@134b002c
[DEBUG] 2021-04-12 16:04:30.244 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@134b002c
[DEBUG] 2021-04-12 16:04:30.244 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6d09eff1
[DEBUG] 2021-04-12 16:04:30.245 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@43e13963
[DEBUG] 2021-04-12 16:04:30.246 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@182044c6
[DEBUG] 2021-04-12 16:04:30.247 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6420d744
[DEBUG] 2021-04-12 16:04:30.247 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6420d744
[DEBUG] 2021-04-12 16:04:30.247 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6420d744
[DEBUG] 2021-04-12 16:04:30.248 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1bb342ff
[DEBUG] 2021-04-12 16:04:30.248 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1bb342ff
[DEBUG] 2021-04-12 16:04:30.249 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1bb342ff
[DEBUG] 2021-04-12 16:04:30.250 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@58ccafa5
[DEBUG] 2021-04-12 16:04:30.251 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@58ccafa5
[DEBUG] 2021-04-12 16:04:30.251 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@58ccafa5
[DEBUG] 2021-04-12 16:04:30.252 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5b46fdb7
[DEBUG] 2021-04-12 16:04:30.252 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5b46fdb7
[DEBUG] 2021-04-12 16:04:30.253 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5b46fdb7
[DEBUG] 2021-04-12 16:04:30.254 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@97d3135
[DEBUG] 2021-04-12 16:04:30.254 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@97d3135
[DEBUG] 2021-04-12 16:04:30.254 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@97d3135
[DEBUG] 2021-04-12 16:04:30.255 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@714fe3a8
[DEBUG] 2021-04-12 16:04:30.255 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@714fe3a8
[DEBUG] 2021-04-12 16:04:30.256 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@714fe3a8
[DEBUG] 2021-04-12 16:04:30.257 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@62856478
[DEBUG] 2021-04-12 16:04:30.257 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@62856478
[DEBUG] 2021-04-12 16:04:30.257 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62856478
[DEBUG] 2021-04-12 16:04:30.258 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3c8e715e
[DEBUG] 2021-04-12 16:04:30.259 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3c8e715e
[DEBUG] 2021-04-12 16:04:30.260 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2ce9f5a4
[DEBUG] 2021-04-12 16:04:30.260 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2ce9f5a4
[DEBUG] 2021-04-12 16:04:30.261 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@261388d
[DEBUG] 2021-04-12 16:04:30.261 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@261388d
[DEBUG] 2021-04-12 16:04:30.262 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ed9883
[DEBUG] 2021-04-12 16:04:30.262 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5458aaeb
[DEBUG] 2021-04-12 16:04:30.263 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@15cd863a
[DEBUG] 2021-04-12 16:04:30.264 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@15cd863a
[DEBUG] 2021-04-12 16:04:30.265 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@45d6c1ef
[DEBUG] 2021-04-12 16:04:30.265 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@45d6c1ef
[DEBUG] 2021-04-12 16:04:30.268 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@681a5cb1
[DEBUG] 2021-04-12 16:04:30.269 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@681a5cb1
[DEBUG] 2021-04-12 16:04:30.270 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4da68ed7
[DEBUG] 2021-04-12 16:04:30.270 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4da68ed7
[DEBUG] 2021-04-12 16:04:30.274 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2c325971
[DEBUG] 2021-04-12 16:04:30.275 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2c325971
[DEBUG] 2021-04-12 16:04:30.276 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6236f92c
[DEBUG] 2021-04-12 16:04:30.276 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6236f92c
[DEBUG] 2021-04-12 16:04:30.278 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@453ac5bf
[DEBUG] 2021-04-12 16:04:30.278 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@453ac5bf
[DEBUG] 2021-04-12 16:04:30.280 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3075ad38
[DEBUG] 2021-04-12 16:04:30.280 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3075ad38
[DEBUG] 2021-04-12 16:04:30.281 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4c83321d
[DEBUG] 2021-04-12 16:04:30.282 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4c83321d
[DEBUG] 2021-04-12 16:04:30.283 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@28f825c0
[DEBUG] 2021-04-12 16:04:30.283 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@28f825c0
[DEBUG] 2021-04-12 16:04:30.285 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4f5275f8
[DEBUG] 2021-04-12 16:04:30.285 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4f5275f8
[DEBUG] 2021-04-12 16:04:30.286 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1c6ea515
[DEBUG] 2021-04-12 16:04:30.287 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1c6ea515
[DEBUG] 2021-04-12 16:04:30.287 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1c6ea515
[DEBUG] 2021-04-12 16:04:30.289 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@20832e93
[DEBUG] 2021-04-12 16:04:30.291 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@19816f49
[DEBUG] 2021-04-12 16:04:30.291 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@19816f49
[DEBUG] 2021-04-12 16:04:30.292 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@19816f49
[DEBUG] 2021-04-12 16:04:30.293 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@17850de9
[DEBUG] 2021-04-12 16:04:30.294 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@134be5ae
[DEBUG] 2021-04-12 16:04:30.294 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@134be5ae
[DEBUG] 2021-04-12 16:04:30.295 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@152a5e95
[DEBUG] 2021-04-12 16:04:30.295 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@152a5e95
[DEBUG] 2021-04-12 16:04:30.296 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1fc41481
[DEBUG] 2021-04-12 16:04:30.296 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1fc41481
[DEBUG] 2021-04-12 16:04:30.297 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2e51fdda
[DEBUG] 2021-04-12 16:04:30.297 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2e51fdda
[DEBUG] 2021-04-12 16:04:30.298 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@57a79786
[DEBUG] 2021-04-12 16:04:30.299 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@57a79786
[DEBUG] 2021-04-12 16:04:30.299 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@10f0c012
[DEBUG] 2021-04-12 16:04:30.301 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6d26ad
[DEBUG] 2021-04-12 16:04:30.301 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6d26ad
[DEBUG] 2021-04-12 16:04:30.301 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6d26ad
[DEBUG] 2021-04-12 16:04:30.302 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3ee323cc
[DEBUG] 2021-04-12 16:04:30.302 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3ee323cc
[DEBUG] 2021-04-12 16:04:30.302 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3ee323cc
[DEBUG] 2021-04-12 16:04:30.303 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@72f98fc3
[DEBUG] 2021-04-12 16:04:30.304 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@300a3034
[DEBUG] 2021-04-12 16:04:30.305 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@315a86eb
[DEBUG] 2021-04-12 16:04:30.305 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@315a86eb
[DEBUG] 2021-04-12 16:04:30.306 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@315a86eb
[DEBUG] 2021-04-12 16:04:30.307 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@64e3f213
[DEBUG] 2021-04-12 16:04:30.307 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@64e3f213
[DEBUG] 2021-04-12 16:04:30.307 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@64e3f213
[DEBUG] 2021-04-12 16:04:30.308 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4500796a
[DEBUG] 2021-04-12 16:04:30.308 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7f174aa
[DEBUG] 2021-04-12 16:04:30.310 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7737e4a1
[DEBUG] 2021-04-12 16:04:30.310 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7737e4a1
[DEBUG] 2021-04-12 16:04:30.311 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@13e0eb36
[DEBUG] 2021-04-12 16:04:30.312 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@535307de
[DEBUG] 2021-04-12 16:04:30.313 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@535307de
[DEBUG] 2021-04-12 16:04:30.315 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3e71a5ed
[DEBUG] 2021-04-12 16:04:30.315 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3e71a5ed
[DEBUG] 2021-04-12 16:04:30.315 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@633b881f
[DEBUG] 2021-04-12 16:04:30.316 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5445a609
[DEBUG] 2021-04-12 16:04:30.318 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@33026e2c
[DEBUG] 2021-04-12 16:04:30.325 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@40c2049b
[DEBUG] 2021-04-12 16:04:30.325 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@40c2049b
[DEBUG] 2021-04-12 16:04:30.326 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4d22bfac
[DEBUG] 2021-04-12 16:04:30.326 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3ce8022d
[DEBUG] 2021-04-12 16:04:30.326 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6543a0d8
[DEBUG] 2021-04-12 16:04:30.326 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c5c5467
[DEBUG] 2021-04-12 16:04:30.327 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4db5f9f
[DEBUG] 2021-04-12 16:04:30.327 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@785ecc43
[DEBUG] 2021-04-12 16:04:30.327 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@e3e6f0
[DEBUG] 2021-04-12 16:04:30.327 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3ea265e7
[DEBUG] 2021-04-12 16:04:30.366 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 16:04:30.367 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 16:04:30.368 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:04:30.369 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:04:30.371 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 16:04:30.375 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 16:04:30.375 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 16:04:30.377 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:04:30.378 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 16:04:30.379 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 16:04:30.379 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 16:04:30.380 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 16:04:30.380 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:04:30.382 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 16:04:30.390 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 16:04:30.390 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 16:04:30.390 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 16:04:30.685 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 16:04:31.362 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:04:31.362 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:04:31.362 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 16:04:31.399 [http-nio-8080-exec-9] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 16:04:31.428 [http-nio-8080-exec-9] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 16:04:31.496 [http-nio-8080-exec-9] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 16:04:31.549 [http-nio-8080-exec-9] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 16:04:31.555 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6dc27b93] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@45548525]
[DEBUG] 2021-04-12 16:04:31.624 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 16:04:31.655 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 16:04:31.664 [http-nio-8080-exec-9] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 16:04:31.669 [http-nio-8080-exec-9] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 16:04:31.731 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:04:31.735 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 16:04:31.738 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 16:04:31.741 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 16:04:31.744 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2021-04-12 16:04:31.751 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 16:04:31.752 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:04:31.753 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 16:04:31.753 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 16:04:31.754 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 16:04:31.754 [http-nio-8080-exec-9] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 16:04:31.754 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:04:31.755 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 16:04:31.755 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 16:04:31.755 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 16:04:31.755 [http-nio-8080-exec-9] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 16:04:31.755 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:04:31.755 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 16:04:31.755 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 16:04:31.755 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 16:04:31.755 [http-nio-8080-exec-9] PropertyBinder - Building property media
[DEBUG] 2021-04-12 16:04:31.756 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:04:31.757 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 16:04:31.757 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 16:04:31.757 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 16:04:31.757 [http-nio-8080-exec-9] PropertyBinder - Building property name
[DEBUG] 2021-04-12 16:04:31.757 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:04:31.757 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 16:04:31.758 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 16:04:31.758 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 16:04:31.758 [http-nio-8080-exec-9] PropertyBinder - Building property species
[DEBUG] 2021-04-12 16:04:31.762 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 16:04:31.762 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 16:04:31.762 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 16:04:31.762 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 16:04:31.762 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 16:04:31.762 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 16:04:31.763 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 16:04:31.809 [http-nio-8080-exec-9] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 16:04:31.810 [http-nio-8080-exec-9] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 16:04:31.810 [http-nio-8080-exec-9] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 16:04:31.810 [http-nio-8080-exec-9] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 16:04:31.810 [http-nio-8080-exec-9] Settings - Statistics: disabled
[DEBUG] 2021-04-12 16:04:31.810 [http-nio-8080-exec-9] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 16:04:31.811 [http-nio-8080-exec-9] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 16:04:31.812 [http-nio-8080-exec-9] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 16:04:31.812 [http-nio-8080-exec-9] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 16:04:31.812 [http-nio-8080-exec-9] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 16:04:31.812 [http-nio-8080-exec-9] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 16:04:31.812 [http-nio-8080-exec-9] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 16:04:31.812 [http-nio-8080-exec-9] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 16:04:31.812 [http-nio-8080-exec-9] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 16:04:31.812 [http-nio-8080-exec-9] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 16:04:31.812 [http-nio-8080-exec-9] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 16:04:31.812 [http-nio-8080-exec-9] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 16:04:31.908 [http-nio-8080-exec-9] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 16:04:31.939 [http-nio-8080-exec-9] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 16:04:31.939 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, org.apache.activemq.broker.jmx.createConnector=false, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=13.0.1+9, user.name=Walker, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, derby.system.home=C:\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=13.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=Jun 30 2020 21:49:10 UTC, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, tomee.version=7.1.4, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.path=C:\tomcat\bin\bootstrap.jar;C:\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.57.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/tomcat/lib","C:/tomcat/lib/*.jar","C:\tomcat/lib","C:\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=6.3, openejb.version=7.1.4, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=C:\tomcat, user.dir=C:\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@75e34e1e, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0, authconfigprovider.factory=false}
[DEBUG] 2021-04-12 16:04:32.064 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:04:32.064 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:04:32.068 [http-nio-8080-exec-9] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 16:04:32.069 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 16:04:32.069 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6dc27b93] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1e9a05e4]
[DEBUG] 2021-04-12 16:04:32.147 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:04:32.147 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:04:32.168 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:04:32.168 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:04:32.516 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 16:04:32.516 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 16:04:32.516 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 16:04:32.516 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:04:32.516 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 16:04:32.516 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 16:04:32.516 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:04:32.552 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1480741c]
[DEBUG] 2021-04-12 16:04:32.553 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:04:32.554 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:04:32.556 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:04:32.556 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:04:32.557 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:04:32.557 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:04:32.575 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:04:32.579 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:04:32.582 [http-nio-8080-exec-9] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:04:32.583 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@159ed0fd]
[DEBUG] 2021-04-12 16:04:32.583 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:04:32.583 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:04:32.583 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:04:32.583 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:04:32.583 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:04:32.583 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:04:32.583 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:04:32.583 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:04:32.583 [http-nio-8080-exec-9] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:04:32.600 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:04:32.600 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:04:32.640 [http-nio-8080-exec-9] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 16:04:32.640 [http-nio-8080-exec-9] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 16:04:32.640 [http-nio-8080-exec-9] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 16:04:32.652 [http-nio-8080-exec-9] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 16:04:32.652 [http-nio-8080-exec-9] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 16:04:32.654 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 16:04:32.654 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 16:04:32.657 [http-nio-8080-exec-9] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3cd4c516
[DEBUG] 2021-04-12 16:04:32.659 [http-nio-8080-exec-9] SessionFactoryRegistry - Registering SessionFactory: 4da61a56-0edd-47c9-98a1-0d50dff34768 (<unnamed>)
[DEBUG] 2021-04-12 16:04:32.659 [http-nio-8080-exec-9] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 16:04:32.769 [http-nio-8080-exec-9] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 16:04:32.792 [http-nio-8080-exec-9] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:04:32.893 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:04:32.895 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:04:32.931 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:04:32.932 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:04:32.933 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:04:32.933 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:04:32.933 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:04:32.933 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:04:32.934 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:04:32.934 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 16:04:32.934 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:04:32.934 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:04:32.934 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:04:32.937 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:04:32.938 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:04:32.939 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 16:04:32.939 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:07:16.913 [http-nio-8080-exec-7] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:07:16.917 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:07:16.917 [http-nio-8080-exec-7] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:07:16.920 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:07:16.920 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:07:16.920 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:07:16.920 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:07:16.921 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:07:16.921 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:07:16.921 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:07:16.921 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 16:07:16.921 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:07:16.921 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:07:16.921 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:07:16.921 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:07:16.921 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:07:16.921 [http-nio-8080-exec-7] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 16:07:16.921 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:20:57.023 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 16:20:57.025 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 16:20:57.029 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 16:20:57.111 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 16:20:57.114 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 16:20:57.310 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 16:20:57.310 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 16:20:57.316 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 16:20:57.555 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 16:20:57.573 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 16:20:57.574 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 16:20:57.592 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 16:20:57.623 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5017e1
[DEBUG] 2021-04-12 16:20:57.623 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5017e1
[DEBUG] 2021-04-12 16:20:57.623 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5017e1
[DEBUG] 2021-04-12 16:20:57.625 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7ed9499e
[DEBUG] 2021-04-12 16:20:57.626 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@244e619a
[DEBUG] 2021-04-12 16:20:57.626 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@5cb042da
[DEBUG] 2021-04-12 16:20:57.627 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@736309a9
[DEBUG] 2021-04-12 16:20:57.628 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@736309a9
[DEBUG] 2021-04-12 16:20:57.629 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@736309a9
[DEBUG] 2021-04-12 16:20:57.630 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6240651f
[DEBUG] 2021-04-12 16:20:57.630 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6240651f
[DEBUG] 2021-04-12 16:20:57.630 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6240651f
[DEBUG] 2021-04-12 16:20:57.631 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6642dc5a
[DEBUG] 2021-04-12 16:20:57.631 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6642dc5a
[DEBUG] 2021-04-12 16:20:57.631 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6642dc5a
[DEBUG] 2021-04-12 16:20:57.632 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@211febf3
[DEBUG] 2021-04-12 16:20:57.633 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@211febf3
[DEBUG] 2021-04-12 16:20:57.633 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@211febf3
[DEBUG] 2021-04-12 16:20:57.634 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2acbc859
[DEBUG] 2021-04-12 16:20:57.634 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2acbc859
[DEBUG] 2021-04-12 16:20:57.634 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2acbc859
[DEBUG] 2021-04-12 16:20:57.635 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4afd21c6
[DEBUG] 2021-04-12 16:20:57.635 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4afd21c6
[DEBUG] 2021-04-12 16:20:57.635 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4afd21c6
[DEBUG] 2021-04-12 16:20:57.636 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@28f878a0
[DEBUG] 2021-04-12 16:20:57.637 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@28f878a0
[DEBUG] 2021-04-12 16:20:57.638 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@28f878a0
[DEBUG] 2021-04-12 16:20:57.639 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@255e5e2e
[DEBUG] 2021-04-12 16:20:57.639 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@255e5e2e
[DEBUG] 2021-04-12 16:20:57.641 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@8a98f38
[DEBUG] 2021-04-12 16:20:57.641 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@8a98f38
[DEBUG] 2021-04-12 16:20:57.642 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@38a1a26
[DEBUG] 2021-04-12 16:20:57.642 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@38a1a26
[DEBUG] 2021-04-12 16:20:57.643 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@444cc791
[DEBUG] 2021-04-12 16:20:57.644 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@c6b2dd9
[DEBUG] 2021-04-12 16:20:57.645 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3d278b4d
[DEBUG] 2021-04-12 16:20:57.645 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3d278b4d
[DEBUG] 2021-04-12 16:20:57.646 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1e530163
[DEBUG] 2021-04-12 16:20:57.646 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1e530163
[DEBUG] 2021-04-12 16:20:57.650 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@702c436b
[DEBUG] 2021-04-12 16:20:57.651 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@702c436b
[DEBUG] 2021-04-12 16:20:57.653 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@37303f12
[DEBUG] 2021-04-12 16:20:57.654 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@37303f12
[DEBUG] 2021-04-12 16:20:57.655 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2ab5afc7
[DEBUG] 2021-04-12 16:20:57.655 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2ab5afc7
[DEBUG] 2021-04-12 16:20:57.656 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3ed03652
[DEBUG] 2021-04-12 16:20:57.656 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3ed03652
[DEBUG] 2021-04-12 16:20:57.657 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1dc76fa1
[DEBUG] 2021-04-12 16:20:57.657 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1dc76fa1
[DEBUG] 2021-04-12 16:20:57.659 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1e141e42
[DEBUG] 2021-04-12 16:20:57.660 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1e141e42
[DEBUG] 2021-04-12 16:20:57.661 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2de50ee4
[DEBUG] 2021-04-12 16:20:57.662 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2de50ee4
[DEBUG] 2021-04-12 16:20:57.662 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3b9632d1
[DEBUG] 2021-04-12 16:20:57.663 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3b9632d1
[DEBUG] 2021-04-12 16:20:57.663 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6cd166b8
[DEBUG] 2021-04-12 16:20:57.664 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6cd166b8
[DEBUG] 2021-04-12 16:20:57.665 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7a0f244f
[DEBUG] 2021-04-12 16:20:57.665 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7a0f244f
[DEBUG] 2021-04-12 16:20:57.665 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7a0f244f
[DEBUG] 2021-04-12 16:20:57.666 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4defd42
[DEBUG] 2021-04-12 16:20:57.668 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3f9270ed
[DEBUG] 2021-04-12 16:20:57.669 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3f9270ed
[DEBUG] 2021-04-12 16:20:57.670 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3f9270ed
[DEBUG] 2021-04-12 16:20:57.670 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@249e0271
[DEBUG] 2021-04-12 16:20:57.671 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3bfc6a5e
[DEBUG] 2021-04-12 16:20:57.672 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3bfc6a5e
[DEBUG] 2021-04-12 16:20:57.673 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3964d79
[DEBUG] 2021-04-12 16:20:57.673 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3964d79
[DEBUG] 2021-04-12 16:20:57.674 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4acb2510
[DEBUG] 2021-04-12 16:20:57.674 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4acb2510
[DEBUG] 2021-04-12 16:20:57.675 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7a904f32
[DEBUG] 2021-04-12 16:20:57.675 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7a904f32
[DEBUG] 2021-04-12 16:20:57.676 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4339e0de
[DEBUG] 2021-04-12 16:20:57.676 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4339e0de
[DEBUG] 2021-04-12 16:20:57.676 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@21ac5eb4
[DEBUG] 2021-04-12 16:20:57.677 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@c2e3264
[DEBUG] 2021-04-12 16:20:57.678 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@c2e3264
[DEBUG] 2021-04-12 16:20:57.678 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@c2e3264
[DEBUG] 2021-04-12 16:20:57.679 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4a14c44f
[DEBUG] 2021-04-12 16:20:57.679 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4a14c44f
[DEBUG] 2021-04-12 16:20:57.681 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4a14c44f
[DEBUG] 2021-04-12 16:20:57.683 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5c1f6d57
[DEBUG] 2021-04-12 16:20:57.683 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5cb5bb88
[DEBUG] 2021-04-12 16:20:57.684 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3a01773b
[DEBUG] 2021-04-12 16:20:57.684 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a01773b
[DEBUG] 2021-04-12 16:20:57.684 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3a01773b
[DEBUG] 2021-04-12 16:20:57.685 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@472698d
[DEBUG] 2021-04-12 16:20:57.685 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@472698d
[DEBUG] 2021-04-12 16:20:57.685 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@472698d
[DEBUG] 2021-04-12 16:20:57.686 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@39fa8ad2
[DEBUG] 2021-04-12 16:20:57.686 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6137cf6e
[DEBUG] 2021-04-12 16:20:57.687 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@16eedaa6
[DEBUG] 2021-04-12 16:20:57.687 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@16eedaa6
[DEBUG] 2021-04-12 16:20:57.687 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@341672e
[DEBUG] 2021-04-12 16:20:57.689 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@27e5b378
[DEBUG] 2021-04-12 16:20:57.689 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@27e5b378
[DEBUG] 2021-04-12 16:20:57.690 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2cfa2c4f
[DEBUG] 2021-04-12 16:20:57.691 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2cfa2c4f
[DEBUG] 2021-04-12 16:20:57.692 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@11b455e5
[DEBUG] 2021-04-12 16:20:57.692 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d025d1d
[DEBUG] 2021-04-12 16:20:57.698 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@70f822e
[DEBUG] 2021-04-12 16:20:57.701 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3f049056
[DEBUG] 2021-04-12 16:20:57.701 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f049056
[DEBUG] 2021-04-12 16:20:57.705 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1de0a46c
[DEBUG] 2021-04-12 16:20:57.705 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4d1f1ff5
[DEBUG] 2021-04-12 16:20:57.705 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@222afc67
[DEBUG] 2021-04-12 16:20:57.705 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4c2fb9dd
[DEBUG] 2021-04-12 16:20:57.705 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@54f4a7f0
[DEBUG] 2021-04-12 16:20:57.705 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@61a1ea2c
[DEBUG] 2021-04-12 16:20:57.706 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@149debbb
[DEBUG] 2021-04-12 16:20:57.707 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@25cd49a4
[DEBUG] 2021-04-12 16:20:57.755 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 16:20:57.756 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 16:20:57.759 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:20:57.760 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:20:57.761 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 16:20:57.762 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 16:20:57.765 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 16:20:57.767 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:20:57.768 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 16:20:57.768 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 16:20:57.769 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 16:20:57.769 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 16:20:57.769 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:20:57.770 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 16:20:57.776 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 16:20:57.776 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 16:20:57.776 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 16:20:57.960 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 16:20:58.454 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:20:58.454 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:20:58.454 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 16:20:58.471 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 16:20:58.490 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 16:20:58.543 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 16:20:58.720 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 16:20:58.725 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@791c12e3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b112b13]
[DEBUG] 2021-04-12 16:20:58.780 [main] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 16:20:58.800 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 16:20:58.804 [main] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 16:20:58.807 [main] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 16:20:58.827 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:20:58.829 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 16:20:58.830 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 16:20:58.833 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 16:20:58.835 [main] PropertyBinder - Building property id
[DEBUG] 2021-04-12 16:20:58.838 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 16:20:58.839 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:20:58.839 [main] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 16:20:58.839 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 16:20:58.839 [main] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 16:20:58.840 [main] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 16:20:58.840 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:20:58.840 [main] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 16:20:58.840 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 16:20:58.843 [main] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 16:20:58.843 [main] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 16:20:58.843 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:20:58.843 [main] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 16:20:58.844 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 16:20:58.844 [main] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 16:20:58.844 [main] PropertyBinder - Building property media
[DEBUG] 2021-04-12 16:20:58.844 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:20:58.844 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 16:20:58.844 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 16:20:58.845 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 16:20:58.845 [main] PropertyBinder - Building property name
[DEBUG] 2021-04-12 16:20:58.845 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:20:58.845 [main] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 16:20:58.845 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 16:20:58.845 [main] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 16:20:58.846 [main] PropertyBinder - Building property species
[DEBUG] 2021-04-12 16:20:58.848 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 16:20:58.848 [main] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 16:20:58.848 [main] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 16:20:58.848 [main] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 16:20:58.848 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 16:20:58.848 [main] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 16:20:58.850 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 16:20:58.876 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 16:20:58.877 [main] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 16:20:58.877 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 16:20:58.877 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 16:20:58.877 [main] Settings - Statistics: disabled
[DEBUG] 2021-04-12 16:20:58.877 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 16:20:58.877 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 16:20:58.877 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 16:20:58.878 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 16:20:58.878 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 16:20:58.878 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 16:20:58.878 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 16:20:58.878 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 16:20:58.878 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 16:20:58.878 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 16:20:58.878 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 16:20:58.878 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 16:20:58.878 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 16:20:58.878 [main] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 16:20:58.878 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 16:20:58.878 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 16:20:58.878 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 16:20:58.878 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 16:20:58.878 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 16:20:58.878 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 16:20:58.879 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 16:20:58.879 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 16:20:58.879 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 16:20:58.879 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 16:20:58.879 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 16:20:58.879 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 16:20:58.879 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 16:20:58.879 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 16:20:58.879 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 16:20:58.879 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 16:20:58.879 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 16:20:58.879 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 16:20:58.880 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 16:20:58.880 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 16:20:58.930 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 16:20:58.953 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 16:20:58.953 [main] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit-rt.jar;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\test-classes;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\classes;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Walker\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Walker\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Walker\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Walker\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Walker\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Walker\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Walker\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Walker\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Walker\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Walker\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Walker\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Walker\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Walker\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Walker\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\Walker\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Walker\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Walker\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Walker\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Walker\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-client\2.29.1\jersey-client-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\2.1.6\jakarta.ws.rs-api-2.1.6.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-common\2.29.1\jersey-common-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.3\osgi-resource-locator-1.0.3.jar;C:\Users\Walker\.m2\repository\com\sun\activation\jakarta.activation\1.2.1\jakarta.activation-1.2.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\jakarta.inject\2.6.1\jakarta.inject-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\inject\jersey-hk2\2.29.1\jersey-hk2-2.29.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-locator\2.6.1\hk2-locator-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\aopalliance-repackaged\2.6.1\aopalliance-repackaged-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-api\2.6.1\hk2-api-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-utils\2.6.1\hk2-utils-2.6.1.jar;C:\Users\Walker\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Walker\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Walker\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0\jackson-core-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 team.persistence.GenericDaoTest,getByIdSuccess, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=13.0.1+9, user.name=Walker, path.separator=;, hibernate.connection.username=****, os.version=6.3, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Walker\AppData\Local\Temp\, java.version=13.0.1, user.dir=C:\Users\Walker\IdeaProjects\fictionalCharacterAPI, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@77d4ac52, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0}
[DEBUG] 2021-04-12 16:20:58.968 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-04-12 16:20:58.968 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 16:20:58.969 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 16:20:58.969 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@791c12e3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7e7e962d]
[DEBUG] 2021-04-12 16:20:59.011 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:20:59.011 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:20:59.029 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:20:59.030 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:20:59.230 [main] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 16:20:59.230 [main] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 16:20:59.230 [main] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 16:20:59.230 [main] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:20:59.230 [main] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 16:20:59.230 [main] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 16:20:59.230 [main] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:20:59.246 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62b6c045]
[DEBUG] 2021-04-12 16:20:59.246 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:20:59.247 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:20:59.247 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:20:59.247 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:20:59.247 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:20:59.247 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:20:59.256 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:20:59.259 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:20:59.260 [main] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:20:59.260 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c54ddec]
[DEBUG] 2021-04-12 16:20:59.261 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:20:59.261 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:20:59.261 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:20:59.261 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:20:59.261 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:20:59.261 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:20:59.261 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:20:59.261 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:20:59.261 [main] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:20:59.272 [main] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:20:59.273 [main] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:20:59.292 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 16:20:59.292 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 16:20:59.292 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 16:20:59.297 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 16:20:59.297 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 16:20:59.298 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 16:20:59.298 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 16:20:59.300 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3bbf1c0d
[DEBUG] 2021-04-12 16:20:59.302 [main] SessionFactoryRegistry - Registering SessionFactory: c5f6832c-f307-4f17-ac4b-8aec45bdb04c (<unnamed>)
[DEBUG] 2021-04-12 16:20:59.302 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 16:20:59.354 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 16:20:59.366 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:20:59.426 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:20:59.427 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:20:59.447 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:20:59.449 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:20:59.450 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:20:59.450 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:20:59.450 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:20:59.450 [main] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:20:59.450 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:20:59.451 [main] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 16:20:59.451 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:20:59.451 [main] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:20:59.451 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:20:59.453 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:20:59.454 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:20:59.459 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 16:20:59.464 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:21:22.996 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 16:21:22.998 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 16:21:23.002 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 16:21:23.081 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 16:21:23.085 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 16:21:23.260 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 16:21:23.265 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 16:21:23.272 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 16:21:23.541 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 16:21:23.562 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 16:21:23.564 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 16:21:23.580 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 16:21:23.604 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@65b66b08
[DEBUG] 2021-04-12 16:21:23.604 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@65b66b08
[DEBUG] 2021-04-12 16:21:23.605 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@65b66b08
[DEBUG] 2021-04-12 16:21:23.607 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@28e19366
[DEBUG] 2021-04-12 16:21:23.607 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@10acd6
[DEBUG] 2021-04-12 16:21:23.608 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@59c33386
[DEBUG] 2021-04-12 16:21:23.609 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4e93dcb9
[DEBUG] 2021-04-12 16:21:23.609 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4e93dcb9
[DEBUG] 2021-04-12 16:21:23.610 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4e93dcb9
[DEBUG] 2021-04-12 16:21:23.611 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3cf7298d
[DEBUG] 2021-04-12 16:21:23.611 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3cf7298d
[DEBUG] 2021-04-12 16:21:23.611 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3cf7298d
[DEBUG] 2021-04-12 16:21:23.612 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@43da41e
[DEBUG] 2021-04-12 16:21:23.612 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@43da41e
[DEBUG] 2021-04-12 16:21:23.612 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@43da41e
[DEBUG] 2021-04-12 16:21:23.613 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3bd3d05e
[DEBUG] 2021-04-12 16:21:23.614 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3bd3d05e
[DEBUG] 2021-04-12 16:21:23.614 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3bd3d05e
[DEBUG] 2021-04-12 16:21:23.615 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6ab7ce48
[DEBUG] 2021-04-12 16:21:23.616 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6ab7ce48
[DEBUG] 2021-04-12 16:21:23.616 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6ab7ce48
[DEBUG] 2021-04-12 16:21:23.617 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4d0753c9
[DEBUG] 2021-04-12 16:21:23.617 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4d0753c9
[DEBUG] 2021-04-12 16:21:23.617 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4d0753c9
[DEBUG] 2021-04-12 16:21:23.618 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@20411320
[DEBUG] 2021-04-12 16:21:23.619 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@20411320
[DEBUG] 2021-04-12 16:21:23.620 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@20411320
[DEBUG] 2021-04-12 16:21:23.621 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@12abdfb
[DEBUG] 2021-04-12 16:21:23.621 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@12abdfb
[DEBUG] 2021-04-12 16:21:23.623 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@20011bf
[DEBUG] 2021-04-12 16:21:23.623 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@20011bf
[DEBUG] 2021-04-12 16:21:23.624 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3fbcfe81
[DEBUG] 2021-04-12 16:21:23.624 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3fbcfe81
[DEBUG] 2021-04-12 16:21:23.625 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1c5c616f
[DEBUG] 2021-04-12 16:21:23.625 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@73437222
[DEBUG] 2021-04-12 16:21:23.626 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4096aa05
[DEBUG] 2021-04-12 16:21:23.627 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4096aa05
[DEBUG] 2021-04-12 16:21:23.628 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@14d8444b
[DEBUG] 2021-04-12 16:21:23.628 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@14d8444b
[DEBUG] 2021-04-12 16:21:23.632 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5833f5cd
[DEBUG] 2021-04-12 16:21:23.633 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5833f5cd
[DEBUG] 2021-04-12 16:21:23.635 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@31ff6309
[DEBUG] 2021-04-12 16:21:23.635 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@31ff6309
[DEBUG] 2021-04-12 16:21:23.637 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4dc8c0ea
[DEBUG] 2021-04-12 16:21:23.637 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4dc8c0ea
[DEBUG] 2021-04-12 16:21:23.638 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4aedaf61
[DEBUG] 2021-04-12 16:21:23.639 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4aedaf61
[DEBUG] 2021-04-12 16:21:23.640 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5eed2d86
[DEBUG] 2021-04-12 16:21:23.640 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5eed2d86
[DEBUG] 2021-04-12 16:21:23.642 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@228cea97
[DEBUG] 2021-04-12 16:21:23.642 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@228cea97
[DEBUG] 2021-04-12 16:21:23.643 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@ad9e63e
[DEBUG] 2021-04-12 16:21:23.643 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@ad9e63e
[DEBUG] 2021-04-12 16:21:23.644 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4e6f2bb5
[DEBUG] 2021-04-12 16:21:23.645 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4e6f2bb5
[DEBUG] 2021-04-12 16:21:23.645 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2650f79
[DEBUG] 2021-04-12 16:21:23.645 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2650f79
[DEBUG] 2021-04-12 16:21:23.646 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3672276e
[DEBUG] 2021-04-12 16:21:23.647 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3672276e
[DEBUG] 2021-04-12 16:21:23.647 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3672276e
[DEBUG] 2021-04-12 16:21:23.649 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2330e3e0
[DEBUG] 2021-04-12 16:21:23.651 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3a230001
[DEBUG] 2021-04-12 16:21:23.652 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3a230001
[DEBUG] 2021-04-12 16:21:23.653 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3a230001
[DEBUG] 2021-04-12 16:21:23.653 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4893b344
[DEBUG] 2021-04-12 16:21:23.654 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@51b35e4e
[DEBUG] 2021-04-12 16:21:23.655 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51b35e4e
[DEBUG] 2021-04-12 16:21:23.657 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@62db0521
[DEBUG] 2021-04-12 16:21:23.657 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62db0521
[DEBUG] 2021-04-12 16:21:23.659 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7be3a9ce
[DEBUG] 2021-04-12 16:21:23.659 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7be3a9ce
[DEBUG] 2021-04-12 16:21:23.660 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2b59501e
[DEBUG] 2021-04-12 16:21:23.660 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2b59501e
[DEBUG] 2021-04-12 16:21:23.661 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@153cd6bb
[DEBUG] 2021-04-12 16:21:23.661 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@153cd6bb
[DEBUG] 2021-04-12 16:21:23.662 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@52d6cd34
[DEBUG] 2021-04-12 16:21:23.663 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@107f4980
[DEBUG] 2021-04-12 16:21:23.663 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@107f4980
[DEBUG] 2021-04-12 16:21:23.663 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@107f4980
[DEBUG] 2021-04-12 16:21:23.665 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@f08fdce
[DEBUG] 2021-04-12 16:21:23.665 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@f08fdce
[DEBUG] 2021-04-12 16:21:23.667 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@f08fdce
[DEBUG] 2021-04-12 16:21:23.669 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@f288c14
[DEBUG] 2021-04-12 16:21:23.669 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@17b6d426
[DEBUG] 2021-04-12 16:21:23.670 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@20e3c449
[DEBUG] 2021-04-12 16:21:23.670 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@20e3c449
[DEBUG] 2021-04-12 16:21:23.670 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@20e3c449
[DEBUG] 2021-04-12 16:21:23.671 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7b7683d4
[DEBUG] 2021-04-12 16:21:23.671 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7b7683d4
[DEBUG] 2021-04-12 16:21:23.673 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7b7683d4
[DEBUG] 2021-04-12 16:21:23.673 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76ddd61a
[DEBUG] 2021-04-12 16:21:23.673 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7942a854
[DEBUG] 2021-04-12 16:21:23.674 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@28501a4b
[DEBUG] 2021-04-12 16:21:23.674 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28501a4b
[DEBUG] 2021-04-12 16:21:23.675 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2bebb74f
[DEBUG] 2021-04-12 16:21:23.677 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4422dd48
[DEBUG] 2021-04-12 16:21:23.677 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4422dd48
[DEBUG] 2021-04-12 16:21:23.678 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6ecab872
[DEBUG] 2021-04-12 16:21:23.680 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6ecab872
[DEBUG] 2021-04-12 16:21:23.681 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2a066689
[DEBUG] 2021-04-12 16:21:23.681 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74294c1a
[DEBUG] 2021-04-12 16:21:23.682 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3efedc6f
[DEBUG] 2021-04-12 16:21:23.685 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@64968732
[DEBUG] 2021-04-12 16:21:23.685 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@64968732
[DEBUG] 2021-04-12 16:21:23.689 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4d1f1ff5
[DEBUG] 2021-04-12 16:21:23.689 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@222afc67
[DEBUG] 2021-04-12 16:21:23.689 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c2fb9dd
[DEBUG] 2021-04-12 16:21:23.689 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@54f4a7f0
[DEBUG] 2021-04-12 16:21:23.689 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@61a1ea2c
[DEBUG] 2021-04-12 16:21:23.689 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@149debbb
[DEBUG] 2021-04-12 16:21:23.690 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@25cd49a4
[DEBUG] 2021-04-12 16:21:23.690 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5477a1ca
[DEBUG] 2021-04-12 16:21:23.722 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 16:21:23.723 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 16:21:23.726 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:21:23.727 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:21:23.728 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 16:21:23.730 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 16:21:23.734 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 16:21:23.735 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:21:23.736 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 16:21:23.736 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 16:21:23.737 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 16:21:23.737 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 16:21:23.737 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:21:23.739 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 16:21:23.744 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 16:21:23.744 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 16:21:23.744 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 16:21:24.079 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 16:21:24.337 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:21:24.337 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:21:24.337 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 16:21:24.353 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 16:21:24.377 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 16:21:24.416 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 16:21:24.464 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 16:21:24.476 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b112b13] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@24eb65e3]
[DEBUG] 2021-04-12 16:21:24.521 [main] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 16:21:24.547 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 16:21:24.551 [main] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 16:21:24.557 [main] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 16:21:24.578 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:21:24.580 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 16:21:24.582 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 16:21:24.584 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 16:21:24.585 [main] PropertyBinder - Building property id
[DEBUG] 2021-04-12 16:21:24.588 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 16:21:24.590 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:21:24.591 [main] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 16:21:24.591 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 16:21:24.591 [main] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 16:21:24.592 [main] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 16:21:24.592 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:21:24.592 [main] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 16:21:24.593 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 16:21:24.596 [main] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 16:21:24.597 [main] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 16:21:24.597 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:21:24.598 [main] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 16:21:24.598 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 16:21:24.598 [main] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 16:21:24.599 [main] PropertyBinder - Building property media
[DEBUG] 2021-04-12 16:21:24.599 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:21:24.599 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 16:21:24.599 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 16:21:24.599 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 16:21:24.600 [main] PropertyBinder - Building property name
[DEBUG] 2021-04-12 16:21:24.600 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:21:24.600 [main] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 16:21:24.600 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 16:21:24.600 [main] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 16:21:24.600 [main] PropertyBinder - Building property species
[DEBUG] 2021-04-12 16:21:24.603 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 16:21:24.603 [main] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 16:21:24.603 [main] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 16:21:24.603 [main] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 16:21:24.603 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 16:21:24.603 [main] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 16:21:24.604 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 16:21:24.631 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 16:21:24.632 [main] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 16:21:24.632 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 16:21:24.633 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 16:21:24.633 [main] Settings - Statistics: disabled
[DEBUG] 2021-04-12 16:21:24.633 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 16:21:24.633 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 16:21:24.633 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 16:21:24.633 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 16:21:24.633 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 16:21:24.633 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 16:21:24.633 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 16:21:24.633 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 16:21:24.633 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 16:21:24.633 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 16:21:24.633 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 16:21:24.633 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 16:21:24.633 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 16:21:24.633 [main] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 16:21:24.634 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 16:21:24.634 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 16:21:24.634 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 16:21:24.634 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 16:21:24.634 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 16:21:24.634 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 16:21:24.634 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 16:21:24.634 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 16:21:24.634 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 16:21:24.634 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 16:21:24.634 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 16:21:24.634 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 16:21:24.635 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 16:21:24.635 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 16:21:24.635 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 16:21:24.636 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 16:21:24.636 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 16:21:24.636 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 16:21:24.637 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 16:21:24.637 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 16:21:24.684 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 16:21:24.699 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 16:21:24.699 [main] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit-rt.jar;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\test-classes;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\classes;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Walker\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Walker\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Walker\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Walker\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Walker\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Walker\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Walker\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Walker\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Walker\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Walker\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Walker\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Walker\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Walker\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Walker\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\Walker\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Walker\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Walker\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Walker\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Walker\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-client\2.29.1\jersey-client-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\2.1.6\jakarta.ws.rs-api-2.1.6.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-common\2.29.1\jersey-common-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.3\osgi-resource-locator-1.0.3.jar;C:\Users\Walker\.m2\repository\com\sun\activation\jakarta.activation\1.2.1\jakarta.activation-1.2.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\jakarta.inject\2.6.1\jakarta.inject-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\inject\jersey-hk2\2.29.1\jersey-hk2-2.29.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-locator\2.6.1\hk2-locator-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\aopalliance-repackaged\2.6.1\aopalliance-repackaged-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-api\2.6.1\hk2-api-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-utils\2.6.1\hk2-utils-2.6.1.jar;C:\Users\Walker\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Walker\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Walker\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0\jackson-core-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 team.persistence.GenericDaoTest,insertSuccess, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=13.0.1+9, user.name=Walker, path.separator=;, hibernate.connection.username=****, os.version=6.3, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Walker\AppData\Local\Temp\, java.version=13.0.1, user.dir=C:\Users\Walker\IdeaProjects\fictionalCharacterAPI, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@77d4ac52, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0}
[DEBUG] 2021-04-12 16:21:24.713 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-04-12 16:21:24.713 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 16:21:24.714 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 16:21:24.714 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b112b13] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7e7e962d]
[DEBUG] 2021-04-12 16:21:24.756 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:21:24.756 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:21:24.770 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:21:24.770 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:21:24.963 [main] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 16:21:24.963 [main] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 16:21:24.963 [main] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 16:21:24.963 [main] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:21:24.963 [main] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 16:21:24.963 [main] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 16:21:24.963 [main] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:21:24.979 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62b6c045]
[DEBUG] 2021-04-12 16:21:24.979 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:21:24.980 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:21:24.980 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:21:24.980 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:21:24.980 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:21:24.980 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:21:24.988 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:21:24.991 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:21:24.993 [main] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:21:24.993 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c54ddec]
[DEBUG] 2021-04-12 16:21:24.993 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:21:24.993 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:21:24.993 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:21:24.993 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:21:24.993 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:21:24.993 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:21:24.993 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:21:24.993 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:21:24.993 [main] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:21:25.003 [main] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:21:25.003 [main] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:21:25.022 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 16:21:25.022 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 16:21:25.023 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 16:21:25.027 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 16:21:25.027 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 16:21:25.028 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 16:21:25.028 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 16:21:25.029 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3bbf1c0d
[DEBUG] 2021-04-12 16:21:25.030 [main] SessionFactoryRegistry - Registering SessionFactory: 841db443-1cc3-4665-900e-379ab593446a (<unnamed>)
[DEBUG] 2021-04-12 16:21:25.031 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 16:21:25.082 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 16:21:25.088 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-04-12 16:21:25.088 [main] TransactionImpl - begin
[DEBUG] 2021-04-12 16:21:25.098 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-04-12 16:21:25.101 [main] SQL - insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:21:25.214 [main] IdentifierGeneratorHelper - Natively generated identity: 5
[DEBUG] 2021-04-12 16:21:25.214 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:21:25.220 [main] TransactionImpl - committing
[DEBUG] 2021-04-12 16:21:25.222 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-04-12 16:21:25.223 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-04-12 16:21:25.227 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-04-12 16:21:25.228 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-04-12 16:21:25.230 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-04-12 16:21:25.230 [main] EntityPrinter - team.entity.Character{franchise=Spawn, species=Hellspawn, name=Spawn, id=5, media=Comic, alignment=Neutral}
[DEBUG] 2021-04-12 16:21:25.440 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:21:25.475 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:21:25.494 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:21:25.724 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:21:25.725 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:21:25.736 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#5]
[DEBUG] 2021-04-12 16:21:25.736 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Neutral
[DEBUG] 2021-04-12 16:21:25.736 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:21:25.736 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Spawn
[DEBUG] 2021-04-12 16:21:25.736 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:21:25.736 [main] TwoPhaseLoad - Processing attribute `media` : value = Comic
[DEBUG] 2021-04-12 16:21:25.736 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:21:25.736 [main] TwoPhaseLoad - Processing attribute `name` : value = Spawn
[DEBUG] 2021-04-12 16:21:25.737 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:21:25.737 [main] TwoPhaseLoad - Processing attribute `species` : value = Hellspawn
[DEBUG] 2021-04-12 16:21:25.737 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:21:25.739 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#5]
[DEBUG] 2021-04-12 16:21:25.739 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:21:25.739 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#5
[DEBUG] 2021-04-12 16:21:25.740 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:21:41.926 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 16:21:41.928 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 16:21:41.932 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 16:21:42.010 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 16:21:42.015 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 16:21:42.212 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 16:21:42.212 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 16:21:42.217 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 16:21:42.457 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 16:21:42.477 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 16:21:42.478 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 16:21:42.499 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 16:21:42.527 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5017e1
[DEBUG] 2021-04-12 16:21:42.527 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5017e1
[DEBUG] 2021-04-12 16:21:42.528 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5017e1
[DEBUG] 2021-04-12 16:21:42.528 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7ed9499e
[DEBUG] 2021-04-12 16:21:42.529 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@244e619a
[DEBUG] 2021-04-12 16:21:42.529 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@5cb042da
[DEBUG] 2021-04-12 16:21:42.530 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@736309a9
[DEBUG] 2021-04-12 16:21:42.531 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@736309a9
[DEBUG] 2021-04-12 16:21:42.532 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@736309a9
[DEBUG] 2021-04-12 16:21:42.533 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6240651f
[DEBUG] 2021-04-12 16:21:42.533 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6240651f
[DEBUG] 2021-04-12 16:21:42.533 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6240651f
[DEBUG] 2021-04-12 16:21:42.535 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6642dc5a
[DEBUG] 2021-04-12 16:21:42.535 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6642dc5a
[DEBUG] 2021-04-12 16:21:42.535 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6642dc5a
[DEBUG] 2021-04-12 16:21:42.536 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@211febf3
[DEBUG] 2021-04-12 16:21:42.537 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@211febf3
[DEBUG] 2021-04-12 16:21:42.537 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@211febf3
[DEBUG] 2021-04-12 16:21:42.538 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2acbc859
[DEBUG] 2021-04-12 16:21:42.538 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2acbc859
[DEBUG] 2021-04-12 16:21:42.539 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2acbc859
[DEBUG] 2021-04-12 16:21:42.539 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4afd21c6
[DEBUG] 2021-04-12 16:21:42.540 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4afd21c6
[DEBUG] 2021-04-12 16:21:42.540 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4afd21c6
[DEBUG] 2021-04-12 16:21:42.541 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@28f878a0
[DEBUG] 2021-04-12 16:21:42.541 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@28f878a0
[DEBUG] 2021-04-12 16:21:42.542 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@28f878a0
[DEBUG] 2021-04-12 16:21:42.544 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@255e5e2e
[DEBUG] 2021-04-12 16:21:42.544 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@255e5e2e
[DEBUG] 2021-04-12 16:21:42.545 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@8a98f38
[DEBUG] 2021-04-12 16:21:42.546 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@8a98f38
[DEBUG] 2021-04-12 16:21:42.547 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@38a1a26
[DEBUG] 2021-04-12 16:21:42.547 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@38a1a26
[DEBUG] 2021-04-12 16:21:42.549 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@444cc791
[DEBUG] 2021-04-12 16:21:42.550 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@c6b2dd9
[DEBUG] 2021-04-12 16:21:42.551 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3d278b4d
[DEBUG] 2021-04-12 16:21:42.551 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3d278b4d
[DEBUG] 2021-04-12 16:21:42.552 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1e530163
[DEBUG] 2021-04-12 16:21:42.553 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1e530163
[DEBUG] 2021-04-12 16:21:42.557 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@702c436b
[DEBUG] 2021-04-12 16:21:42.558 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@702c436b
[DEBUG] 2021-04-12 16:21:42.560 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@37303f12
[DEBUG] 2021-04-12 16:21:42.561 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@37303f12
[DEBUG] 2021-04-12 16:21:42.562 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2ab5afc7
[DEBUG] 2021-04-12 16:21:42.562 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2ab5afc7
[DEBUG] 2021-04-12 16:21:42.563 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3ed03652
[DEBUG] 2021-04-12 16:21:42.564 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3ed03652
[DEBUG] 2021-04-12 16:21:42.565 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1dc76fa1
[DEBUG] 2021-04-12 16:21:42.565 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1dc76fa1
[DEBUG] 2021-04-12 16:21:42.567 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1e141e42
[DEBUG] 2021-04-12 16:21:42.567 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1e141e42
[DEBUG] 2021-04-12 16:21:42.569 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2de50ee4
[DEBUG] 2021-04-12 16:21:42.569 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2de50ee4
[DEBUG] 2021-04-12 16:21:42.570 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3b9632d1
[DEBUG] 2021-04-12 16:21:42.570 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3b9632d1
[DEBUG] 2021-04-12 16:21:42.571 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6cd166b8
[DEBUG] 2021-04-12 16:21:42.571 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6cd166b8
[DEBUG] 2021-04-12 16:21:42.572 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7a0f244f
[DEBUG] 2021-04-12 16:21:42.572 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7a0f244f
[DEBUG] 2021-04-12 16:21:42.572 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7a0f244f
[DEBUG] 2021-04-12 16:21:42.573 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4defd42
[DEBUG] 2021-04-12 16:21:42.575 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3f9270ed
[DEBUG] 2021-04-12 16:21:42.577 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3f9270ed
[DEBUG] 2021-04-12 16:21:42.578 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3f9270ed
[DEBUG] 2021-04-12 16:21:42.579 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@249e0271
[DEBUG] 2021-04-12 16:21:42.579 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3bfc6a5e
[DEBUG] 2021-04-12 16:21:42.581 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3bfc6a5e
[DEBUG] 2021-04-12 16:21:42.582 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3964d79
[DEBUG] 2021-04-12 16:21:42.582 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3964d79
[DEBUG] 2021-04-12 16:21:42.584 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4acb2510
[DEBUG] 2021-04-12 16:21:42.584 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4acb2510
[DEBUG] 2021-04-12 16:21:42.585 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7a904f32
[DEBUG] 2021-04-12 16:21:42.585 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7a904f32
[DEBUG] 2021-04-12 16:21:42.586 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4339e0de
[DEBUG] 2021-04-12 16:21:42.586 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4339e0de
[DEBUG] 2021-04-12 16:21:42.586 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@21ac5eb4
[DEBUG] 2021-04-12 16:21:42.587 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@c2e3264
[DEBUG] 2021-04-12 16:21:42.588 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@c2e3264
[DEBUG] 2021-04-12 16:21:42.588 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@c2e3264
[DEBUG] 2021-04-12 16:21:42.589 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4a14c44f
[DEBUG] 2021-04-12 16:21:42.589 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4a14c44f
[DEBUG] 2021-04-12 16:21:42.592 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4a14c44f
[DEBUG] 2021-04-12 16:21:42.593 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5c1f6d57
[DEBUG] 2021-04-12 16:21:42.593 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5cb5bb88
[DEBUG] 2021-04-12 16:21:42.594 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3a01773b
[DEBUG] 2021-04-12 16:21:42.594 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a01773b
[DEBUG] 2021-04-12 16:21:42.594 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3a01773b
[DEBUG] 2021-04-12 16:21:42.595 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@472698d
[DEBUG] 2021-04-12 16:21:42.595 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@472698d
[DEBUG] 2021-04-12 16:21:42.596 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@472698d
[DEBUG] 2021-04-12 16:21:42.597 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@39fa8ad2
[DEBUG] 2021-04-12 16:21:42.597 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6137cf6e
[DEBUG] 2021-04-12 16:21:42.598 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@16eedaa6
[DEBUG] 2021-04-12 16:21:42.598 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@16eedaa6
[DEBUG] 2021-04-12 16:21:42.599 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@341672e
[DEBUG] 2021-04-12 16:21:42.601 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@27e5b378
[DEBUG] 2021-04-12 16:21:42.601 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@27e5b378
[DEBUG] 2021-04-12 16:21:42.602 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2cfa2c4f
[DEBUG] 2021-04-12 16:21:42.603 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2cfa2c4f
[DEBUG] 2021-04-12 16:21:42.604 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@11b455e5
[DEBUG] 2021-04-12 16:21:42.604 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d025d1d
[DEBUG] 2021-04-12 16:21:42.605 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@70f822e
[DEBUG] 2021-04-12 16:21:42.608 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3f049056
[DEBUG] 2021-04-12 16:21:42.609 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f049056
[DEBUG] 2021-04-12 16:21:42.614 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1de0a46c
[DEBUG] 2021-04-12 16:21:42.614 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4d1f1ff5
[DEBUG] 2021-04-12 16:21:42.614 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@222afc67
[DEBUG] 2021-04-12 16:21:42.614 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4c2fb9dd
[DEBUG] 2021-04-12 16:21:42.614 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@54f4a7f0
[DEBUG] 2021-04-12 16:21:42.614 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@61a1ea2c
[DEBUG] 2021-04-12 16:21:42.615 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@149debbb
[DEBUG] 2021-04-12 16:21:42.615 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@25cd49a4
[DEBUG] 2021-04-12 16:21:42.643 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 16:21:42.644 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 16:21:42.648 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:21:42.649 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:21:42.650 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 16:21:42.650 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 16:21:42.655 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 16:21:42.656 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:21:42.657 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 16:21:42.658 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 16:21:42.658 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 16:21:42.658 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 16:21:42.659 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:21:42.660 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 16:21:42.665 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 16:21:42.665 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 16:21:42.665 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 16:21:42.998 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 16:21:43.307 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:21:43.307 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:21:43.307 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 16:21:43.321 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 16:21:43.337 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 16:21:43.388 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 16:21:43.449 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 16:21:43.453 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@37c41ec0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@35a0e495]
[DEBUG] 2021-04-12 16:21:43.493 [main] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 16:21:43.514 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 16:21:43.519 [main] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 16:21:43.521 [main] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 16:21:43.542 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:21:43.543 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 16:21:43.545 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 16:21:43.546 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 16:21:43.548 [main] PropertyBinder - Building property id
[DEBUG] 2021-04-12 16:21:43.550 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 16:21:43.551 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:21:43.552 [main] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 16:21:43.552 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 16:21:43.552 [main] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 16:21:43.552 [main] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 16:21:43.553 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:21:43.553 [main] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 16:21:43.553 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 16:21:43.554 [main] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 16:21:43.555 [main] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 16:21:43.555 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:21:43.556 [main] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 16:21:43.556 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 16:21:43.556 [main] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 16:21:43.556 [main] PropertyBinder - Building property media
[DEBUG] 2021-04-12 16:21:43.556 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:21:43.557 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 16:21:43.557 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 16:21:43.557 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 16:21:43.557 [main] PropertyBinder - Building property name
[DEBUG] 2021-04-12 16:21:43.557 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:21:43.557 [main] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 16:21:43.558 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 16:21:43.558 [main] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 16:21:43.558 [main] PropertyBinder - Building property species
[DEBUG] 2021-04-12 16:21:43.560 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 16:21:43.560 [main] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 16:21:43.560 [main] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 16:21:43.560 [main] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 16:21:43.560 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 16:21:43.560 [main] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 16:21:43.561 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 16:21:43.587 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 16:21:43.588 [main] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 16:21:43.588 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 16:21:43.588 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 16:21:43.588 [main] Settings - Statistics: disabled
[DEBUG] 2021-04-12 16:21:43.588 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 16:21:43.588 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 16:21:43.588 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 16:21:43.588 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 16:21:43.588 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 16:21:43.588 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 16:21:43.589 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 16:21:43.589 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 16:21:43.589 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 16:21:43.589 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 16:21:43.589 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 16:21:43.589 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 16:21:43.589 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 16:21:43.589 [main] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 16:21:43.589 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 16:21:43.589 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 16:21:43.589 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 16:21:43.589 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 16:21:43.589 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 16:21:43.590 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 16:21:43.590 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 16:21:43.590 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 16:21:43.590 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 16:21:43.590 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 16:21:43.590 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 16:21:43.590 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 16:21:43.591 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 16:21:43.591 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 16:21:43.591 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 16:21:43.591 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 16:21:43.592 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 16:21:43.592 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 16:21:43.594 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 16:21:43.594 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 16:21:43.636 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 16:21:43.651 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 16:21:43.651 [main] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit-rt.jar;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\test-classes;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\classes;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Walker\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Walker\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Walker\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Walker\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Walker\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Walker\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Walker\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Walker\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Walker\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Walker\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Walker\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Walker\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Walker\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Walker\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\Walker\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Walker\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Walker\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Walker\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Walker\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-client\2.29.1\jersey-client-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\2.1.6\jakarta.ws.rs-api-2.1.6.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-common\2.29.1\jersey-common-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.3\osgi-resource-locator-1.0.3.jar;C:\Users\Walker\.m2\repository\com\sun\activation\jakarta.activation\1.2.1\jakarta.activation-1.2.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\jakarta.inject\2.6.1\jakarta.inject-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\inject\jersey-hk2\2.29.1\jersey-hk2-2.29.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-locator\2.6.1\hk2-locator-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\aopalliance-repackaged\2.6.1\aopalliance-repackaged-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-api\2.6.1\hk2-api-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-utils\2.6.1\hk2-utils-2.6.1.jar;C:\Users\Walker\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Walker\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Walker\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0\jackson-core-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 team.persistence.GenericDaoTest,updateSuccess, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=13.0.1+9, user.name=Walker, path.separator=;, hibernate.connection.username=****, os.version=6.3, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Walker\AppData\Local\Temp\, java.version=13.0.1, user.dir=C:\Users\Walker\IdeaProjects\fictionalCharacterAPI, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@629984eb, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0}
[DEBUG] 2021-04-12 16:21:43.665 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-04-12 16:21:43.665 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 16:21:43.666 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 16:21:43.666 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@37c41ec0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@f0a66bd]
[DEBUG] 2021-04-12 16:21:43.718 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:21:43.718 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:21:43.735 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:21:43.735 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:21:43.929 [main] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 16:21:43.929 [main] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 16:21:43.929 [main] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 16:21:43.929 [main] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:21:43.929 [main] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 16:21:43.929 [main] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 16:21:43.929 [main] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:21:43.944 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44d7e24]
[DEBUG] 2021-04-12 16:21:43.945 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:21:43.945 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:21:43.945 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:21:43.945 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:21:43.945 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:21:43.946 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:21:43.954 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:21:43.957 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:21:43.959 [main] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:21:43.959 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b1c32e4]
[DEBUG] 2021-04-12 16:21:43.959 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:21:43.959 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:21:43.959 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:21:43.959 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:21:43.959 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:21:43.959 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:21:43.959 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:21:43.960 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:21:43.960 [main] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:21:43.970 [main] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:21:43.970 [main] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:21:43.989 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 16:21:43.989 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 16:21:43.989 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 16:21:43.993 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 16:21:43.993 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 16:21:43.994 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 16:21:43.994 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 16:21:43.996 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5cff729b
[DEBUG] 2021-04-12 16:21:43.997 [main] SessionFactoryRegistry - Registering SessionFactory: 2be97b5a-7a9b-474e-8a17-506da3653450 (<unnamed>)
[DEBUG] 2021-04-12 16:21:43.998 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 16:21:44.052 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 16:21:44.066 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:21:44.087 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:21:44.088 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:21:44.094 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:21:44.095 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:21:44.095 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:21:44.095 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:21:44.095 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:21:44.095 [main] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:21:44.095 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:21:44.095 [main] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 16:21:44.095 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:21:44.095 [main] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:21:44.095 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:21:44.095 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:21:44.096 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:21:44.097 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 16:21:44.098 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:21:44.103 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-04-12 16:21:44.104 [main] TransactionImpl - begin
[DEBUG] 2021-04-12 16:21:44.109 [main] TransactionImpl - committing
[DEBUG] 2021-04-12 16:21:44.110 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-04-12 16:21:44.110 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-04-12 16:21:44.113 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2021-04-12 16:21:44.113 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-04-12 16:21:44.114 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-04-12 16:21:44.114 [main] EntityPrinter - team.entity.Character{franchise=Lord Of The Rings, species=Maia, name=Harry Wizard, id=1, media=book, alignment=Good}
[DEBUG] 2021-04-12 16:21:44.116 [main] SQL - update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 16:21:44.375 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:21:44.376 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:21:44.376 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:21:44.378 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:21:44.378 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:21:44.379 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:21:44.379 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:21:44.379 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:21:44.379 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:21:44.379 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:21:44.379 [main] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:21:44.379 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:21:44.379 [main] TwoPhaseLoad - Processing attribute `name` : value = Harry Wizard
[DEBUG] 2021-04-12 16:21:44.379 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:21:44.379 [main] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:21:44.379 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:21:44.379 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:21:44.379 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:21:44.380 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 16:21:44.380 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:21:56.478 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 16:21:56.479 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 16:21:56.483 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 16:21:56.558 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 16:21:56.564 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 16:21:56.752 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 16:21:56.753 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 16:21:56.758 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 16:21:56.984 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 16:21:57.001 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 16:21:57.002 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 16:21:57.020 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 16:21:57.046 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5017e1
[DEBUG] 2021-04-12 16:21:57.046 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5017e1
[DEBUG] 2021-04-12 16:21:57.046 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5017e1
[DEBUG] 2021-04-12 16:21:57.047 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7ed9499e
[DEBUG] 2021-04-12 16:21:57.047 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@244e619a
[DEBUG] 2021-04-12 16:21:57.048 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@5cb042da
[DEBUG] 2021-04-12 16:21:57.049 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@736309a9
[DEBUG] 2021-04-12 16:21:57.049 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@736309a9
[DEBUG] 2021-04-12 16:21:57.050 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@736309a9
[DEBUG] 2021-04-12 16:21:57.051 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6240651f
[DEBUG] 2021-04-12 16:21:57.052 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6240651f
[DEBUG] 2021-04-12 16:21:57.052 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6240651f
[DEBUG] 2021-04-12 16:21:57.052 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6642dc5a
[DEBUG] 2021-04-12 16:21:57.053 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6642dc5a
[DEBUG] 2021-04-12 16:21:57.053 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6642dc5a
[DEBUG] 2021-04-12 16:21:57.054 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@211febf3
[DEBUG] 2021-04-12 16:21:57.054 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@211febf3
[DEBUG] 2021-04-12 16:21:57.055 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@211febf3
[DEBUG] 2021-04-12 16:21:57.057 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2acbc859
[DEBUG] 2021-04-12 16:21:57.057 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2acbc859
[DEBUG] 2021-04-12 16:21:57.058 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2acbc859
[DEBUG] 2021-04-12 16:21:57.059 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4afd21c6
[DEBUG] 2021-04-12 16:21:57.059 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4afd21c6
[DEBUG] 2021-04-12 16:21:57.059 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4afd21c6
[DEBUG] 2021-04-12 16:21:57.060 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@28f878a0
[DEBUG] 2021-04-12 16:21:57.060 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@28f878a0
[DEBUG] 2021-04-12 16:21:57.061 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@28f878a0
[DEBUG] 2021-04-12 16:21:57.063 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@255e5e2e
[DEBUG] 2021-04-12 16:21:57.063 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@255e5e2e
[DEBUG] 2021-04-12 16:21:57.064 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@8a98f38
[DEBUG] 2021-04-12 16:21:57.065 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@8a98f38
[DEBUG] 2021-04-12 16:21:57.066 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@38a1a26
[DEBUG] 2021-04-12 16:21:57.068 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@38a1a26
[DEBUG] 2021-04-12 16:21:57.069 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@444cc791
[DEBUG] 2021-04-12 16:21:57.069 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@c6b2dd9
[DEBUG] 2021-04-12 16:21:57.070 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3d278b4d
[DEBUG] 2021-04-12 16:21:57.070 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3d278b4d
[DEBUG] 2021-04-12 16:21:57.071 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1e530163
[DEBUG] 2021-04-12 16:21:57.072 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1e530163
[DEBUG] 2021-04-12 16:21:57.076 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@702c436b
[DEBUG] 2021-04-12 16:21:57.077 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@702c436b
[DEBUG] 2021-04-12 16:21:57.080 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@37303f12
[DEBUG] 2021-04-12 16:21:57.080 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@37303f12
[DEBUG] 2021-04-12 16:21:57.081 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2ab5afc7
[DEBUG] 2021-04-12 16:21:57.081 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2ab5afc7
[DEBUG] 2021-04-12 16:21:57.082 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3ed03652
[DEBUG] 2021-04-12 16:21:57.083 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3ed03652
[DEBUG] 2021-04-12 16:21:57.084 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1dc76fa1
[DEBUG] 2021-04-12 16:21:57.084 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1dc76fa1
[DEBUG] 2021-04-12 16:21:57.086 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1e141e42
[DEBUG] 2021-04-12 16:21:57.086 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1e141e42
[DEBUG] 2021-04-12 16:21:57.087 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2de50ee4
[DEBUG] 2021-04-12 16:21:57.087 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2de50ee4
[DEBUG] 2021-04-12 16:21:57.088 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3b9632d1
[DEBUG] 2021-04-12 16:21:57.089 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3b9632d1
[DEBUG] 2021-04-12 16:21:57.090 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6cd166b8
[DEBUG] 2021-04-12 16:21:57.090 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6cd166b8
[DEBUG] 2021-04-12 16:21:57.091 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7a0f244f
[DEBUG] 2021-04-12 16:21:57.091 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7a0f244f
[DEBUG] 2021-04-12 16:21:57.091 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7a0f244f
[DEBUG] 2021-04-12 16:21:57.092 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4defd42
[DEBUG] 2021-04-12 16:21:57.094 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3f9270ed
[DEBUG] 2021-04-12 16:21:57.094 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3f9270ed
[DEBUG] 2021-04-12 16:21:57.095 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3f9270ed
[DEBUG] 2021-04-12 16:21:57.096 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@249e0271
[DEBUG] 2021-04-12 16:21:57.097 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3bfc6a5e
[DEBUG] 2021-04-12 16:21:57.098 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3bfc6a5e
[DEBUG] 2021-04-12 16:21:57.100 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3964d79
[DEBUG] 2021-04-12 16:21:57.100 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3964d79
[DEBUG] 2021-04-12 16:21:57.100 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4acb2510
[DEBUG] 2021-04-12 16:21:57.101 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4acb2510
[DEBUG] 2021-04-12 16:21:57.102 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7a904f32
[DEBUG] 2021-04-12 16:21:57.102 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7a904f32
[DEBUG] 2021-04-12 16:21:57.102 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4339e0de
[DEBUG] 2021-04-12 16:21:57.103 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4339e0de
[DEBUG] 2021-04-12 16:21:57.103 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@21ac5eb4
[DEBUG] 2021-04-12 16:21:57.106 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@c2e3264
[DEBUG] 2021-04-12 16:21:57.106 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@c2e3264
[DEBUG] 2021-04-12 16:21:57.106 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@c2e3264
[DEBUG] 2021-04-12 16:21:57.108 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4a14c44f
[DEBUG] 2021-04-12 16:21:57.108 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4a14c44f
[DEBUG] 2021-04-12 16:21:57.110 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4a14c44f
[DEBUG] 2021-04-12 16:21:57.112 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5c1f6d57
[DEBUG] 2021-04-12 16:21:57.112 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5cb5bb88
[DEBUG] 2021-04-12 16:21:57.113 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3a01773b
[DEBUG] 2021-04-12 16:21:57.113 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a01773b
[DEBUG] 2021-04-12 16:21:57.113 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3a01773b
[DEBUG] 2021-04-12 16:21:57.114 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@472698d
[DEBUG] 2021-04-12 16:21:57.114 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@472698d
[DEBUG] 2021-04-12 16:21:57.115 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@472698d
[DEBUG] 2021-04-12 16:21:57.115 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@39fa8ad2
[DEBUG] 2021-04-12 16:21:57.115 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6137cf6e
[DEBUG] 2021-04-12 16:21:57.117 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@16eedaa6
[DEBUG] 2021-04-12 16:21:57.117 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@16eedaa6
[DEBUG] 2021-04-12 16:21:57.117 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@341672e
[DEBUG] 2021-04-12 16:21:57.119 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@27e5b378
[DEBUG] 2021-04-12 16:21:57.119 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@27e5b378
[DEBUG] 2021-04-12 16:21:57.120 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2cfa2c4f
[DEBUG] 2021-04-12 16:21:57.121 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2cfa2c4f
[DEBUG] 2021-04-12 16:21:57.122 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@11b455e5
[DEBUG] 2021-04-12 16:21:57.131 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d025d1d
[DEBUG] 2021-04-12 16:21:57.133 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@70f822e
[DEBUG] 2021-04-12 16:21:57.136 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3f049056
[DEBUG] 2021-04-12 16:21:57.136 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f049056
[DEBUG] 2021-04-12 16:21:57.140 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1de0a46c
[DEBUG] 2021-04-12 16:21:57.141 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4d1f1ff5
[DEBUG] 2021-04-12 16:21:57.141 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@222afc67
[DEBUG] 2021-04-12 16:21:57.141 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4c2fb9dd
[DEBUG] 2021-04-12 16:21:57.141 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@54f4a7f0
[DEBUG] 2021-04-12 16:21:57.141 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@61a1ea2c
[DEBUG] 2021-04-12 16:21:57.142 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@149debbb
[DEBUG] 2021-04-12 16:21:57.142 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@25cd49a4
[DEBUG] 2021-04-12 16:21:57.179 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 16:21:57.180 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 16:21:57.183 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:21:57.184 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:21:57.185 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 16:21:57.186 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 16:21:57.191 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 16:21:57.192 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:21:57.193 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 16:21:57.193 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 16:21:57.193 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 16:21:57.194 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 16:21:57.194 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:21:57.195 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 16:21:57.200 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 16:21:57.200 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 16:21:57.200 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 16:21:57.371 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 16:21:57.697 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:21:57.697 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:21:57.699 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 16:21:57.718 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 16:21:57.734 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 16:21:57.804 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 16:21:57.841 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 16:21:57.845 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@791c12e3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b112b13]
[DEBUG] 2021-04-12 16:21:57.888 [main] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 16:21:57.913 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 16:21:57.920 [main] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 16:21:57.922 [main] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 16:21:57.950 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:21:57.952 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 16:21:57.954 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 16:21:57.957 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 16:21:57.958 [main] PropertyBinder - Building property id
[DEBUG] 2021-04-12 16:21:57.961 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 16:21:57.963 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:21:57.963 [main] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 16:21:57.963 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 16:21:57.963 [main] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 16:21:57.963 [main] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 16:21:57.964 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:21:57.964 [main] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 16:21:57.964 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 16:21:57.967 [main] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 16:21:57.968 [main] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 16:21:57.968 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:21:57.968 [main] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 16:21:57.968 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 16:21:57.968 [main] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 16:21:57.968 [main] PropertyBinder - Building property media
[DEBUG] 2021-04-12 16:21:57.968 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:21:57.968 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 16:21:57.968 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 16:21:57.968 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 16:21:57.969 [main] PropertyBinder - Building property name
[DEBUG] 2021-04-12 16:21:57.969 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:21:57.969 [main] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 16:21:57.969 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 16:21:57.969 [main] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 16:21:57.969 [main] PropertyBinder - Building property species
[DEBUG] 2021-04-12 16:21:57.971 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 16:21:57.971 [main] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 16:21:57.972 [main] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 16:21:57.972 [main] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 16:21:57.972 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 16:21:57.972 [main] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 16:21:57.973 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 16:21:58.003 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 16:21:58.005 [main] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 16:21:58.005 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 16:21:58.005 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 16:21:58.005 [main] Settings - Statistics: disabled
[DEBUG] 2021-04-12 16:21:58.005 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 16:21:58.005 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 16:21:58.005 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 16:21:58.005 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 16:21:58.005 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 16:21:58.005 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 16:21:58.006 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 16:21:58.006 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 16:21:58.006 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 16:21:58.006 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 16:21:58.006 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 16:21:58.006 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 16:21:58.006 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 16:21:58.006 [main] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 16:21:58.006 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 16:21:58.006 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 16:21:58.006 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 16:21:58.006 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 16:21:58.006 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 16:21:58.007 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 16:21:58.007 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 16:21:58.007 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 16:21:58.007 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 16:21:58.007 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 16:21:58.007 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 16:21:58.008 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 16:21:58.008 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 16:21:58.008 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 16:21:58.008 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 16:21:58.008 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 16:21:58.009 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 16:21:58.009 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 16:21:58.010 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 16:21:58.010 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 16:21:58.064 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 16:21:58.082 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 16:21:58.082 [main] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit-rt.jar;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\test-classes;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\classes;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Walker\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Walker\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Walker\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Walker\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Walker\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Walker\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Walker\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Walker\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Walker\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Walker\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Walker\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Walker\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Walker\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Walker\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\Walker\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Walker\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Walker\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Walker\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Walker\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-client\2.29.1\jersey-client-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\2.1.6\jakarta.ws.rs-api-2.1.6.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-common\2.29.1\jersey-common-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.3\osgi-resource-locator-1.0.3.jar;C:\Users\Walker\.m2\repository\com\sun\activation\jakarta.activation\1.2.1\jakarta.activation-1.2.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\jakarta.inject\2.6.1\jakarta.inject-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\inject\jersey-hk2\2.29.1\jersey-hk2-2.29.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-locator\2.6.1\hk2-locator-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\aopalliance-repackaged\2.6.1\aopalliance-repackaged-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-api\2.6.1\hk2-api-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-utils\2.6.1\hk2-utils-2.6.1.jar;C:\Users\Walker\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Walker\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Walker\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0\jackson-core-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 team.persistence.GenericDaoTest,deleteSuccess, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=13.0.1+9, user.name=Walker, path.separator=;, hibernate.connection.username=****, os.version=6.3, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Walker\AppData\Local\Temp\, java.version=13.0.1, user.dir=C:\Users\Walker\IdeaProjects\fictionalCharacterAPI, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@77d4ac52, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0}
[DEBUG] 2021-04-12 16:21:58.097 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-04-12 16:21:58.097 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 16:21:58.097 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 16:21:58.097 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@791c12e3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7e7e962d]
[DEBUG] 2021-04-12 16:21:58.148 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:21:58.148 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:21:58.161 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:21:58.161 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:21:58.367 [main] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 16:21:58.367 [main] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 16:21:58.368 [main] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 16:21:58.368 [main] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:21:58.368 [main] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 16:21:58.368 [main] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 16:21:58.368 [main] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:21:58.384 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62b6c045]
[DEBUG] 2021-04-12 16:21:58.385 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:21:58.385 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:21:58.385 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:21:58.385 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:21:58.385 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:21:58.386 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:21:58.394 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:21:58.397 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:21:58.399 [main] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:21:58.399 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c54ddec]
[DEBUG] 2021-04-12 16:21:58.399 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:21:58.399 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:21:58.399 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:21:58.399 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:21:58.399 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:21:58.399 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:21:58.399 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:21:58.399 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:21:58.399 [main] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:21:58.409 [main] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:21:58.409 [main] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:21:58.427 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 16:21:58.427 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 16:21:58.428 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 16:21:58.432 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 16:21:58.432 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 16:21:58.433 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 16:21:58.433 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 16:21:58.435 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3bbf1c0d
[DEBUG] 2021-04-12 16:21:58.436 [main] SessionFactoryRegistry - Registering SessionFactory: 058cb654-4635-4a11-a95b-71660f7a360e (<unnamed>)
[DEBUG] 2021-04-12 16:21:58.437 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 16:21:58.494 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 16:21:58.505 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:21:58.522 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:21:58.522 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:21:58.529 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#3]
[DEBUG] 2021-04-12 16:21:58.530 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:21:58.530 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:21:58.530 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Star Wars
[DEBUG] 2021-04-12 16:21:58.530 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:21:58.530 [main] TwoPhaseLoad - Processing attribute `media` : value = movie
[DEBUG] 2021-04-12 16:21:58.530 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:21:58.530 [main] TwoPhaseLoad - Processing attribute `name` : value = Luke Skywalker
[DEBUG] 2021-04-12 16:21:58.530 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:21:58.530 [main] TwoPhaseLoad - Processing attribute `species` : value = Human
[DEBUG] 2021-04-12 16:21:58.530 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:21:58.531 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#3]
[DEBUG] 2021-04-12 16:21:58.531 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:21:58.533 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#3
[DEBUG] 2021-04-12 16:21:58.534 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:21:58.554 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-04-12 16:21:58.554 [main] TransactionImpl - begin
[DEBUG] 2021-04-12 16:21:58.561 [main] TransactionImpl - committing
[DEBUG] 2021-04-12 16:21:58.562 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-04-12 16:21:58.562 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-04-12 16:21:58.563 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2021-04-12 16:21:58.563 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-04-12 16:21:58.564 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-04-12 16:21:58.564 [main] EntityPrinter - team.entity.Character{franchise=Star Wars, species=Human, name=Luke Skywalker, id=3, media=movie, alignment=Good}
[DEBUG] 2021-04-12 16:21:58.568 [main] SQL - delete from characters where id=?
[DEBUG] 2021-04-12 16:21:58.719 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:21:58.722 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:21:58.722 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2021-04-12 16:21:58.723 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:21:58.751 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:21:58.751 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#3
[DEBUG] 2021-04-12 16:21:58.751 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:22:08.039 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 16:22:08.041 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 16:22:08.045 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 16:22:08.171 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 16:22:08.176 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 16:22:08.342 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 16:22:08.342 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 16:22:08.349 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 16:22:08.581 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 16:22:08.598 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 16:22:08.599 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 16:22:08.616 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 16:22:08.644 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5cb042da
[DEBUG] 2021-04-12 16:22:08.644 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5cb042da
[DEBUG] 2021-04-12 16:22:08.644 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5cb042da
[DEBUG] 2021-04-12 16:22:08.645 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2f651f93
[DEBUG] 2021-04-12 16:22:08.645 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@736309a9
[DEBUG] 2021-04-12 16:22:08.646 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6f6621e3
[DEBUG] 2021-04-12 16:22:08.647 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@51a8313b
[DEBUG] 2021-04-12 16:22:08.647 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@51a8313b
[DEBUG] 2021-04-12 16:22:08.649 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@51a8313b
[DEBUG] 2021-04-12 16:22:08.650 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@39ad12b6
[DEBUG] 2021-04-12 16:22:08.650 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@39ad12b6
[DEBUG] 2021-04-12 16:22:08.652 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@39ad12b6
[DEBUG] 2021-04-12 16:22:08.653 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7df76d99
[DEBUG] 2021-04-12 16:22:08.653 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7df76d99
[DEBUG] 2021-04-12 16:22:08.653 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7df76d99
[DEBUG] 2021-04-12 16:22:08.654 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2e5ee2c9
[DEBUG] 2021-04-12 16:22:08.654 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2e5ee2c9
[DEBUG] 2021-04-12 16:22:08.655 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2e5ee2c9
[DEBUG] 2021-04-12 16:22:08.656 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@25a5c7db
[DEBUG] 2021-04-12 16:22:08.656 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@25a5c7db
[DEBUG] 2021-04-12 16:22:08.656 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@25a5c7db
[DEBUG] 2021-04-12 16:22:08.658 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7f5eae0f
[DEBUG] 2021-04-12 16:22:08.658 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7f5eae0f
[DEBUG] 2021-04-12 16:22:08.658 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f5eae0f
[DEBUG] 2021-04-12 16:22:08.659 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@68577ba8
[DEBUG] 2021-04-12 16:22:08.660 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@68577ba8
[DEBUG] 2021-04-12 16:22:08.661 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68577ba8
[DEBUG] 2021-04-12 16:22:08.662 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@43f0c2d1
[DEBUG] 2021-04-12 16:22:08.662 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@43f0c2d1
[DEBUG] 2021-04-12 16:22:08.663 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c5c616f
[DEBUG] 2021-04-12 16:22:08.664 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c5c616f
[DEBUG] 2021-04-12 16:22:08.664 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3f985a86
[DEBUG] 2021-04-12 16:22:08.665 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3f985a86
[DEBUG] 2021-04-12 16:22:08.665 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4096aa05
[DEBUG] 2021-04-12 16:22:08.666 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@184fb68d
[DEBUG] 2021-04-12 16:22:08.667 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@16a49a5d
[DEBUG] 2021-04-12 16:22:08.667 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@16a49a5d
[DEBUG] 2021-04-12 16:22:08.668 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7c2b58c0
[DEBUG] 2021-04-12 16:22:08.668 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7c2b58c0
[DEBUG] 2021-04-12 16:22:08.672 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5c73f672
[DEBUG] 2021-04-12 16:22:08.673 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5c73f672
[DEBUG] 2021-04-12 16:22:08.675 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7a34f66a
[DEBUG] 2021-04-12 16:22:08.675 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7a34f66a
[DEBUG] 2021-04-12 16:22:08.676 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2459319c
[DEBUG] 2021-04-12 16:22:08.676 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2459319c
[DEBUG] 2021-04-12 16:22:08.677 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7808f638
[DEBUG] 2021-04-12 16:22:08.678 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7808f638
[DEBUG] 2021-04-12 16:22:08.679 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3db663d0
[DEBUG] 2021-04-12 16:22:08.679 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3db663d0
[DEBUG] 2021-04-12 16:22:08.681 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5524b72f
[DEBUG] 2021-04-12 16:22:08.681 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5524b72f
[DEBUG] 2021-04-12 16:22:08.683 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e6f2bb5
[DEBUG] 2021-04-12 16:22:08.683 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e6f2bb5
[DEBUG] 2021-04-12 16:22:08.684 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38af1bf6
[DEBUG] 2021-04-12 16:22:08.685 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38af1bf6
[DEBUG] 2021-04-12 16:22:08.685 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4defd42
[DEBUG] 2021-04-12 16:22:08.685 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4defd42
[DEBUG] 2021-04-12 16:22:08.686 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3f9270ed
[DEBUG] 2021-04-12 16:22:08.686 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3f9270ed
[DEBUG] 2021-04-12 16:22:08.686 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3f9270ed
[DEBUG] 2021-04-12 16:22:08.688 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@61f39bb
[DEBUG] 2021-04-12 16:22:08.690 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3bfc6a5e
[DEBUG] 2021-04-12 16:22:08.691 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3bfc6a5e
[DEBUG] 2021-04-12 16:22:08.692 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3bfc6a5e
[DEBUG] 2021-04-12 16:22:08.692 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e00ed0f
[DEBUG] 2021-04-12 16:22:08.693 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@65753040
[DEBUG] 2021-04-12 16:22:08.695 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@65753040
[DEBUG] 2021-04-12 16:22:08.695 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4e1459ea
[DEBUG] 2021-04-12 16:22:08.696 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e1459ea
[DEBUG] 2021-04-12 16:22:08.696 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@57c47a9e
[DEBUG] 2021-04-12 16:22:08.696 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@57c47a9e
[DEBUG] 2021-04-12 16:22:08.697 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@52d6cd34
[DEBUG] 2021-04-12 16:22:08.697 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@52d6cd34
[DEBUG] 2021-04-12 16:22:08.698 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c2e3264
[DEBUG] 2021-04-12 16:22:08.698 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c2e3264
[DEBUG] 2021-04-12 16:22:08.698 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6014a9ba
[DEBUG] 2021-04-12 16:22:08.699 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@cbc8d0f
[DEBUG] 2021-04-12 16:22:08.700 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@cbc8d0f
[DEBUG] 2021-04-12 16:22:08.700 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@cbc8d0f
[DEBUG] 2021-04-12 16:22:08.702 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@17b6d426
[DEBUG] 2021-04-12 16:22:08.702 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@17b6d426
[DEBUG] 2021-04-12 16:22:08.704 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@17b6d426
[DEBUG] 2021-04-12 16:22:08.705 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@20e3c449
[DEBUG] 2021-04-12 16:22:08.706 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@680a66dd
[DEBUG] 2021-04-12 16:22:08.706 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@76ddd61a
[DEBUG] 2021-04-12 16:22:08.706 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@76ddd61a
[DEBUG] 2021-04-12 16:22:08.707 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@76ddd61a
[DEBUG] 2021-04-12 16:22:08.707 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@33a3c44a
[DEBUG] 2021-04-12 16:22:08.708 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@33a3c44a
[DEBUG] 2021-04-12 16:22:08.708 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@33a3c44a
[DEBUG] 2021-04-12 16:22:08.709 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@93f432e
[DEBUG] 2021-04-12 16:22:08.709 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5b051a5c
[DEBUG] 2021-04-12 16:22:08.711 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3f9f71ff
[DEBUG] 2021-04-12 16:22:08.711 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3f9f71ff
[DEBUG] 2021-04-12 16:22:08.711 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@764cba
[DEBUG] 2021-04-12 16:22:08.713 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@48eb9836
[DEBUG] 2021-04-12 16:22:08.713 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@48eb9836
[DEBUG] 2021-04-12 16:22:08.714 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@79d06bbd
[DEBUG] 2021-04-12 16:22:08.715 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@79d06bbd
[DEBUG] 2021-04-12 16:22:08.716 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@e8ea697
[DEBUG] 2021-04-12 16:22:08.716 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@45bf6f39
[DEBUG] 2021-04-12 16:22:08.717 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5fe7f967
[DEBUG] 2021-04-12 16:22:08.720 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5477a1ca
[DEBUG] 2021-04-12 16:22:08.720 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5477a1ca
[DEBUG] 2021-04-12 16:22:08.724 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@670d4d38
[DEBUG] 2021-04-12 16:22:08.725 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@131ff6fa
[DEBUG] 2021-04-12 16:22:08.725 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@43b40233
[DEBUG] 2021-04-12 16:22:08.725 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@23eff5d1
[DEBUG] 2021-04-12 16:22:08.725 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e060819
[DEBUG] 2021-04-12 16:22:08.725 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@42c28305
[DEBUG] 2021-04-12 16:22:08.726 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2184b4f4
[DEBUG] 2021-04-12 16:22:08.726 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7d199c68
[DEBUG] 2021-04-12 16:22:08.753 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 16:22:08.754 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 16:22:08.758 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:22:08.758 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:22:08.759 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 16:22:08.760 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 16:22:08.764 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 16:22:08.765 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:22:08.766 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 16:22:08.767 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 16:22:08.767 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 16:22:08.767 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 16:22:08.768 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:22:08.769 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 16:22:08.774 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 16:22:08.774 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 16:22:08.774 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 16:22:09.220 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 16:22:09.462 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:22:09.462 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:22:09.462 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 16:22:09.476 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 16:22:09.494 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 16:22:09.543 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 16:22:09.590 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 16:22:09.598 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@43a09ce2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3f183caa]
[DEBUG] 2021-04-12 16:22:09.666 [main] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 16:22:09.710 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 16:22:09.721 [main] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 16:22:09.725 [main] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 16:22:09.742 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:22:09.744 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 16:22:09.745 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 16:22:09.747 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 16:22:09.748 [main] PropertyBinder - Building property id
[DEBUG] 2021-04-12 16:22:09.751 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 16:22:09.752 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:22:09.752 [main] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 16:22:09.753 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 16:22:09.753 [main] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 16:22:09.753 [main] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 16:22:09.753 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:22:09.753 [main] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 16:22:09.754 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 16:22:09.758 [main] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 16:22:09.759 [main] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 16:22:09.759 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:22:09.760 [main] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 16:22:09.760 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 16:22:09.761 [main] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 16:22:09.761 [main] PropertyBinder - Building property media
[DEBUG] 2021-04-12 16:22:09.761 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:22:09.762 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 16:22:09.763 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 16:22:09.764 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 16:22:09.764 [main] PropertyBinder - Building property name
[DEBUG] 2021-04-12 16:22:09.764 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:22:09.764 [main] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 16:22:09.764 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 16:22:09.764 [main] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 16:22:09.764 [main] PropertyBinder - Building property species
[DEBUG] 2021-04-12 16:22:09.766 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 16:22:09.767 [main] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 16:22:09.767 [main] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 16:22:09.767 [main] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 16:22:09.767 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 16:22:09.767 [main] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 16:22:09.768 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 16:22:09.794 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 16:22:09.795 [main] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 16:22:09.795 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 16:22:09.795 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 16:22:09.795 [main] Settings - Statistics: disabled
[DEBUG] 2021-04-12 16:22:09.795 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 16:22:09.795 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 16:22:09.795 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 16:22:09.795 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 16:22:09.795 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 16:22:09.795 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 16:22:09.795 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 16:22:09.795 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 16:22:09.795 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 16:22:09.795 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 16:22:09.796 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 16:22:09.796 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 16:22:09.796 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 16:22:09.796 [main] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 16:22:09.796 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 16:22:09.796 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 16:22:09.796 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 16:22:09.796 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 16:22:09.796 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 16:22:09.796 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 16:22:09.796 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 16:22:09.796 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 16:22:09.797 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 16:22:09.797 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 16:22:09.798 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 16:22:09.798 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 16:22:09.799 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 16:22:09.799 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 16:22:09.799 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 16:22:09.799 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 16:22:09.799 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 16:22:09.799 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 16:22:09.799 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 16:22:09.799 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 16:22:09.846 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 16:22:09.860 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 16:22:09.860 [main] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit-rt.jar;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\test-classes;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\classes;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Walker\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Walker\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Walker\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Walker\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Walker\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Walker\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Walker\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Walker\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Walker\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Walker\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Walker\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Walker\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Walker\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Walker\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\Walker\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Walker\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Walker\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Walker\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Walker\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-client\2.29.1\jersey-client-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\2.1.6\jakarta.ws.rs-api-2.1.6.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-common\2.29.1\jersey-common-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.3\osgi-resource-locator-1.0.3.jar;C:\Users\Walker\.m2\repository\com\sun\activation\jakarta.activation\1.2.1\jakarta.activation-1.2.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\jakarta.inject\2.6.1\jakarta.inject-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\inject\jersey-hk2\2.29.1\jersey-hk2-2.29.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-locator\2.6.1\hk2-locator-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\aopalliance-repackaged\2.6.1\aopalliance-repackaged-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-api\2.6.1\hk2-api-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-utils\2.6.1\hk2-utils-2.6.1.jar;C:\Users\Walker\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Walker\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Walker\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0\jackson-core-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 team.persistence.GenericDaoTest,getAllSuccess, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=13.0.1+9, user.name=Walker, path.separator=;, hibernate.connection.username=****, os.version=6.3, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Walker\AppData\Local\Temp\, java.version=13.0.1, user.dir=C:\Users\Walker\IdeaProjects\fictionalCharacterAPI, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51a651c1, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0}
[DEBUG] 2021-04-12 16:22:09.873 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-04-12 16:22:09.873 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 16:22:09.874 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 16:22:09.874 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@43a09ce2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2753316c]
[DEBUG] 2021-04-12 16:22:09.921 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:22:09.921 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:22:09.936 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:22:09.936 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:22:10.118 [main] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 16:22:10.118 [main] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 16:22:10.118 [main] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 16:22:10.118 [main] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:22:10.119 [main] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 16:22:10.119 [main] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 16:22:10.119 [main] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:22:10.137 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a1568d6]
[DEBUG] 2021-04-12 16:22:10.138 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:22:10.138 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:22:10.138 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:22:10.138 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:22:10.138 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:22:10.138 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:22:10.147 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:22:10.150 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:22:10.152 [main] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:22:10.152 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2416c658]
[DEBUG] 2021-04-12 16:22:10.152 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:22:10.152 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:22:10.152 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:22:10.152 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:22:10.152 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:22:10.152 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:22:10.152 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:22:10.152 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:22:10.153 [main] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:22:10.163 [main] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:22:10.163 [main] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:22:10.181 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 16:22:10.181 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 16:22:10.182 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 16:22:10.191 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 16:22:10.191 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 16:22:10.192 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 16:22:10.192 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 16:22:10.194 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5eb87338
[DEBUG] 2021-04-12 16:22:10.195 [main] SessionFactoryRegistry - Registering SessionFactory: a0112083-ac7f-44e6-87dd-6a8c62cafcf9 (<unnamed>)
[DEBUG] 2021-04-12 16:22:10.196 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 16:22:10.247 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 16:22:10.265 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Character as generatedAlias0
[DEBUG] 2021-04-12 16:22:10.277 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3db6dd52
[DEBUG] 2021-04-12 16:22:10.292 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from team.entity.Character as generatedAlias0
[DEBUG] 2021-04-12 16:22:10.296 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-04-12 16:22:10.312 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'team'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Character'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2021-04-12 16:22:10.327 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-04-12 16:22:10.337 [main] FromElement - FromClause{level=1} : team.entity.Character (generatedAlias0) -> character0_
[DEBUG] 2021-04-12 16:22:10.337 [main] FromReferenceNode - Resolved : generatedAlias0 -> character0_.id
[DEBUG] 2021-04-12 16:22:10.338 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-04-12 16:22:10.339 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} character0_.id ) ( FromClause{level=1} characters character0_ ) )
[DEBUG] 2021-04-12 16:22:10.345 [main] JoinProcessor - Using FROM fragment [characters character0_]
[DEBUG] 2021-04-12 16:22:10.345 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-04-12 16:22:10.345 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (characters)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'character0_.id as id1_0_' {alias=generatedAlias0, className=team.entity.Character, tableAlias=character0_}
    |  \-[SQL_TOKEN] SqlFragment: 'character0_.alignment as alignmen2_0_, character0_.franchise as franchis3_0_, character0_.media as media4_0_, character0_.name as name5_0_, character0_.species as species6_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[character0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'characters character0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=characters,tableAlias=character0_,origin=null,columns={,className=team.entity.Character}}

[DEBUG] 2021-04-12 16:22:10.345 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-04-12 16:22:10.349 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from team.entity.Character as generatedAlias0
[DEBUG] 2021-04-12 16:22:10.350 [main] QueryTranslatorImpl - SQL: select character0_.id as id1_0_, character0_.alignment as alignmen2_0_, character0_.franchise as franchis3_0_, character0_.media as media4_0_, character0_.name as name5_0_, character0_.species as species6_0_ from characters character0_
[DEBUG] 2021-04-12 16:22:10.350 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-04-12 16:22:10.359 [main] SQL - select character0_.id as id1_0_, character0_.alignment as alignmen2_0_, character0_.franchise as franchis3_0_, character0_.media as media4_0_, character0_.name as name5_0_, character0_.species as species6_0_ from characters character0_
[DEBUG] 2021-04-12 16:22:10.387 [main] Loader - Result set row: 0
[DEBUG] 2021-04-12 16:22:10.389 [main] Loader - Result row: EntityKey[team.entity.Character#1]
[DEBUG] 2021-04-12 16:22:10.394 [main] Loader - Result set row: 1
[DEBUG] 2021-04-12 16:22:10.395 [main] Loader - Result row: EntityKey[team.entity.Character#2]
[DEBUG] 2021-04-12 16:22:10.395 [main] Loader - Result set row: 2
[DEBUG] 2021-04-12 16:22:10.395 [main] Loader - Result row: EntityKey[team.entity.Character#3]
[DEBUG] 2021-04-12 16:22:10.395 [main] Loader - Result set row: 3
[DEBUG] 2021-04-12 16:22:10.395 [main] Loader - Result row: EntityKey[team.entity.Character#4]
[DEBUG] 2021-04-12 16:22:10.396 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:22:10.396 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:22:10.396 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:10.397 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:22:10.397 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:10.397 [main] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:22:10.397 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:10.397 [main] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 16:22:10.397 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:10.397 [main] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:22:10.397 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:10.398 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:22:10.398 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#2]
[DEBUG] 2021-04-12 16:22:10.398 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:22:10.398 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:10.398 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Alien
[DEBUG] 2021-04-12 16:22:10.398 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:10.398 [main] TwoPhaseLoad - Processing attribute `media` : value = movie
[DEBUG] 2021-04-12 16:22:10.398 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:10.398 [main] TwoPhaseLoad - Processing attribute `name` : value = Ripley
[DEBUG] 2021-04-12 16:22:10.398 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:10.398 [main] TwoPhaseLoad - Processing attribute `species` : value = Human
[DEBUG] 2021-04-12 16:22:10.398 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:10.398 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#2]
[DEBUG] 2021-04-12 16:22:10.398 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#3]
[DEBUG] 2021-04-12 16:22:10.398 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:22:10.398 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:10.398 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Star Wars
[DEBUG] 2021-04-12 16:22:10.398 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:10.398 [main] TwoPhaseLoad - Processing attribute `media` : value = movie
[DEBUG] 2021-04-12 16:22:10.399 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:10.399 [main] TwoPhaseLoad - Processing attribute `name` : value = Luke Skywalker
[DEBUG] 2021-04-12 16:22:10.399 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:10.399 [main] TwoPhaseLoad - Processing attribute `species` : value = Human
[DEBUG] 2021-04-12 16:22:10.399 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:10.399 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#3]
[DEBUG] 2021-04-12 16:22:10.399 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#4]
[DEBUG] 2021-04-12 16:22:10.399 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:22:10.399 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:10.399 [main] TwoPhaseLoad - Processing attribute `franchise` : value = The Matrix
[DEBUG] 2021-04-12 16:22:10.399 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:10.399 [main] TwoPhaseLoad - Processing attribute `media` : value = movie
[DEBUG] 2021-04-12 16:22:10.399 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:10.399 [main] TwoPhaseLoad - Processing attribute `name` : value = Neo
[DEBUG] 2021-04-12 16:22:10.399 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:10.399 [main] TwoPhaseLoad - Processing attribute `species` : value = Human
[DEBUG] 2021-04-12 16:22:10.399 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:10.399 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#4]
[DEBUG] 2021-04-12 16:22:10.400 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:22:27.248 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 16:22:27.250 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 16:22:27.254 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 16:22:27.344 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 16:22:27.348 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 16:22:27.558 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 16:22:27.558 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 16:22:27.563 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 16:22:27.834 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 16:22:27.852 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 16:22:27.853 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 16:22:27.872 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 16:22:27.898 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2b5183ec
[DEBUG] 2021-04-12 16:22:27.898 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2b5183ec
[DEBUG] 2021-04-12 16:22:27.898 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b5183ec
[DEBUG] 2021-04-12 16:22:27.899 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58b71ceb
[DEBUG] 2021-04-12 16:22:27.900 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6bbe50c9
[DEBUG] 2021-04-12 16:22:27.900 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@8a98f38
[DEBUG] 2021-04-12 16:22:27.901 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3fbcfe81
[DEBUG] 2021-04-12 16:22:27.901 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3fbcfe81
[DEBUG] 2021-04-12 16:22:27.902 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3fbcfe81
[DEBUG] 2021-04-12 16:22:27.903 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@c6b2dd9
[DEBUG] 2021-04-12 16:22:27.903 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@c6b2dd9
[DEBUG] 2021-04-12 16:22:27.903 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@c6b2dd9
[DEBUG] 2021-04-12 16:22:27.905 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3d278b4d
[DEBUG] 2021-04-12 16:22:27.905 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3d278b4d
[DEBUG] 2021-04-12 16:22:27.905 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3d278b4d
[DEBUG] 2021-04-12 16:22:27.906 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1e530163
[DEBUG] 2021-04-12 16:22:27.906 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1e530163
[DEBUG] 2021-04-12 16:22:27.907 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e530163
[DEBUG] 2021-04-12 16:22:27.908 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@23706db8
[DEBUG] 2021-04-12 16:22:27.909 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@23706db8
[DEBUG] 2021-04-12 16:22:27.909 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@23706db8
[DEBUG] 2021-04-12 16:22:27.910 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7bca6fac
[DEBUG] 2021-04-12 16:22:27.910 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7bca6fac
[DEBUG] 2021-04-12 16:22:27.911 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7bca6fac
[DEBUG] 2021-04-12 16:22:27.912 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@31d6f3fe
[DEBUG] 2021-04-12 16:22:27.913 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@31d6f3fe
[DEBUG] 2021-04-12 16:22:27.913 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@31d6f3fe
[DEBUG] 2021-04-12 16:22:27.914 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@165e389b
[DEBUG] 2021-04-12 16:22:27.915 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@165e389b
[DEBUG] 2021-04-12 16:22:27.917 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@71f0b72e
[DEBUG] 2021-04-12 16:22:27.917 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@71f0b72e
[DEBUG] 2021-04-12 16:22:27.918 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3681037
[DEBUG] 2021-04-12 16:22:27.918 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3681037
[DEBUG] 2021-04-12 16:22:27.918 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5eed2d86
[DEBUG] 2021-04-12 16:22:27.919 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7808f638
[DEBUG] 2021-04-12 16:22:27.921 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3db663d0
[DEBUG] 2021-04-12 16:22:27.922 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3db663d0
[DEBUG] 2021-04-12 16:22:27.922 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5524b72f
[DEBUG] 2021-04-12 16:22:27.923 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5524b72f
[DEBUG] 2021-04-12 16:22:28.179 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5fac521d
[DEBUG] 2021-04-12 16:22:28.179 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5fac521d
[DEBUG] 2021-04-12 16:22:28.182 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4248b963
[DEBUG] 2021-04-12 16:22:28.182 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4248b963
[DEBUG] 2021-04-12 16:22:28.183 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@706eab5d
[DEBUG] 2021-04-12 16:22:28.184 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@706eab5d
[DEBUG] 2021-04-12 16:22:28.185 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@61f39bb
[DEBUG] 2021-04-12 16:22:28.186 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@61f39bb
[DEBUG] 2021-04-12 16:22:28.188 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d654825
[DEBUG] 2021-04-12 16:22:28.188 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d654825
[DEBUG] 2021-04-12 16:22:28.190 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@b0fc838
[DEBUG] 2021-04-12 16:22:28.191 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@b0fc838
[DEBUG] 2021-04-12 16:22:28.193 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2954b5ea
[DEBUG] 2021-04-12 16:22:28.193 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2954b5ea
[DEBUG] 2021-04-12 16:22:28.194 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4eed2acf
[DEBUG] 2021-04-12 16:22:28.194 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4eed2acf
[DEBUG] 2021-04-12 16:22:28.196 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@21ac5eb4
[DEBUG] 2021-04-12 16:22:28.196 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@21ac5eb4
[DEBUG] 2021-04-12 16:22:28.197 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@c2e3264
[DEBUG] 2021-04-12 16:22:28.197 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c2e3264
[DEBUG] 2021-04-12 16:22:28.198 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c2e3264
[DEBUG] 2021-04-12 16:22:28.198 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6014a9ba
[DEBUG] 2021-04-12 16:22:28.200 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@cbc8d0f
[DEBUG] 2021-04-12 16:22:28.200 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@cbc8d0f
[DEBUG] 2021-04-12 16:22:28.201 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@cbc8d0f
[DEBUG] 2021-04-12 16:22:28.202 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7be71476
[DEBUG] 2021-04-12 16:22:28.203 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@154bd49b
[DEBUG] 2021-04-12 16:22:28.203 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@154bd49b
[DEBUG] 2021-04-12 16:22:28.204 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2dd8239
[DEBUG] 2021-04-12 16:22:28.205 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2dd8239
[DEBUG] 2021-04-12 16:22:28.208 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3f92a84e
[DEBUG] 2021-04-12 16:22:28.208 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3f92a84e
[DEBUG] 2021-04-12 16:22:28.209 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5fcfca62
[DEBUG] 2021-04-12 16:22:28.210 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5fcfca62
[DEBUG] 2021-04-12 16:22:28.210 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5b051a5c
[DEBUG] 2021-04-12 16:22:28.210 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5b051a5c
[DEBUG] 2021-04-12 16:22:28.211 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58cf8f94
[DEBUG] 2021-04-12 16:22:28.212 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@27e5b378
[DEBUG] 2021-04-12 16:22:28.212 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@27e5b378
[DEBUG] 2021-04-12 16:22:28.212 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@27e5b378
[DEBUG] 2021-04-12 16:22:28.213 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1a87b51
[DEBUG] 2021-04-12 16:22:28.213 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1a87b51
[DEBUG] 2021-04-12 16:22:28.214 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1a87b51
[DEBUG] 2021-04-12 16:22:28.214 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@11b455e5
[DEBUG] 2021-04-12 16:22:28.215 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6d025d1d
[DEBUG] 2021-04-12 16:22:28.216 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7479b626
[DEBUG] 2021-04-12 16:22:28.216 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7479b626
[DEBUG] 2021-04-12 16:22:28.216 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7479b626
[DEBUG] 2021-04-12 16:22:28.218 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17a703f5
[DEBUG] 2021-04-12 16:22:28.218 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17a703f5
[DEBUG] 2021-04-12 16:22:28.219 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17a703f5
[DEBUG] 2021-04-12 16:22:28.219 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3531f3ca
[DEBUG] 2021-04-12 16:22:28.219 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5fe7f967
[DEBUG] 2021-04-12 16:22:28.220 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3e1a3801
[DEBUG] 2021-04-12 16:22:28.224 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e1a3801
[DEBUG] 2021-04-12 16:22:28.224 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@222afc67
[DEBUG] 2021-04-12 16:22:28.225 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@670d4d38
[DEBUG] 2021-04-12 16:22:28.226 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@670d4d38
[DEBUG] 2021-04-12 16:22:28.228 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@316a598d
[DEBUG] 2021-04-12 16:22:28.228 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@316a598d
[DEBUG] 2021-04-12 16:22:28.229 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5633dafd
[DEBUG] 2021-04-12 16:22:28.229 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@61af1510
[DEBUG] 2021-04-12 16:22:28.230 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@71ad3d8a
[DEBUG] 2021-04-12 16:22:28.233 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3e17a0a1
[DEBUG] 2021-04-12 16:22:28.233 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e17a0a1
[DEBUG] 2021-04-12 16:22:28.234 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@161f6623
[DEBUG] 2021-04-12 16:22:28.234 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3e15bb06
[DEBUG] 2021-04-12 16:22:28.234 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6778aea6
[DEBUG] 2021-04-12 16:22:28.234 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4e1ce44
[DEBUG] 2021-04-12 16:22:28.234 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@69228e85
[DEBUG] 2021-04-12 16:22:28.234 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7a7cc52c
[DEBUG] 2021-04-12 16:22:28.235 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5853495b
[DEBUG] 2021-04-12 16:22:28.235 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@524a2ffb
[DEBUG] 2021-04-12 16:22:28.261 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 16:22:28.262 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 16:22:28.266 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:22:28.267 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:22:28.279 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 16:22:28.280 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 16:22:28.281 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 16:22:28.282 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:22:28.283 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 16:22:28.284 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 16:22:28.284 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 16:22:28.284 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 16:22:28.285 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:22:28.286 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 16:22:28.292 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 16:22:28.292 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 16:22:28.292 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 16:22:28.472 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 16:22:28.716 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:22:28.716 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:22:28.717 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 16:22:28.731 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 16:22:28.744 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 16:22:28.818 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 16:22:28.860 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 16:22:28.864 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14f40030] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4c447c09]
[DEBUG] 2021-04-12 16:22:28.923 [main] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 16:22:28.945 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 16:22:28.953 [main] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 16:22:28.955 [main] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 16:22:28.984 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:22:28.986 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 16:22:28.988 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 16:22:28.990 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 16:22:28.992 [main] PropertyBinder - Building property id
[DEBUG] 2021-04-12 16:22:28.995 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 16:22:28.996 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:22:28.997 [main] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 16:22:28.997 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 16:22:28.997 [main] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 16:22:28.997 [main] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 16:22:28.998 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:22:28.998 [main] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 16:22:28.998 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 16:22:28.998 [main] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 16:22:28.998 [main] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 16:22:28.998 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:22:28.999 [main] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 16:22:28.999 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 16:22:29.000 [main] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 16:22:29.000 [main] PropertyBinder - Building property media
[DEBUG] 2021-04-12 16:22:29.003 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:22:29.003 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 16:22:29.004 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 16:22:29.004 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 16:22:29.004 [main] PropertyBinder - Building property name
[DEBUG] 2021-04-12 16:22:29.004 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:22:29.005 [main] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 16:22:29.005 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 16:22:29.005 [main] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 16:22:29.005 [main] PropertyBinder - Building property species
[DEBUG] 2021-04-12 16:22:29.010 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 16:22:29.010 [main] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 16:22:29.010 [main] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 16:22:29.010 [main] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 16:22:29.010 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 16:22:29.010 [main] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 16:22:29.011 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 16:22:29.038 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 16:22:29.039 [main] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 16:22:29.039 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 16:22:29.039 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 16:22:29.039 [main] Settings - Statistics: disabled
[DEBUG] 2021-04-12 16:22:29.039 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 16:22:29.039 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 16:22:29.039 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 16:22:29.040 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 16:22:29.040 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 16:22:29.040 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 16:22:29.040 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 16:22:29.041 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 16:22:29.041 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 16:22:29.041 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 16:22:29.041 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 16:22:29.041 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 16:22:29.041 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 16:22:29.041 [main] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 16:22:29.042 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 16:22:29.042 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 16:22:29.042 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 16:22:29.043 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 16:22:29.043 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 16:22:29.043 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 16:22:29.043 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 16:22:29.043 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 16:22:29.043 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 16:22:29.043 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 16:22:29.043 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 16:22:29.043 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 16:22:29.043 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 16:22:29.043 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 16:22:29.043 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 16:22:29.043 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 16:22:29.043 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 16:22:29.043 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 16:22:29.045 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 16:22:29.046 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 16:22:29.090 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 16:22:29.108 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 16:22:29.108 [main] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit-rt.jar;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\test-classes;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\classes;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Walker\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Walker\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Walker\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Walker\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Walker\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Walker\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Walker\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Walker\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Walker\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Walker\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Walker\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Walker\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Walker\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Walker\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\Walker\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Walker\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Walker\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Walker\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Walker\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-client\2.29.1\jersey-client-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\2.1.6\jakarta.ws.rs-api-2.1.6.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-common\2.29.1\jersey-common-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.3\osgi-resource-locator-1.0.3.jar;C:\Users\Walker\.m2\repository\com\sun\activation\jakarta.activation\1.2.1\jakarta.activation-1.2.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\jakarta.inject\2.6.1\jakarta.inject-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\inject\jersey-hk2\2.29.1\jersey-hk2-2.29.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-locator\2.6.1\hk2-locator-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\aopalliance-repackaged\2.6.1\aopalliance-repackaged-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-api\2.6.1\hk2-api-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-utils\2.6.1\hk2-utils-2.6.1.jar;C:\Users\Walker\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Walker\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Walker\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0\jackson-core-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 team.persistence.GenericDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=13.0.1+9, user.name=Walker, path.separator=;, hibernate.connection.username=****, os.version=6.3, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Walker\AppData\Local\Temp\, java.version=13.0.1, user.dir=C:\Users\Walker\IdeaProjects\fictionalCharacterAPI, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@f0a66bd, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0}
[DEBUG] 2021-04-12 16:22:29.125 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-04-12 16:22:29.125 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 16:22:29.126 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 16:22:29.126 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14f40030] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@554188ac]
[DEBUG] 2021-04-12 16:22:29.192 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:22:29.193 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:22:29.206 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:22:29.206 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:22:29.394 [main] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 16:22:29.394 [main] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 16:22:29.394 [main] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 16:22:29.394 [main] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:22:29.394 [main] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 16:22:29.394 [main] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 16:22:29.394 [main] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:22:29.411 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@604d28c6]
[DEBUG] 2021-04-12 16:22:29.412 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:22:29.412 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:22:29.412 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:22:29.412 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:22:29.412 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:22:29.412 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:22:29.421 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:22:29.424 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:22:29.428 [main] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:22:29.428 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@512abf25]
[DEBUG] 2021-04-12 16:22:29.428 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:22:29.428 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:22:29.428 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:22:29.428 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:22:29.428 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:22:29.428 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:22:29.429 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:22:29.429 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:22:29.429 [main] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:22:29.439 [main] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:22:29.439 [main] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:22:29.458 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 16:22:29.458 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 16:22:29.459 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 16:22:29.463 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 16:22:29.463 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 16:22:29.465 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 16:22:29.465 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 16:22:29.467 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@743c3520
[DEBUG] 2021-04-12 16:22:29.468 [main] SessionFactoryRegistry - Registering SessionFactory: dc176b82-ccee-44c0-91d2-3cfe0bd24006 (<unnamed>)
[DEBUG] 2021-04-12 16:22:29.470 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 16:22:29.533 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 16:22:29.547 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:22:29.570 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:22:29.570 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:22:29.577 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#3]
[DEBUG] 2021-04-12 16:22:29.578 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:22:29.578 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:29.578 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Star Wars
[DEBUG] 2021-04-12 16:22:29.578 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:29.578 [main] TwoPhaseLoad - Processing attribute `media` : value = movie
[DEBUG] 2021-04-12 16:22:29.578 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:29.578 [main] TwoPhaseLoad - Processing attribute `name` : value = Luke Skywalker
[DEBUG] 2021-04-12 16:22:29.578 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:29.578 [main] TwoPhaseLoad - Processing attribute `species` : value = Human
[DEBUG] 2021-04-12 16:22:29.578 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:29.579 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#3]
[DEBUG] 2021-04-12 16:22:29.579 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:22:29.580 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#3
[DEBUG] 2021-04-12 16:22:29.580 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:22:29.586 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-04-12 16:22:29.586 [main] TransactionImpl - begin
[DEBUG] 2021-04-12 16:22:29.594 [main] TransactionImpl - committing
[DEBUG] 2021-04-12 16:22:29.594 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-04-12 16:22:29.594 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-04-12 16:22:29.595 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2021-04-12 16:22:29.595 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-04-12 16:22:29.596 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-04-12 16:22:29.596 [main] EntityPrinter - team.entity.Character{franchise=Star Wars, species=Human, name=Luke Skywalker, id=3, media=movie, alignment=Good}
[DEBUG] 2021-04-12 16:22:29.600 [main] SQL - delete from characters where id=?
[DEBUG] 2021-04-12 16:22:29.821 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:22:29.823 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:22:29.823 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2021-04-12 16:22:29.823 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:22:29.825 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:22:29.826 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#3
[DEBUG] 2021-04-12 16:22:29.826 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:22:30.337 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Character as generatedAlias0
[DEBUG] 2021-04-12 16:22:30.350 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@59d5a6fd
[DEBUG] 2021-04-12 16:22:30.376 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from team.entity.Character as generatedAlias0
[DEBUG] 2021-04-12 16:22:30.379 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-04-12 16:22:30.387 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'team'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Character'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2021-04-12 16:22:30.401 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-04-12 16:22:30.411 [main] FromElement - FromClause{level=1} : team.entity.Character (generatedAlias0) -> character0_
[DEBUG] 2021-04-12 16:22:30.412 [main] FromReferenceNode - Resolved : generatedAlias0 -> character0_.id
[DEBUG] 2021-04-12 16:22:30.413 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-04-12 16:22:30.413 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} character0_.id ) ( FromClause{level=1} characters character0_ ) )
[DEBUG] 2021-04-12 16:22:30.420 [main] JoinProcessor - Using FROM fragment [characters character0_]
[DEBUG] 2021-04-12 16:22:30.420 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-04-12 16:22:30.421 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (characters)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'character0_.id as id1_0_' {alias=generatedAlias0, className=team.entity.Character, tableAlias=character0_}
    |  \-[SQL_TOKEN] SqlFragment: 'character0_.alignment as alignmen2_0_, character0_.franchise as franchis3_0_, character0_.media as media4_0_, character0_.name as name5_0_, character0_.species as species6_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[character0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'characters character0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=characters,tableAlias=character0_,origin=null,columns={,className=team.entity.Character}}

[DEBUG] 2021-04-12 16:22:30.421 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-04-12 16:22:30.425 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from team.entity.Character as generatedAlias0
[DEBUG] 2021-04-12 16:22:30.426 [main] QueryTranslatorImpl - SQL: select character0_.id as id1_0_, character0_.alignment as alignmen2_0_, character0_.franchise as franchis3_0_, character0_.media as media4_0_, character0_.name as name5_0_, character0_.species as species6_0_ from characters character0_
[DEBUG] 2021-04-12 16:22:30.426 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-04-12 16:22:30.433 [main] SQL - select character0_.id as id1_0_, character0_.alignment as alignmen2_0_, character0_.franchise as franchis3_0_, character0_.media as media4_0_, character0_.name as name5_0_, character0_.species as species6_0_ from characters character0_
[DEBUG] 2021-04-12 16:22:30.435 [main] Loader - Result set row: 0
[DEBUG] 2021-04-12 16:22:30.437 [main] Loader - Result row: EntityKey[team.entity.Character#1]
[DEBUG] 2021-04-12 16:22:30.437 [main] Loader - Result set row: 1
[DEBUG] 2021-04-12 16:22:30.437 [main] Loader - Result row: EntityKey[team.entity.Character#2]
[DEBUG] 2021-04-12 16:22:30.437 [main] Loader - Result set row: 2
[DEBUG] 2021-04-12 16:22:30.437 [main] Loader - Result row: EntityKey[team.entity.Character#3]
[DEBUG] 2021-04-12 16:22:30.437 [main] Loader - Result set row: 3
[DEBUG] 2021-04-12 16:22:30.437 [main] Loader - Result row: EntityKey[team.entity.Character#4]
[DEBUG] 2021-04-12 16:22:30.437 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:22:30.437 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:22:30.437 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.437 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:22:30.437 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.437 [main] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:22:30.437 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.437 [main] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 16:22:30.437 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.437 [main] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:22:30.437 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.437 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:22:30.438 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#2]
[DEBUG] 2021-04-12 16:22:30.438 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:22:30.438 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.438 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Alien
[DEBUG] 2021-04-12 16:22:30.438 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.438 [main] TwoPhaseLoad - Processing attribute `media` : value = movie
[DEBUG] 2021-04-12 16:22:30.438 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Processing attribute `name` : value = Ripley
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Processing attribute `species` : value = Human
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#2]
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#3]
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Star Wars
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Processing attribute `media` : value = movie
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Processing attribute `name` : value = Luke Skywalker
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Processing attribute `species` : value = Human
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#3]
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#4]
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Processing attribute `franchise` : value = The Matrix
[DEBUG] 2021-04-12 16:22:30.439 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.440 [main] TwoPhaseLoad - Processing attribute `media` : value = movie
[DEBUG] 2021-04-12 16:22:30.440 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.440 [main] TwoPhaseLoad - Processing attribute `name` : value = Neo
[DEBUG] 2021-04-12 16:22:30.440 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.440 [main] TwoPhaseLoad - Processing attribute `species` : value = Human
[DEBUG] 2021-04-12 16:22:30.440 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.440 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#4]
[DEBUG] 2021-04-12 16:22:30.442 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:22:30.944 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:22:30.948 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:22:30.954 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:22:30.954 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:22:30.955 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:22:30.955 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.955 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:22:30.955 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.955 [main] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:22:30.955 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.955 [main] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 16:22:30.955 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.955 [main] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:22:30.955 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:30.955 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:22:30.955 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:22:30.955 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 16:22:30.956 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:22:31.204 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:22:31.206 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:22:31.207 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:22:31.207 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:22:31.207 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:22:31.207 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:31.207 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:22:31.207 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:31.207 [main] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:22:31.207 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:31.207 [main] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 16:22:31.207 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:31.207 [main] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:22:31.207 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:31.207 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:22:31.207 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:22:31.207 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 16:22:31.207 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:22:31.208 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-04-12 16:22:31.208 [main] TransactionImpl - begin
[DEBUG] 2021-04-12 16:22:31.210 [main] TransactionImpl - committing
[DEBUG] 2021-04-12 16:22:31.210 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-04-12 16:22:31.210 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-04-12 16:22:31.211 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2021-04-12 16:22:31.211 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-04-12 16:22:31.211 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-04-12 16:22:31.211 [main] EntityPrinter - team.entity.Character{franchise=Lord Of The Rings, species=Maia, name=Harry Wizard, id=1, media=book, alignment=Good}
[DEBUG] 2021-04-12 16:22:31.211 [main] SQL - update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 16:22:31.300 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:22:31.301 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:22:31.302 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:22:31.304 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:22:31.304 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:22:31.304 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:22:31.304 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:22:31.304 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:31.304 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:22:31.304 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:31.304 [main] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:22:31.305 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:31.305 [main] TwoPhaseLoad - Processing attribute `name` : value = Harry Wizard
[DEBUG] 2021-04-12 16:22:31.305 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:31.305 [main] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:22:31.305 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:31.305 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:22:31.305 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:22:31.305 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 16:22:31.305 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:22:31.553 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-04-12 16:22:31.553 [main] TransactionImpl - begin
[DEBUG] 2021-04-12 16:22:31.556 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-04-12 16:22:31.557 [main] SQL - insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:22:31.587 [main] IdentifierGeneratorHelper - Natively generated identity: 6
[DEBUG] 2021-04-12 16:22:31.587 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:22:31.588 [main] TransactionImpl - committing
[DEBUG] 2021-04-12 16:22:31.588 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-04-12 16:22:31.588 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-04-12 16:22:31.588 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-04-12 16:22:31.588 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-04-12 16:22:31.588 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-04-12 16:22:31.588 [main] EntityPrinter - team.entity.Character{franchise=Spawn, species=Hellspawn, name=Spawn, id=6, media=Comic, alignment=Neutral}
[DEBUG] 2021-04-12 16:22:31.675 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:22:31.677 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:22:31.678 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:22:31.680 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:22:31.680 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:22:31.680 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#6]
[DEBUG] 2021-04-12 16:22:31.681 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Neutral
[DEBUG] 2021-04-12 16:22:31.682 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:31.684 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Spawn
[DEBUG] 2021-04-12 16:22:31.684 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:31.684 [main] TwoPhaseLoad - Processing attribute `media` : value = Comic
[DEBUG] 2021-04-12 16:22:31.684 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:31.684 [main] TwoPhaseLoad - Processing attribute `name` : value = Spawn
[DEBUG] 2021-04-12 16:22:31.684 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:31.684 [main] TwoPhaseLoad - Processing attribute `species` : value = Hellspawn
[DEBUG] 2021-04-12 16:22:31.685 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:22:31.685 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#6]
[DEBUG] 2021-04-12 16:22:31.685 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:22:31.685 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#6
[DEBUG] 2021-04-12 16:22:31.685 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:27:18.884 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 16:27:18.888 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 16:27:18.893 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 16:27:19.067 [http-nio-8080-exec-10] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 16:27:19.071 [http-nio-8080-exec-10] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 16:27:19.276 [http-nio-8080-exec-10] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 16:27:19.277 [http-nio-8080-exec-10] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 16:27:19.310 [http-nio-8080-exec-10] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 16:27:19.703 [http-nio-8080-exec-10] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 16:27:19.733 [http-nio-8080-exec-10] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 16:27:19.735 [http-nio-8080-exec-10] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 16:27:19.771 [http-nio-8080-exec-10] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 16:27:19.852 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2a3adb6a
[DEBUG] 2021-04-12 16:27:19.852 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2a3adb6a
[DEBUG] 2021-04-12 16:27:19.853 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2a3adb6a
[DEBUG] 2021-04-12 16:27:19.855 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@683220bf
[DEBUG] 2021-04-12 16:27:19.855 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7ba7fc10
[DEBUG] 2021-04-12 16:27:19.856 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@ccd657f
[DEBUG] 2021-04-12 16:27:19.857 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@533ae24a
[DEBUG] 2021-04-12 16:27:19.858 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@533ae24a
[DEBUG] 2021-04-12 16:27:19.858 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@533ae24a
[DEBUG] 2021-04-12 16:27:19.860 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5d64b98f
[DEBUG] 2021-04-12 16:27:19.860 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5d64b98f
[DEBUG] 2021-04-12 16:27:19.860 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5d64b98f
[DEBUG] 2021-04-12 16:27:19.862 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@ad21e92
[DEBUG] 2021-04-12 16:27:19.862 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@ad21e92
[DEBUG] 2021-04-12 16:27:19.862 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@ad21e92
[DEBUG] 2021-04-12 16:27:19.864 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6f22c9da
[DEBUG] 2021-04-12 16:27:19.864 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6f22c9da
[DEBUG] 2021-04-12 16:27:19.864 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f22c9da
[DEBUG] 2021-04-12 16:27:19.865 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7af8a2e7
[DEBUG] 2021-04-12 16:27:19.865 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7af8a2e7
[DEBUG] 2021-04-12 16:27:19.865 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7af8a2e7
[DEBUG] 2021-04-12 16:27:19.866 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@750e9b82
[DEBUG] 2021-04-12 16:27:19.867 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@750e9b82
[DEBUG] 2021-04-12 16:27:19.868 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@750e9b82
[DEBUG] 2021-04-12 16:27:19.869 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@77c1a678
[DEBUG] 2021-04-12 16:27:19.869 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@77c1a678
[DEBUG] 2021-04-12 16:27:19.869 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@77c1a678
[DEBUG] 2021-04-12 16:27:19.871 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4df22540
[DEBUG] 2021-04-12 16:27:19.871 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4df22540
[DEBUG] 2021-04-12 16:27:19.872 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@307e2f87
[DEBUG] 2021-04-12 16:27:19.872 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@307e2f87
[DEBUG] 2021-04-12 16:27:19.873 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6beae23b
[DEBUG] 2021-04-12 16:27:19.873 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6beae23b
[DEBUG] 2021-04-12 16:27:19.874 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@43b528b7
[DEBUG] 2021-04-12 16:27:19.875 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@57b26406
[DEBUG] 2021-04-12 16:27:19.885 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3b353554
[DEBUG] 2021-04-12 16:27:19.905 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b353554
[DEBUG] 2021-04-12 16:27:19.906 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@41d96113
[DEBUG] 2021-04-12 16:27:19.907 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@41d96113
[DEBUG] 2021-04-12 16:27:19.911 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@23614a23
[DEBUG] 2021-04-12 16:27:19.912 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@23614a23
[DEBUG] 2021-04-12 16:27:19.914 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@645e711
[DEBUG] 2021-04-12 16:27:19.914 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@645e711
[DEBUG] 2021-04-12 16:27:19.916 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@669eea2d
[DEBUG] 2021-04-12 16:27:19.917 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@669eea2d
[DEBUG] 2021-04-12 16:27:19.918 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2ad12a42
[DEBUG] 2021-04-12 16:27:19.918 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2ad12a42
[DEBUG] 2021-04-12 16:27:19.920 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46697064
[DEBUG] 2021-04-12 16:27:19.920 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46697064
[DEBUG] 2021-04-12 16:27:19.922 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1ac7deea
[DEBUG] 2021-04-12 16:27:19.922 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1ac7deea
[DEBUG] 2021-04-12 16:27:19.924 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@393a82fe
[DEBUG] 2021-04-12 16:27:19.925 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@393a82fe
[DEBUG] 2021-04-12 16:27:19.927 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@20221f68
[DEBUG] 2021-04-12 16:27:19.927 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@20221f68
[DEBUG] 2021-04-12 16:27:19.928 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@11b4ad49
[DEBUG] 2021-04-12 16:27:19.929 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@11b4ad49
[DEBUG] 2021-04-12 16:27:19.930 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f318314
[DEBUG] 2021-04-12 16:27:19.931 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f318314
[DEBUG] 2021-04-12 16:27:19.931 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f318314
[DEBUG] 2021-04-12 16:27:19.933 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@526bf25a
[DEBUG] 2021-04-12 16:27:19.935 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@387b541
[DEBUG] 2021-04-12 16:27:19.936 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@387b541
[DEBUG] 2021-04-12 16:27:19.937 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@387b541
[DEBUG] 2021-04-12 16:27:19.938 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5e8864ac
[DEBUG] 2021-04-12 16:27:19.939 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@42deaeea
[DEBUG] 2021-04-12 16:27:19.939 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@42deaeea
[DEBUG] 2021-04-12 16:27:19.940 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2b74075c
[DEBUG] 2021-04-12 16:27:19.941 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2b74075c
[DEBUG] 2021-04-12 16:27:19.952 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7975f559
[DEBUG] 2021-04-12 16:27:19.952 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7975f559
[DEBUG] 2021-04-12 16:27:19.955 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6aad25e5
[DEBUG] 2021-04-12 16:27:19.955 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6aad25e5
[DEBUG] 2021-04-12 16:27:19.956 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@753cf5c9
[DEBUG] 2021-04-12 16:27:19.957 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@753cf5c9
[DEBUG] 2021-04-12 16:27:19.958 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@319e754f
[DEBUG] 2021-04-12 16:27:19.959 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4c90bff0
[DEBUG] 2021-04-12 16:27:19.959 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4c90bff0
[DEBUG] 2021-04-12 16:27:19.959 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4c90bff0
[DEBUG] 2021-04-12 16:27:19.961 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@526ec4a2
[DEBUG] 2021-04-12 16:27:19.961 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@526ec4a2
[DEBUG] 2021-04-12 16:27:19.961 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@526ec4a2
[DEBUG] 2021-04-12 16:27:19.962 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f37ca19
[DEBUG] 2021-04-12 16:27:19.964 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@71628552
[DEBUG] 2021-04-12 16:27:19.965 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@62bab48b
[DEBUG] 2021-04-12 16:27:19.967 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@62bab48b
[DEBUG] 2021-04-12 16:27:19.967 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@62bab48b
[DEBUG] 2021-04-12 16:27:19.968 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@34a486c4
[DEBUG] 2021-04-12 16:27:19.969 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@34a486c4
[DEBUG] 2021-04-12 16:27:19.969 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@34a486c4
[DEBUG] 2021-04-12 16:27:19.969 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@176878d1
[DEBUG] 2021-04-12 16:27:19.970 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@593ab073
[DEBUG] 2021-04-12 16:27:19.972 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5ec2cdde
[DEBUG] 2021-04-12 16:27:19.972 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5ec2cdde
[DEBUG] 2021-04-12 16:27:19.973 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@757b5c42
[DEBUG] 2021-04-12 16:27:19.975 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@40b51294
[DEBUG] 2021-04-12 16:27:19.976 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@40b51294
[DEBUG] 2021-04-12 16:27:19.978 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@24d854ac
[DEBUG] 2021-04-12 16:27:19.978 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@24d854ac
[DEBUG] 2021-04-12 16:27:19.979 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@16529b51
[DEBUG] 2021-04-12 16:27:19.981 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@59db8e97
[DEBUG] 2021-04-12 16:27:19.983 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7924983c
[DEBUG] 2021-04-12 16:27:19.988 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1dbe8984
[DEBUG] 2021-04-12 16:27:19.988 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1dbe8984
[DEBUG] 2021-04-12 16:27:19.989 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1bb4ffe4
[DEBUG] 2021-04-12 16:27:19.990 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3b55953d
[DEBUG] 2021-04-12 16:27:19.990 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4e2a8478
[DEBUG] 2021-04-12 16:27:19.990 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@41de3c6b
[DEBUG] 2021-04-12 16:27:19.993 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7da9a06b
[DEBUG] 2021-04-12 16:27:19.996 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6a422e9e
[DEBUG] 2021-04-12 16:27:19.996 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@70516eea
[DEBUG] 2021-04-12 16:27:19.997 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@40dc39ef
[DEBUG] 2021-04-12 16:27:20.073 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 16:27:20.074 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 16:27:20.075 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:27:20.078 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:27:20.080 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 16:27:20.081 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 16:27:20.082 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 16:27:20.084 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:27:20.085 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 16:27:20.086 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 16:27:20.087 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 16:27:20.087 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 16:27:20.087 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:27:20.088 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 16:27:20.100 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 16:27:20.101 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 16:27:20.101 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 16:27:20.384 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 16:27:21.101 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:27:21.101 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:27:21.101 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 16:27:21.148 [http-nio-8080-exec-10] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 16:27:21.181 [http-nio-8080-exec-10] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 16:27:21.238 [http-nio-8080-exec-10] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 16:27:21.301 [http-nio-8080-exec-10] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 16:27:21.312 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@166b20b3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@201f797]
[DEBUG] 2021-04-12 16:27:21.390 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 16:27:21.432 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 16:27:21.443 [http-nio-8080-exec-10] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 16:27:21.449 [http-nio-8080-exec-10] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 16:27:21.499 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:27:21.505 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 16:27:21.507 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 16:27:21.511 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 16:27:21.515 [http-nio-8080-exec-10] PropertyBinder - Building property id
[DEBUG] 2021-04-12 16:27:21.522 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 16:27:21.524 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:27:21.525 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 16:27:21.526 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 16:27:21.526 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 16:27:21.526 [http-nio-8080-exec-10] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 16:27:21.527 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:27:21.527 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 16:27:21.527 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 16:27:21.527 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 16:27:21.527 [http-nio-8080-exec-10] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 16:27:21.528 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:27:21.528 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 16:27:21.528 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 16:27:21.529 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 16:27:21.529 [http-nio-8080-exec-10] PropertyBinder - Building property media
[DEBUG] 2021-04-12 16:27:21.534 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:27:21.534 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 16:27:21.534 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 16:27:21.534 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 16:27:21.535 [http-nio-8080-exec-10] PropertyBinder - Building property name
[DEBUG] 2021-04-12 16:27:21.535 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:27:21.535 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 16:27:21.535 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 16:27:21.535 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 16:27:21.591 [http-nio-8080-exec-10] PropertyBinder - Building property species
[DEBUG] 2021-04-12 16:27:21.600 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 16:27:21.601 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 16:27:21.601 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 16:27:21.601 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 16:27:21.601 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 16:27:21.601 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 16:27:21.603 [http-nio-8080-exec-10] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 16:27:21.673 [http-nio-8080-exec-10] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 16:27:21.675 [http-nio-8080-exec-10] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 16:27:21.675 [http-nio-8080-exec-10] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 16:27:21.675 [http-nio-8080-exec-10] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 16:27:21.675 [http-nio-8080-exec-10] Settings - Statistics: disabled
[DEBUG] 2021-04-12 16:27:21.675 [http-nio-8080-exec-10] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 16:27:21.675 [http-nio-8080-exec-10] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 16:27:21.675 [http-nio-8080-exec-10] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 16:27:21.675 [http-nio-8080-exec-10] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 16:27:21.675 [http-nio-8080-exec-10] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 16:27:21.675 [http-nio-8080-exec-10] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 16:27:21.675 [http-nio-8080-exec-10] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 16:27:21.676 [http-nio-8080-exec-10] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 16:27:21.676 [http-nio-8080-exec-10] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 16:27:21.676 [http-nio-8080-exec-10] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 16:27:21.676 [http-nio-8080-exec-10] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 16:27:21.676 [http-nio-8080-exec-10] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 16:27:21.676 [http-nio-8080-exec-10] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 16:27:21.676 [http-nio-8080-exec-10] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 16:27:21.678 [http-nio-8080-exec-10] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 16:27:21.678 [http-nio-8080-exec-10] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 16:27:21.678 [http-nio-8080-exec-10] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 16:27:21.678 [http-nio-8080-exec-10] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 16:27:21.678 [http-nio-8080-exec-10] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 16:27:21.678 [http-nio-8080-exec-10] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 16:27:21.678 [http-nio-8080-exec-10] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 16:27:21.678 [http-nio-8080-exec-10] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 16:27:21.678 [http-nio-8080-exec-10] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 16:27:21.678 [http-nio-8080-exec-10] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 16:27:21.678 [http-nio-8080-exec-10] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 16:27:21.678 [http-nio-8080-exec-10] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 16:27:21.678 [http-nio-8080-exec-10] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 16:27:21.678 [http-nio-8080-exec-10] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 16:27:21.678 [http-nio-8080-exec-10] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 16:27:21.679 [http-nio-8080-exec-10] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 16:27:21.679 [http-nio-8080-exec-10] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 16:27:21.679 [http-nio-8080-exec-10] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 16:27:21.679 [http-nio-8080-exec-10] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 16:27:21.679 [http-nio-8080-exec-10] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 16:27:21.790 [http-nio-8080-exec-10] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 16:27:21.817 [http-nio-8080-exec-10] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 16:27:21.817 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, org.apache.activemq.broker.jmx.createConnector=false, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=13.0.1+9, user.name=Walker, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, derby.system.home=C:\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=13.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=Jun 30 2020 21:49:10 UTC, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, tomee.version=7.1.4, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.path=C:\tomcat\bin\bootstrap.jar;C:\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.57.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/tomcat/lib","C:/tomcat/lib/*.jar","C:\tomcat/lib","C:\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=6.3, openejb.version=7.1.4, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=C:\tomcat, user.dir=C:\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@331a672, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0, authconfigprovider.factory=false}
[DEBUG] 2021-04-12 16:27:21.839 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:27:21.840 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:27:21.843 [http-nio-8080-exec-10] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 16:27:21.849 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 16:27:21.849 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@166b20b3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@23a26639]
[DEBUG] 2021-04-12 16:27:21.931 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:27:21.931 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:27:21.963 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:27:21.963 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:27:22.317 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 16:27:22.318 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 16:27:22.318 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 16:27:22.318 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:27:22.318 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 16:27:22.318 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 16:27:22.318 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:27:22.353 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6494d6ef]
[DEBUG] 2021-04-12 16:27:22.355 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:27:22.355 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:27:22.355 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:27:22.355 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:27:22.355 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:27:22.355 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:27:22.370 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:27:22.375 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:27:22.378 [http-nio-8080-exec-10] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:27:22.378 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42faeee1]
[DEBUG] 2021-04-12 16:27:22.378 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:27:22.378 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:27:22.378 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:27:22.378 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:27:22.378 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:27:22.378 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:27:22.378 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:27:22.379 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:27:22.379 [http-nio-8080-exec-10] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:27:22.399 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:27:22.399 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:27:22.442 [http-nio-8080-exec-10] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 16:27:22.443 [http-nio-8080-exec-10] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 16:27:22.443 [http-nio-8080-exec-10] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 16:27:22.472 [http-nio-8080-exec-10] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 16:27:22.472 [http-nio-8080-exec-10] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 16:27:22.474 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 16:27:22.474 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 16:27:22.477 [http-nio-8080-exec-10] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@71bdab18
[DEBUG] 2021-04-12 16:27:22.479 [http-nio-8080-exec-10] SessionFactoryRegistry - Registering SessionFactory: 762ab2cc-c9b9-4e2e-bbf3-15b642bb44e0 (<unnamed>)
[DEBUG] 2021-04-12 16:27:22.479 [http-nio-8080-exec-10] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 16:27:22.616 [http-nio-8080-exec-10] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 16:27:22.648 [http-nio-8080-exec-10] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:27:22.672 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:27:22.672 [http-nio-8080-exec-10] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:27:22.686 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:27:22.687 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:27:22.687 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:27:22.687 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:27:22.687 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:27:22.687 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:27:22.687 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:27:22.687 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 16:27:22.687 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:27:22.687 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:27:22.687 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:27:22.690 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:27:22.691 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:27:22.691 [http-nio-8080-exec-10] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 16:27:22.691 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:27:25.279 [http-nio-8080-exec-3] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:27:25.299 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:27:25.299 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:27:25.299 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:27:25.299 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:27:25.299 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:27:25.299 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:27:25.299 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:27:25.299 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:27:25.300 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:27:25.300 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 16:27:25.300 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:27:25.300 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:27:25.300 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:27:25.300 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:27:25.300 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:27:25.300 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 16:27:25.300 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:31:47.541 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 16:31:47.571 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 16:31:47.577 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 16:31:47.691 [http-nio-8080-exec-9] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 16:31:47.694 [http-nio-8080-exec-9] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 16:31:47.915 [http-nio-8080-exec-9] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 16:31:47.916 [http-nio-8080-exec-9] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 16:31:47.962 [http-nio-8080-exec-9] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 16:31:48.370 [http-nio-8080-exec-9] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 16:31:48.396 [http-nio-8080-exec-9] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 16:31:48.397 [http-nio-8080-exec-9] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 16:31:48.426 [http-nio-8080-exec-9] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 16:31:48.477 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7176a3b1
[DEBUG] 2021-04-12 16:31:48.477 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7176a3b1
[DEBUG] 2021-04-12 16:31:48.477 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7176a3b1
[DEBUG] 2021-04-12 16:31:48.478 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3aaa724b
[DEBUG] 2021-04-12 16:31:48.479 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37f8270b
[DEBUG] 2021-04-12 16:31:48.479 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2be69f51
[DEBUG] 2021-04-12 16:31:48.481 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@40dfd84f
[DEBUG] 2021-04-12 16:31:48.481 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@40dfd84f
[DEBUG] 2021-04-12 16:31:48.481 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@40dfd84f
[DEBUG] 2021-04-12 16:31:48.483 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6dd9cddc
[DEBUG] 2021-04-12 16:31:48.483 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6dd9cddc
[DEBUG] 2021-04-12 16:31:48.483 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6dd9cddc
[DEBUG] 2021-04-12 16:31:48.485 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2a8787e0
[DEBUG] 2021-04-12 16:31:48.486 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2a8787e0
[DEBUG] 2021-04-12 16:31:48.486 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2a8787e0
[DEBUG] 2021-04-12 16:31:48.487 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@257edbca
[DEBUG] 2021-04-12 16:31:48.487 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@257edbca
[DEBUG] 2021-04-12 16:31:48.488 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@257edbca
[DEBUG] 2021-04-12 16:31:48.489 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@95d463b
[DEBUG] 2021-04-12 16:31:48.489 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@95d463b
[DEBUG] 2021-04-12 16:31:48.489 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@95d463b
[DEBUG] 2021-04-12 16:31:48.491 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4f9383b4
[DEBUG] 2021-04-12 16:31:48.491 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4f9383b4
[DEBUG] 2021-04-12 16:31:48.492 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4f9383b4
[DEBUG] 2021-04-12 16:31:48.493 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7888644e
[DEBUG] 2021-04-12 16:31:48.494 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7888644e
[DEBUG] 2021-04-12 16:31:48.494 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7888644e
[DEBUG] 2021-04-12 16:31:48.495 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5e20b06e
[DEBUG] 2021-04-12 16:31:48.495 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5e20b06e
[DEBUG] 2021-04-12 16:31:48.497 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@537b042e
[DEBUG] 2021-04-12 16:31:48.497 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@537b042e
[DEBUG] 2021-04-12 16:31:48.499 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@494b9e68
[DEBUG] 2021-04-12 16:31:48.499 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@494b9e68
[DEBUG] 2021-04-12 16:31:48.500 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4ee1a6e
[DEBUG] 2021-04-12 16:31:48.501 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@73b3d0a7
[DEBUG] 2021-04-12 16:31:48.502 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3a2b4835
[DEBUG] 2021-04-12 16:31:48.510 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3a2b4835
[DEBUG] 2021-04-12 16:31:48.512 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1f4b76c0
[DEBUG] 2021-04-12 16:31:48.513 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1f4b76c0
[DEBUG] 2021-04-12 16:31:48.517 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@457e5ce1
[DEBUG] 2021-04-12 16:31:48.517 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@457e5ce1
[DEBUG] 2021-04-12 16:31:48.519 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@50938ce9
[DEBUG] 2021-04-12 16:31:48.519 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@50938ce9
[DEBUG] 2021-04-12 16:31:48.521 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@57bff5ea
[DEBUG] 2021-04-12 16:31:48.521 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@57bff5ea
[DEBUG] 2021-04-12 16:31:48.523 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@29711bf5
[DEBUG] 2021-04-12 16:31:48.523 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@29711bf5
[DEBUG] 2021-04-12 16:31:48.525 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2d40c909
[DEBUG] 2021-04-12 16:31:48.525 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2d40c909
[DEBUG] 2021-04-12 16:31:48.526 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7c897833
[DEBUG] 2021-04-12 16:31:48.526 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7c897833
[DEBUG] 2021-04-12 16:31:48.528 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@596cd13e
[DEBUG] 2021-04-12 16:31:48.528 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@596cd13e
[DEBUG] 2021-04-12 16:31:48.530 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@60da588b
[DEBUG] 2021-04-12 16:31:48.530 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@60da588b
[DEBUG] 2021-04-12 16:31:48.531 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@694ae212
[DEBUG] 2021-04-12 16:31:48.531 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@694ae212
[DEBUG] 2021-04-12 16:31:48.533 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@e5266a2
[DEBUG] 2021-04-12 16:31:48.533 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@e5266a2
[DEBUG] 2021-04-12 16:31:48.533 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@e5266a2
[DEBUG] 2021-04-12 16:31:48.536 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@483ac5f6
[DEBUG] 2021-04-12 16:31:48.537 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2e938ccd
[DEBUG] 2021-04-12 16:31:48.537 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2e938ccd
[DEBUG] 2021-04-12 16:31:48.539 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2e938ccd
[DEBUG] 2021-04-12 16:31:48.540 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3b16656d
[DEBUG] 2021-04-12 16:31:48.541 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@63d72d09
[DEBUG] 2021-04-12 16:31:48.542 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@63d72d09
[DEBUG] 2021-04-12 16:31:48.544 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6db11fbe
[DEBUG] 2021-04-12 16:31:48.558 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6db11fbe
[DEBUG] 2021-04-12 16:31:48.565 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2792d8eb
[DEBUG] 2021-04-12 16:31:48.565 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2792d8eb
[DEBUG] 2021-04-12 16:31:48.566 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@29fcbdb0
[DEBUG] 2021-04-12 16:31:48.566 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@29fcbdb0
[DEBUG] 2021-04-12 16:31:48.568 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7509cac1
[DEBUG] 2021-04-12 16:31:48.568 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7509cac1
[DEBUG] 2021-04-12 16:31:48.569 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6136db3
[DEBUG] 2021-04-12 16:31:48.570 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@16aa3f5e
[DEBUG] 2021-04-12 16:31:48.570 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@16aa3f5e
[DEBUG] 2021-04-12 16:31:48.570 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@16aa3f5e
[DEBUG] 2021-04-12 16:31:48.572 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@50531074
[DEBUG] 2021-04-12 16:31:48.572 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@50531074
[DEBUG] 2021-04-12 16:31:48.572 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@50531074
[DEBUG] 2021-04-12 16:31:48.574 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a81e43
[DEBUG] 2021-04-12 16:31:48.574 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5662e2d8
[DEBUG] 2021-04-12 16:31:48.576 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@16819029
[DEBUG] 2021-04-12 16:31:48.576 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@16819029
[DEBUG] 2021-04-12 16:31:48.576 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@16819029
[DEBUG] 2021-04-12 16:31:48.577 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5e8f61e6
[DEBUG] 2021-04-12 16:31:48.577 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5e8f61e6
[DEBUG] 2021-04-12 16:31:48.577 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5e8f61e6
[DEBUG] 2021-04-12 16:31:48.578 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4a98107a
[DEBUG] 2021-04-12 16:31:48.579 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@116393c7
[DEBUG] 2021-04-12 16:31:48.580 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@59553a4e
[DEBUG] 2021-04-12 16:31:48.580 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59553a4e
[DEBUG] 2021-04-12 16:31:48.581 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@356e4c6
[DEBUG] 2021-04-12 16:31:48.583 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7dcdfc8e
[DEBUG] 2021-04-12 16:31:48.583 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7dcdfc8e
[DEBUG] 2021-04-12 16:31:48.585 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6e7e1535
[DEBUG] 2021-04-12 16:31:48.585 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6e7e1535
[DEBUG] 2021-04-12 16:31:48.585 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@629dfb89
[DEBUG] 2021-04-12 16:31:48.586 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@10733828
[DEBUG] 2021-04-12 16:31:48.588 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@773a4149
[DEBUG] 2021-04-12 16:31:48.592 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@58b328af
[DEBUG] 2021-04-12 16:31:48.592 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@58b328af
[DEBUG] 2021-04-12 16:31:48.593 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@201d4ea0
[DEBUG] 2021-04-12 16:31:48.593 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@af41ee0
[DEBUG] 2021-04-12 16:31:48.593 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7e387111
[DEBUG] 2021-04-12 16:31:48.593 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4807c388
[DEBUG] 2021-04-12 16:31:48.594 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2a5ec66
[DEBUG] 2021-04-12 16:31:48.594 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@288ce1cc
[DEBUG] 2021-04-12 16:31:48.594 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1501bd35
[DEBUG] 2021-04-12 16:31:48.594 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@636c379e
[DEBUG] 2021-04-12 16:31:48.636 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 16:31:48.637 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 16:31:48.638 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:31:48.639 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:31:48.641 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 16:31:48.642 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 16:31:48.643 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 16:31:48.644 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:31:48.645 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 16:31:48.646 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 16:31:48.647 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 16:31:48.647 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 16:31:48.647 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:31:48.648 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 16:31:48.659 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 16:31:48.659 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 16:31:48.659 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 16:31:48.938 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 16:31:49.501 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:31:49.501 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:31:49.501 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 16:31:49.591 [http-nio-8080-exec-9] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 16:31:49.624 [http-nio-8080-exec-9] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 16:31:49.662 [http-nio-8080-exec-9] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 16:31:49.712 [http-nio-8080-exec-9] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 16:31:49.718 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1657f207] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48699ce2]
[DEBUG] 2021-04-12 16:31:49.787 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 16:31:49.821 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 16:31:49.832 [http-nio-8080-exec-9] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 16:31:49.836 [http-nio-8080-exec-9] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 16:31:49.880 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:31:49.885 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 16:31:49.887 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 16:31:49.896 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 16:31:49.899 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2021-04-12 16:31:49.908 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 16:31:49.915 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:31:49.917 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 16:31:49.917 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 16:31:49.918 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 16:31:49.918 [http-nio-8080-exec-9] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 16:31:49.919 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:31:49.919 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 16:31:49.919 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 16:31:49.919 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 16:31:49.919 [http-nio-8080-exec-9] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 16:31:49.920 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:31:49.920 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 16:31:49.920 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 16:31:49.920 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 16:31:49.920 [http-nio-8080-exec-9] PropertyBinder - Building property media
[DEBUG] 2021-04-12 16:31:49.922 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:31:49.924 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 16:31:49.924 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 16:31:49.925 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 16:31:49.925 [http-nio-8080-exec-9] PropertyBinder - Building property name
[DEBUG] 2021-04-12 16:31:49.925 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:31:49.925 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 16:31:49.926 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 16:31:49.926 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 16:31:49.926 [http-nio-8080-exec-9] PropertyBinder - Building property species
[DEBUG] 2021-04-12 16:31:49.930 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 16:31:49.930 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 16:31:49.930 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 16:31:49.930 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 16:31:49.931 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 16:31:49.931 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 16:31:49.932 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 16:31:49.983 [http-nio-8080-exec-9] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 16:31:49.984 [http-nio-8080-exec-9] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 16:31:49.984 [http-nio-8080-exec-9] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 16:31:49.984 [http-nio-8080-exec-9] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 16:31:49.985 [http-nio-8080-exec-9] Settings - Statistics: disabled
[DEBUG] 2021-04-12 16:31:49.985 [http-nio-8080-exec-9] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 16:31:49.985 [http-nio-8080-exec-9] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 16:31:49.985 [http-nio-8080-exec-9] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 16:31:49.985 [http-nio-8080-exec-9] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 16:31:49.985 [http-nio-8080-exec-9] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 16:31:49.985 [http-nio-8080-exec-9] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 16:31:49.985 [http-nio-8080-exec-9] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 16:31:49.985 [http-nio-8080-exec-9] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 16:31:49.985 [http-nio-8080-exec-9] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 16:31:49.985 [http-nio-8080-exec-9] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 16:31:49.985 [http-nio-8080-exec-9] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 16:31:49.985 [http-nio-8080-exec-9] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 16:31:49.985 [http-nio-8080-exec-9] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 16:31:49.985 [http-nio-8080-exec-9] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 16:31:49.986 [http-nio-8080-exec-9] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 16:31:49.986 [http-nio-8080-exec-9] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 16:31:49.986 [http-nio-8080-exec-9] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 16:31:49.986 [http-nio-8080-exec-9] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 16:31:49.986 [http-nio-8080-exec-9] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 16:31:49.986 [http-nio-8080-exec-9] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 16:31:49.986 [http-nio-8080-exec-9] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 16:31:49.986 [http-nio-8080-exec-9] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 16:31:49.986 [http-nio-8080-exec-9] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 16:31:49.986 [http-nio-8080-exec-9] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 16:31:49.986 [http-nio-8080-exec-9] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 16:31:49.986 [http-nio-8080-exec-9] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 16:31:49.986 [http-nio-8080-exec-9] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 16:31:49.986 [http-nio-8080-exec-9] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 16:31:49.986 [http-nio-8080-exec-9] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 16:31:49.986 [http-nio-8080-exec-9] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 16:31:49.986 [http-nio-8080-exec-9] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 16:31:49.986 [http-nio-8080-exec-9] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 16:31:49.986 [http-nio-8080-exec-9] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 16:31:49.986 [http-nio-8080-exec-9] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 16:31:50.096 [http-nio-8080-exec-9] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 16:31:50.121 [http-nio-8080-exec-9] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 16:31:50.121 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, org.apache.activemq.broker.jmx.createConnector=false, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=13.0.1+9, user.name=Walker, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, derby.system.home=C:\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=13.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=Jun 30 2020 21:49:10 UTC, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, tomee.version=7.1.4, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.path=C:\tomcat\bin\bootstrap.jar;C:\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.57.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/tomcat/lib","C:/tomcat/lib/*.jar","C:\tomcat/lib","C:\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=6.3, openejb.version=7.1.4, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=C:\tomcat, user.dir=C:\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@aaa3473, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0, authconfigprovider.factory=false}
[DEBUG] 2021-04-12 16:31:50.152 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:31:50.152 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:31:50.159 [http-nio-8080-exec-9] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 16:31:50.159 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 16:31:50.159 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1657f207] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@542e0792]
[DEBUG] 2021-04-12 16:31:50.218 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:31:50.219 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:31:50.239 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:31:50.240 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:31:50.532 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 16:31:50.532 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 16:31:50.532 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 16:31:50.532 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:31:50.532 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 16:31:50.532 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 16:31:50.532 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:31:50.584 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c3fab48]
[DEBUG] 2021-04-12 16:31:50.586 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:31:50.586 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:31:50.586 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:31:50.587 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:31:50.587 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:31:50.587 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:31:50.605 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:31:50.610 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:31:50.612 [http-nio-8080-exec-9] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:31:50.613 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d786bec]
[DEBUG] 2021-04-12 16:31:50.613 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:31:50.613 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:31:50.613 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:31:50.613 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:31:50.613 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:31:50.613 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:31:50.613 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:31:50.613 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:31:50.613 [http-nio-8080-exec-9] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:31:50.630 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:31:50.630 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:31:50.670 [http-nio-8080-exec-9] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 16:31:50.671 [http-nio-8080-exec-9] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 16:31:50.671 [http-nio-8080-exec-9] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 16:31:50.683 [http-nio-8080-exec-9] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 16:31:50.683 [http-nio-8080-exec-9] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 16:31:50.684 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 16:31:50.685 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 16:31:50.688 [http-nio-8080-exec-9] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4299bcd6
[DEBUG] 2021-04-12 16:31:50.690 [http-nio-8080-exec-9] SessionFactoryRegistry - Registering SessionFactory: b199fcb4-a9ab-4c5c-8b9c-b9f8bc1302ea (<unnamed>)
[DEBUG] 2021-04-12 16:31:50.690 [http-nio-8080-exec-9] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 16:31:50.811 [http-nio-8080-exec-9] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 16:31:50.836 [http-nio-8080-exec-9] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:31:50.865 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:31:50.865 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:31:50.881 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:31:50.882 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:31:50.882 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:31:50.882 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:31:50.882 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:31:50.882 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:31:50.882 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:31:50.884 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 16:31:50.885 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:31:50.885 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:31:50.885 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:31:50.886 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:31:50.887 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:31:50.888 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 16:31:50.888 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:36:50.470 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 16:36:50.473 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 16:36:50.481 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 16:36:50.672 [http-nio-8080-exec-1] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 16:36:50.677 [http-nio-8080-exec-1] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 16:36:50.878 [http-nio-8080-exec-1] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 16:36:50.879 [http-nio-8080-exec-1] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 16:36:50.907 [http-nio-8080-exec-1] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 16:36:51.315 [http-nio-8080-exec-1] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 16:36:51.344 [http-nio-8080-exec-1] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 16:36:51.345 [http-nio-8080-exec-1] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 16:36:51.376 [http-nio-8080-exec-1] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 16:36:51.427 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7ced93d7
[DEBUG] 2021-04-12 16:36:51.428 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7ced93d7
[DEBUG] 2021-04-12 16:36:51.428 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7ced93d7
[DEBUG] 2021-04-12 16:36:51.429 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48e9e7d3
[DEBUG] 2021-04-12 16:36:51.430 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@278d65c4
[DEBUG] 2021-04-12 16:36:51.431 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@31877b74
[DEBUG] 2021-04-12 16:36:51.432 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@26e9bd76
[DEBUG] 2021-04-12 16:36:51.432 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@26e9bd76
[DEBUG] 2021-04-12 16:36:51.432 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@26e9bd76
[DEBUG] 2021-04-12 16:36:51.434 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@66ea9d
[DEBUG] 2021-04-12 16:36:51.435 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@66ea9d
[DEBUG] 2021-04-12 16:36:51.435 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66ea9d
[DEBUG] 2021-04-12 16:36:51.437 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2ed910ef
[DEBUG] 2021-04-12 16:36:51.437 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2ed910ef
[DEBUG] 2021-04-12 16:36:51.437 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2ed910ef
[DEBUG] 2021-04-12 16:36:51.438 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@286c11a3
[DEBUG] 2021-04-12 16:36:51.439 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@286c11a3
[DEBUG] 2021-04-12 16:36:51.439 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@286c11a3
[DEBUG] 2021-04-12 16:36:51.440 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@530ff330
[DEBUG] 2021-04-12 16:36:51.440 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@530ff330
[DEBUG] 2021-04-12 16:36:51.441 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@530ff330
[DEBUG] 2021-04-12 16:36:51.442 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@bcb6426
[DEBUG] 2021-04-12 16:36:51.442 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@bcb6426
[DEBUG] 2021-04-12 16:36:51.444 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@bcb6426
[DEBUG] 2021-04-12 16:36:51.445 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@136a5e3
[DEBUG] 2021-04-12 16:36:51.446 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@136a5e3
[DEBUG] 2021-04-12 16:36:51.446 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@136a5e3
[DEBUG] 2021-04-12 16:36:51.447 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3c56e362
[DEBUG] 2021-04-12 16:36:51.447 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3c56e362
[DEBUG] 2021-04-12 16:36:51.448 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7e99bda9
[DEBUG] 2021-04-12 16:36:51.449 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7e99bda9
[DEBUG] 2021-04-12 16:36:51.451 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@cc4ed03
[DEBUG] 2021-04-12 16:36:51.451 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@cc4ed03
[DEBUG] 2021-04-12 16:36:51.452 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1988aed1
[DEBUG] 2021-04-12 16:36:51.452 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@763dd3ec
[DEBUG] 2021-04-12 16:36:51.454 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2d5d55aa
[DEBUG] 2021-04-12 16:36:51.454 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2d5d55aa
[DEBUG] 2021-04-12 16:36:51.456 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4e3c6e53
[DEBUG] 2021-04-12 16:36:51.456 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4e3c6e53
[DEBUG] 2021-04-12 16:36:51.461 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@23f99b59
[DEBUG] 2021-04-12 16:36:51.461 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@23f99b59
[DEBUG] 2021-04-12 16:36:51.471 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@702a3f8f
[DEBUG] 2021-04-12 16:36:51.471 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@702a3f8f
[DEBUG] 2021-04-12 16:36:51.473 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2c9418ad
[DEBUG] 2021-04-12 16:36:51.474 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2c9418ad
[DEBUG] 2021-04-12 16:36:51.475 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ceeebe1
[DEBUG] 2021-04-12 16:36:51.475 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ceeebe1
[DEBUG] 2021-04-12 16:36:51.477 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@47c25f94
[DEBUG] 2021-04-12 16:36:51.477 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@47c25f94
[DEBUG] 2021-04-12 16:36:51.479 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@450e73b9
[DEBUG] 2021-04-12 16:36:51.480 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@450e73b9
[DEBUG] 2021-04-12 16:36:51.481 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24bd9a9a
[DEBUG] 2021-04-12 16:36:51.482 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24bd9a9a
[DEBUG] 2021-04-12 16:36:51.483 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@26510435
[DEBUG] 2021-04-12 16:36:51.483 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@26510435
[DEBUG] 2021-04-12 16:36:51.485 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2031cf65
[DEBUG] 2021-04-12 16:36:51.485 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2031cf65
[DEBUG] 2021-04-12 16:36:51.486 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@12b8aca
[DEBUG] 2021-04-12 16:36:51.487 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12b8aca
[DEBUG] 2021-04-12 16:36:51.487 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12b8aca
[DEBUG] 2021-04-12 16:36:51.489 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6bfdae9c
[DEBUG] 2021-04-12 16:36:51.490 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@62e9a31d
[DEBUG] 2021-04-12 16:36:51.491 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@62e9a31d
[DEBUG] 2021-04-12 16:36:51.491 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@62e9a31d
[DEBUG] 2021-04-12 16:36:51.492 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@31677131
[DEBUG] 2021-04-12 16:36:51.493 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2dbdfd5c
[DEBUG] 2021-04-12 16:36:51.493 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2dbdfd5c
[DEBUG] 2021-04-12 16:36:51.494 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@19546cf9
[DEBUG] 2021-04-12 16:36:51.495 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@19546cf9
[DEBUG] 2021-04-12 16:36:51.496 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7bfe218
[DEBUG] 2021-04-12 16:36:51.496 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7bfe218
[DEBUG] 2021-04-12 16:36:51.497 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@866dbee
[DEBUG] 2021-04-12 16:36:51.497 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@866dbee
[DEBUG] 2021-04-12 16:36:51.498 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5694832
[DEBUG] 2021-04-12 16:36:51.498 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5694832
[DEBUG] 2021-04-12 16:36:51.499 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7d164850
[DEBUG] 2021-04-12 16:36:51.500 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@69c37f7a
[DEBUG] 2021-04-12 16:36:51.500 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@69c37f7a
[DEBUG] 2021-04-12 16:36:51.500 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@69c37f7a
[DEBUG] 2021-04-12 16:36:51.502 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@69ea525b
[DEBUG] 2021-04-12 16:36:51.502 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@69ea525b
[DEBUG] 2021-04-12 16:36:51.502 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@69ea525b
[DEBUG] 2021-04-12 16:36:51.503 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@25de71e3
[DEBUG] 2021-04-12 16:36:51.504 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@16490a2e
[DEBUG] 2021-04-12 16:36:51.507 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@34e67c2d
[DEBUG] 2021-04-12 16:36:51.507 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@34e67c2d
[DEBUG] 2021-04-12 16:36:51.509 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@34e67c2d
[DEBUG] 2021-04-12 16:36:51.510 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5d99f0a
[DEBUG] 2021-04-12 16:36:51.510 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5d99f0a
[DEBUG] 2021-04-12 16:36:51.510 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5d99f0a
[DEBUG] 2021-04-12 16:36:51.511 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3326279e
[DEBUG] 2021-04-12 16:36:51.511 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@66624b2f
[DEBUG] 2021-04-12 16:36:51.513 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@23ca2b68
[DEBUG] 2021-04-12 16:36:51.513 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@23ca2b68
[DEBUG] 2021-04-12 16:36:51.514 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4ea5a7a1
[DEBUG] 2021-04-12 16:36:51.515 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3247b897
[DEBUG] 2021-04-12 16:36:51.518 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3247b897
[DEBUG] 2021-04-12 16:36:51.520 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@96762c2
[DEBUG] 2021-04-12 16:36:51.520 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@96762c2
[DEBUG] 2021-04-12 16:36:51.521 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3e0bd5c2
[DEBUG] 2021-04-12 16:36:51.523 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74266dd9
[DEBUG] 2021-04-12 16:36:51.524 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@77f6c6a1
[DEBUG] 2021-04-12 16:36:51.528 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@47d7c2f4
[DEBUG] 2021-04-12 16:36:51.528 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@47d7c2f4
[DEBUG] 2021-04-12 16:36:51.529 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@676960b
[DEBUG] 2021-04-12 16:36:51.529 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4ff600f
[DEBUG] 2021-04-12 16:36:51.530 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2902794b
[DEBUG] 2021-04-12 16:36:51.530 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f907384
[DEBUG] 2021-04-12 16:36:51.530 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d647eb3
[DEBUG] 2021-04-12 16:36:51.530 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@62649a08
[DEBUG] 2021-04-12 16:36:51.530 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@58966f2e
[DEBUG] 2021-04-12 16:36:51.531 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@74362beb
[DEBUG] 2021-04-12 16:36:51.573 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 16:36:51.574 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 16:36:51.575 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:36:51.576 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:36:51.578 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 16:36:51.579 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 16:36:51.580 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 16:36:51.581 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:36:51.582 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 16:36:51.583 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 16:36:51.583 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 16:36:51.584 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 16:36:51.584 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:36:51.585 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 16:36:51.593 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 16:36:51.593 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 16:36:51.593 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 16:36:51.874 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 16:36:52.528 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:36:52.528 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:36:52.528 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 16:36:52.596 [http-nio-8080-exec-1] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 16:36:52.628 [http-nio-8080-exec-1] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 16:36:52.704 [http-nio-8080-exec-1] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 16:36:52.759 [http-nio-8080-exec-1] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 16:36:52.765 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11ad927d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@14fa2ade]
[DEBUG] 2021-04-12 16:36:52.836 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 16:36:52.876 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 16:36:52.886 [http-nio-8080-exec-1] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 16:36:52.890 [http-nio-8080-exec-1] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 16:36:52.929 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:36:52.934 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 16:36:52.937 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 16:36:52.949 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 16:36:52.952 [http-nio-8080-exec-1] PropertyBinder - Building property id
[DEBUG] 2021-04-12 16:36:52.960 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 16:36:52.962 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:36:52.964 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 16:36:52.964 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 16:36:52.964 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 16:36:52.964 [http-nio-8080-exec-1] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 16:36:52.965 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:36:52.965 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 16:36:52.965 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 16:36:52.965 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 16:36:52.965 [http-nio-8080-exec-1] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 16:36:52.969 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:36:52.969 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 16:36:52.970 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 16:36:52.970 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 16:36:52.970 [http-nio-8080-exec-1] PropertyBinder - Building property media
[DEBUG] 2021-04-12 16:36:52.972 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:36:52.975 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 16:36:52.975 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 16:36:52.975 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 16:36:52.975 [http-nio-8080-exec-1] PropertyBinder - Building property name
[DEBUG] 2021-04-12 16:36:52.975 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:36:52.976 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 16:36:52.976 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 16:36:52.976 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 16:36:52.976 [http-nio-8080-exec-1] PropertyBinder - Building property species
[DEBUG] 2021-04-12 16:36:52.989 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 16:36:52.989 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 16:36:52.989 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 16:36:52.989 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 16:36:52.989 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 16:36:52.989 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 16:36:52.990 [http-nio-8080-exec-1] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 16:36:53.040 [http-nio-8080-exec-1] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 16:36:53.041 [http-nio-8080-exec-1] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 16:36:53.041 [http-nio-8080-exec-1] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 16:36:53.041 [http-nio-8080-exec-1] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 16:36:53.041 [http-nio-8080-exec-1] Settings - Statistics: disabled
[DEBUG] 2021-04-12 16:36:53.041 [http-nio-8080-exec-1] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 16:36:53.041 [http-nio-8080-exec-1] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 16:36:53.041 [http-nio-8080-exec-1] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 16:36:53.041 [http-nio-8080-exec-1] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 16:36:53.041 [http-nio-8080-exec-1] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 16:36:53.041 [http-nio-8080-exec-1] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 16:36:53.041 [http-nio-8080-exec-1] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 16:36:53.041 [http-nio-8080-exec-1] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 16:36:53.041 [http-nio-8080-exec-1] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 16:36:53.041 [http-nio-8080-exec-1] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 16:36:53.041 [http-nio-8080-exec-1] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 16:36:53.041 [http-nio-8080-exec-1] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 16:36:53.041 [http-nio-8080-exec-1] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 16:36:53.041 [http-nio-8080-exec-1] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 16:36:53.042 [http-nio-8080-exec-1] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 16:36:53.042 [http-nio-8080-exec-1] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 16:36:53.042 [http-nio-8080-exec-1] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 16:36:53.042 [http-nio-8080-exec-1] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 16:36:53.042 [http-nio-8080-exec-1] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 16:36:53.042 [http-nio-8080-exec-1] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 16:36:53.042 [http-nio-8080-exec-1] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 16:36:53.042 [http-nio-8080-exec-1] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 16:36:53.042 [http-nio-8080-exec-1] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 16:36:53.042 [http-nio-8080-exec-1] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 16:36:53.042 [http-nio-8080-exec-1] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 16:36:53.042 [http-nio-8080-exec-1] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 16:36:53.042 [http-nio-8080-exec-1] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 16:36:53.042 [http-nio-8080-exec-1] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 16:36:53.042 [http-nio-8080-exec-1] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 16:36:53.042 [http-nio-8080-exec-1] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 16:36:53.042 [http-nio-8080-exec-1] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 16:36:53.042 [http-nio-8080-exec-1] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 16:36:53.042 [http-nio-8080-exec-1] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 16:36:53.042 [http-nio-8080-exec-1] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 16:36:53.153 [http-nio-8080-exec-1] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 16:36:53.193 [http-nio-8080-exec-1] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 16:36:53.193 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, org.apache.activemq.broker.jmx.createConnector=false, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=13.0.1+9, user.name=Walker, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, derby.system.home=C:\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=13.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=Jun 30 2020 21:49:10 UTC, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, tomee.version=7.1.4, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.path=C:\tomcat\bin\bootstrap.jar;C:\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.57.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/tomcat/lib","C:/tomcat/lib/*.jar","C:\tomcat/lib","C:\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=6.3, openejb.version=7.1.4, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=C:\tomcat, user.dir=C:\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1d2b50bc, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0, authconfigprovider.factory=false}
[DEBUG] 2021-04-12 16:36:53.223 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:36:53.223 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:36:53.226 [http-nio-8080-exec-1] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 16:36:53.229 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 16:36:53.230 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11ad927d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1ab33d05]
[DEBUG] 2021-04-12 16:36:53.287 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:36:53.287 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:36:53.308 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:36:53.308 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:36:53.598 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 16:36:53.598 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 16:36:53.598 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 16:36:53.598 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:36:53.598 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 16:36:53.598 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 16:36:53.599 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:36:53.659 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f697947]
[DEBUG] 2021-04-12 16:36:53.661 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:36:53.661 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:36:53.661 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:36:53.662 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:36:53.662 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:36:53.662 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:36:53.681 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:36:53.686 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:36:53.689 [http-nio-8080-exec-1] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:36:53.689 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20f0af5a]
[DEBUG] 2021-04-12 16:36:53.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:36:53.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:36:53.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:36:53.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:36:53.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:36:53.689 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:36:53.689 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:36:53.689 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:36:53.690 [http-nio-8080-exec-1] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:36:53.706 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:36:53.706 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:36:53.745 [http-nio-8080-exec-1] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 16:36:53.745 [http-nio-8080-exec-1] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 16:36:53.745 [http-nio-8080-exec-1] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 16:36:53.758 [http-nio-8080-exec-1] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 16:36:53.758 [http-nio-8080-exec-1] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 16:36:53.760 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 16:36:53.760 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 16:36:53.763 [http-nio-8080-exec-1] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@406bdac3
[DEBUG] 2021-04-12 16:36:53.765 [http-nio-8080-exec-1] SessionFactoryRegistry - Registering SessionFactory: 16e7cce0-2f71-420e-837c-31c6ca873000 (<unnamed>)
[DEBUG] 2021-04-12 16:36:53.765 [http-nio-8080-exec-1] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 16:36:53.885 [http-nio-8080-exec-1] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 16:36:53.915 [http-nio-8080-exec-1] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:36:53.939 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:36:53.940 [http-nio-8080-exec-1] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:36:53.952 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:36:53.953 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:36:53.953 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:36:53.954 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:36:53.954 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:36:53.954 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:36:53.954 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:36:53.954 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 16:36:53.954 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:36:53.954 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:36:53.954 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:36:53.955 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:36:53.956 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:36:53.956 [http-nio-8080-exec-1] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 16:36:53.956 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:38:37.172 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 16:38:37.174 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 16:38:37.178 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 16:38:37.267 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 16:38:37.271 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 16:38:37.436 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 16:38:37.436 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 16:38:37.449 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 16:38:37.688 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 16:38:37.707 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 16:38:37.708 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 16:38:37.728 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 16:38:37.756 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5a82ebf8
[DEBUG] 2021-04-12 16:38:37.756 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5a82ebf8
[DEBUG] 2021-04-12 16:38:37.756 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5a82ebf8
[DEBUG] 2021-04-12 16:38:37.757 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3d8b319e
[DEBUG] 2021-04-12 16:38:37.757 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3d7b1f1c
[DEBUG] 2021-04-12 16:38:37.758 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@65b66b08
[DEBUG] 2021-04-12 16:38:37.759 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@10acd6
[DEBUG] 2021-04-12 16:38:37.759 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@10acd6
[DEBUG] 2021-04-12 16:38:37.759 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10acd6
[DEBUG] 2021-04-12 16:38:37.760 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2f651f93
[DEBUG] 2021-04-12 16:38:37.760 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2f651f93
[DEBUG] 2021-04-12 16:38:37.761 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2f651f93
[DEBUG] 2021-04-12 16:38:37.761 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4a34e9f
[DEBUG] 2021-04-12 16:38:37.762 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4a34e9f
[DEBUG] 2021-04-12 16:38:37.762 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4a34e9f
[DEBUG] 2021-04-12 16:38:37.763 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@351f2244
[DEBUG] 2021-04-12 16:38:37.763 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@351f2244
[DEBUG] 2021-04-12 16:38:37.764 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@351f2244
[DEBUG] 2021-04-12 16:38:37.765 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2009f9b0
[DEBUG] 2021-04-12 16:38:37.765 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2009f9b0
[DEBUG] 2021-04-12 16:38:37.766 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2009f9b0
[DEBUG] 2021-04-12 16:38:37.768 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@61d34b4
[DEBUG] 2021-04-12 16:38:37.768 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@61d34b4
[DEBUG] 2021-04-12 16:38:37.769 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@61d34b4
[DEBUG] 2021-04-12 16:38:37.770 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@e322ec9
[DEBUG] 2021-04-12 16:38:37.771 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@e322ec9
[DEBUG] 2021-04-12 16:38:37.771 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@e322ec9
[DEBUG] 2021-04-12 16:38:37.772 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@719bb3b4
[DEBUG] 2021-04-12 16:38:37.772 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@719bb3b4
[DEBUG] 2021-04-12 16:38:37.775 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c782d8e
[DEBUG] 2021-04-12 16:38:37.775 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c782d8e
[DEBUG] 2021-04-12 16:38:37.776 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6bbe50c9
[DEBUG] 2021-04-12 16:38:37.776 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6bbe50c9
[DEBUG] 2021-04-12 16:38:37.776 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@8a98f38
[DEBUG] 2021-04-12 16:38:37.777 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@41ffaeb8
[DEBUG] 2021-04-12 16:38:37.777 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@444cc791
[DEBUG] 2021-04-12 16:38:37.778 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@444cc791
[DEBUG] 2021-04-12 16:38:37.778 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6a48a7f3
[DEBUG] 2021-04-12 16:38:37.779 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6a48a7f3
[DEBUG] 2021-04-12 16:38:37.783 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@54bca971
[DEBUG] 2021-04-12 16:38:37.783 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@54bca971
[DEBUG] 2021-04-12 16:38:37.785 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@11b377c5
[DEBUG] 2021-04-12 16:38:37.785 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@11b377c5
[DEBUG] 2021-04-12 16:38:37.786 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@23f3dbf0
[DEBUG] 2021-04-12 16:38:37.786 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@23f3dbf0
[DEBUG] 2021-04-12 16:38:37.787 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@20a05b32
[DEBUG] 2021-04-12 16:38:37.787 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@20a05b32
[DEBUG] 2021-04-12 16:38:37.789 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@763cf5b9
[DEBUG] 2021-04-12 16:38:37.789 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@763cf5b9
[DEBUG] 2021-04-12 16:38:37.790 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c35c345
[DEBUG] 2021-04-12 16:38:37.790 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c35c345
[DEBUG] 2021-04-12 16:38:37.792 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69a2b3b6
[DEBUG] 2021-04-12 16:38:37.792 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69a2b3b6
[DEBUG] 2021-04-12 16:38:37.795 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2de50ee4
[DEBUG] 2021-04-12 16:38:37.795 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2de50ee4
[DEBUG] 2021-04-12 16:38:37.797 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@149c3204
[DEBUG] 2021-04-12 16:38:37.797 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@149c3204
[DEBUG] 2021-04-12 16:38:37.798 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@26d96e5
[DEBUG] 2021-04-12 16:38:37.798 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@26d96e5
[DEBUG] 2021-04-12 16:38:37.798 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@26d96e5
[DEBUG] 2021-04-12 16:38:37.799 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2650f79
[DEBUG] 2021-04-12 16:38:37.801 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3672276e
[DEBUG] 2021-04-12 16:38:37.802 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3672276e
[DEBUG] 2021-04-12 16:38:37.802 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3672276e
[DEBUG] 2021-04-12 16:38:37.803 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@24b4d544
[DEBUG] 2021-04-12 16:38:37.804 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3a230001
[DEBUG] 2021-04-12 16:38:37.804 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3a230001
[DEBUG] 2021-04-12 16:38:37.805 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2c0b4c83
[DEBUG] 2021-04-12 16:38:37.806 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2c0b4c83
[DEBUG] 2021-04-12 16:38:37.806 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6d7cada5
[DEBUG] 2021-04-12 16:38:37.806 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6d7cada5
[DEBUG] 2021-04-12 16:38:37.808 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6ef1a1b9
[DEBUG] 2021-04-12 16:38:37.808 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6ef1a1b9
[DEBUG] 2021-04-12 16:38:37.809 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3baf6936
[DEBUG] 2021-04-12 16:38:37.810 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3baf6936
[DEBUG] 2021-04-12 16:38:37.810 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7a904f32
[DEBUG] 2021-04-12 16:38:37.811 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@153cd6bb
[DEBUG] 2021-04-12 16:38:37.813 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@153cd6bb
[DEBUG] 2021-04-12 16:38:37.813 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@153cd6bb
[DEBUG] 2021-04-12 16:38:37.815 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6428591a
[DEBUG] 2021-04-12 16:38:37.815 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6428591a
[DEBUG] 2021-04-12 16:38:37.815 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6428591a
[DEBUG] 2021-04-12 16:38:37.816 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1d540566
[DEBUG] 2021-04-12 16:38:37.816 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4a14c44f
[DEBUG] 2021-04-12 16:38:37.817 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5c1f6d57
[DEBUG] 2021-04-12 16:38:37.817 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5c1f6d57
[DEBUG] 2021-04-12 16:38:37.817 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5c1f6d57
[DEBUG] 2021-04-12 16:38:37.819 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16872c4d
[DEBUG] 2021-04-12 16:38:37.820 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16872c4d
[DEBUG] 2021-04-12 16:38:37.820 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16872c4d
[DEBUG] 2021-04-12 16:38:37.821 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3a01773b
[DEBUG] 2021-04-12 16:38:37.822 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@56f521c6
[DEBUG] 2021-04-12 16:38:37.823 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@cf67838
[DEBUG] 2021-04-12 16:38:37.826 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@cf67838
[DEBUG] 2021-04-12 16:38:37.827 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6c302a1d
[DEBUG] 2021-04-12 16:38:37.829 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@639aba11
[DEBUG] 2021-04-12 16:38:37.829 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@639aba11
[DEBUG] 2021-04-12 16:38:37.830 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@fabb651
[DEBUG] 2021-04-12 16:38:37.830 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@fabb651
[DEBUG] 2021-04-12 16:38:37.830 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@523d6bdb
[DEBUG] 2021-04-12 16:38:37.830 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a87b51
[DEBUG] 2021-04-12 16:38:37.832 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5e2a3040
[DEBUG] 2021-04-12 16:38:37.834 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7fcf294e
[DEBUG] 2021-04-12 16:38:37.834 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7fcf294e
[DEBUG] 2021-04-12 16:38:37.835 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@59e43e8c
[DEBUG] 2021-04-12 16:38:37.835 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2caa5d7c
[DEBUG] 2021-04-12 16:38:37.835 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5e671e20
[DEBUG] 2021-04-12 16:38:37.835 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3eabe84a
[DEBUG] 2021-04-12 16:38:37.835 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@46c3a14d
[DEBUG] 2021-04-12 16:38:37.835 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@38fc5554
[DEBUG] 2021-04-12 16:38:37.836 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5e8cda75
[DEBUG] 2021-04-12 16:38:37.837 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3f049056
[DEBUG] 2021-04-12 16:38:37.863 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 16:38:37.864 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 16:38:37.867 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:38:37.868 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:38:37.869 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 16:38:37.870 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 16:38:37.874 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 16:38:37.875 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:38:37.876 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 16:38:37.877 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 16:38:37.877 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 16:38:37.878 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 16:38:37.878 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:38:37.879 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 16:38:37.885 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 16:38:37.885 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 16:38:37.885 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 16:38:38.338 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 16:38:38.518 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:38:38.519 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:38:38.519 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 16:38:38.536 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 16:38:38.551 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 16:38:38.583 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 16:38:38.636 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 16:38:38.639 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@49c17ba4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@43e065f2]
[DEBUG] 2021-04-12 16:38:38.678 [main] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 16:38:38.698 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 16:38:38.704 [main] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 16:38:38.706 [main] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 16:38:38.824 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:38:38.826 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 16:38:38.827 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 16:38:38.830 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 16:38:38.831 [main] PropertyBinder - Building property id
[DEBUG] 2021-04-12 16:38:38.835 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 16:38:38.837 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:38:38.838 [main] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 16:38:38.838 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 16:38:38.840 [main] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 16:38:38.840 [main] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 16:38:38.840 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:38:38.841 [main] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 16:38:38.841 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 16:38:38.841 [main] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 16:38:38.841 [main] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 16:38:38.841 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:38:38.841 [main] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 16:38:38.842 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 16:38:38.842 [main] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 16:38:38.843 [main] PropertyBinder - Building property media
[DEBUG] 2021-04-12 16:38:38.845 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:38:38.847 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 16:38:38.850 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 16:38:38.853 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 16:38:38.853 [main] PropertyBinder - Building property name
[DEBUG] 2021-04-12 16:38:38.854 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:38:38.854 [main] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 16:38:38.854 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 16:38:38.854 [main] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 16:38:38.854 [main] PropertyBinder - Building property species
[DEBUG] 2021-04-12 16:38:38.858 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 16:38:38.858 [main] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 16:38:38.858 [main] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 16:38:38.858 [main] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 16:38:38.858 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 16:38:38.858 [main] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 16:38:38.859 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 16:38:38.886 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 16:38:38.887 [main] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 16:38:38.887 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 16:38:38.888 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 16:38:38.888 [main] Settings - Statistics: disabled
[DEBUG] 2021-04-12 16:38:38.888 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 16:38:38.888 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 16:38:38.888 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 16:38:38.888 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 16:38:38.888 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 16:38:38.888 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 16:38:38.888 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 16:38:38.888 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 16:38:38.888 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 16:38:38.888 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 16:38:38.888 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 16:38:38.888 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 16:38:38.888 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 16:38:38.888 [main] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 16:38:38.889 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 16:38:38.889 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 16:38:38.889 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 16:38:38.890 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 16:38:38.890 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 16:38:38.890 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 16:38:38.890 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 16:38:38.890 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 16:38:38.890 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 16:38:38.890 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 16:38:38.890 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 16:38:38.890 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 16:38:38.890 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 16:38:38.890 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 16:38:38.890 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 16:38:38.890 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 16:38:38.890 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 16:38:38.890 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 16:38:38.893 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 16:38:38.893 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 16:38:38.937 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 16:38:38.951 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 16:38:38.951 [main] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit-rt.jar;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\test-classes;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\classes;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Walker\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Walker\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Walker\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Walker\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Walker\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Walker\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Walker\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Walker\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Walker\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Walker\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Walker\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Walker\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Walker\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Walker\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\Walker\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Walker\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Walker\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Walker\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Walker\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-client\2.29.1\jersey-client-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\2.1.6\jakarta.ws.rs-api-2.1.6.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-common\2.29.1\jersey-common-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.3\osgi-resource-locator-1.0.3.jar;C:\Users\Walker\.m2\repository\com\sun\activation\jakarta.activation\1.2.1\jakarta.activation-1.2.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\jakarta.inject\2.6.1\jakarta.inject-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\inject\jersey-hk2\2.29.1\jersey-hk2-2.29.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-locator\2.6.1\hk2-locator-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\aopalliance-repackaged\2.6.1\aopalliance-repackaged-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-api\2.6.1\hk2-api-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-utils\2.6.1\hk2-utils-2.6.1.jar;C:\Users\Walker\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Walker\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Walker\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0\jackson-core-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 team.persistence.GenericDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=13.0.1+9, user.name=Walker, path.separator=;, hibernate.connection.username=****, os.version=6.3, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Walker\AppData\Local\Temp\, java.version=13.0.1, user.dir=C:\Users\Walker\IdeaProjects\fictionalCharacterAPI, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1526f71, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0}
[DEBUG] 2021-04-12 16:38:38.965 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-04-12 16:38:38.965 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 16:38:38.966 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 16:38:38.966 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@49c17ba4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1ff15a50]
[DEBUG] 2021-04-12 16:38:39.024 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:38:39.024 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:38:39.038 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:38:39.038 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:38:39.240 [main] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 16:38:39.240 [main] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 16:38:39.240 [main] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 16:38:39.240 [main] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:38:39.240 [main] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 16:38:39.240 [main] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 16:38:39.240 [main] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:38:39.256 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3312f4f4]
[DEBUG] 2021-04-12 16:38:39.257 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:38:39.257 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:38:39.257 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:38:39.257 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:38:39.257 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:38:39.257 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:38:39.267 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:38:39.269 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:38:39.271 [main] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:38:39.271 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@601d6622]
[DEBUG] 2021-04-12 16:38:39.271 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:38:39.271 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:38:39.271 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:38:39.272 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:38:39.272 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:38:39.272 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:38:39.272 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:38:39.272 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:38:39.272 [main] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:38:39.283 [main] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:38:39.284 [main] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:38:39.303 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 16:38:39.303 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 16:38:39.303 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 16:38:39.307 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 16:38:39.307 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 16:38:39.308 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 16:38:39.308 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 16:38:39.310 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5bb8e6fc
[DEBUG] 2021-04-12 16:38:39.312 [main] SessionFactoryRegistry - Registering SessionFactory: dc952b5c-0c44-484c-87d1-8e33c1808f21 (<unnamed>)
[DEBUG] 2021-04-12 16:38:39.312 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 16:38:39.378 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 16:38:39.396 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:38:39.413 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:38:39.413 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:38:39.420 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#3]
[DEBUG] 2021-04-12 16:38:39.421 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:38:39.421 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:39.421 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Star Wars
[DEBUG] 2021-04-12 16:38:39.421 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:39.421 [main] TwoPhaseLoad - Processing attribute `media` : value = movie
[DEBUG] 2021-04-12 16:38:39.421 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:39.421 [main] TwoPhaseLoad - Processing attribute `name` : value = Luke Skywalker
[DEBUG] 2021-04-12 16:38:39.421 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:39.421 [main] TwoPhaseLoad - Processing attribute `species` : value = Human
[DEBUG] 2021-04-12 16:38:39.421 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:39.422 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#3]
[DEBUG] 2021-04-12 16:38:39.422 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:38:39.423 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#3
[DEBUG] 2021-04-12 16:38:39.423 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:38:39.439 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-04-12 16:38:39.439 [main] TransactionImpl - begin
[DEBUG] 2021-04-12 16:38:39.447 [main] TransactionImpl - committing
[DEBUG] 2021-04-12 16:38:39.447 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-04-12 16:38:39.447 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-04-12 16:38:39.448 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2021-04-12 16:38:39.448 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-04-12 16:38:39.449 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-04-12 16:38:39.449 [main] EntityPrinter - team.entity.Character{franchise=Star Wars, species=Human, name=Luke Skywalker, id=3, media=movie, alignment=Good}
[DEBUG] 2021-04-12 16:38:39.453 [main] SQL - delete from characters where id=?
[DEBUG] 2021-04-12 16:38:39.554 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:38:39.557 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:38:39.558 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2021-04-12 16:38:39.558 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:38:39.588 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:38:39.588 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#3
[DEBUG] 2021-04-12 16:38:39.588 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:38:40.068 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Character as generatedAlias0
[DEBUG] 2021-04-12 16:38:40.091 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@448cdb47
[DEBUG] 2021-04-12 16:38:40.109 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from team.entity.Character as generatedAlias0
[DEBUG] 2021-04-12 16:38:40.113 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-04-12 16:38:40.125 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'team'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Character'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2021-04-12 16:38:40.144 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-04-12 16:38:40.156 [main] FromElement - FromClause{level=1} : team.entity.Character (generatedAlias0) -> character0_
[DEBUG] 2021-04-12 16:38:40.156 [main] FromReferenceNode - Resolved : generatedAlias0 -> character0_.id
[DEBUG] 2021-04-12 16:38:40.157 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-04-12 16:38:40.158 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} character0_.id ) ( FromClause{level=1} characters character0_ ) )
[DEBUG] 2021-04-12 16:38:40.165 [main] JoinProcessor - Using FROM fragment [characters character0_]
[DEBUG] 2021-04-12 16:38:40.166 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-04-12 16:38:40.167 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (characters)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'character0_.id as id1_0_' {alias=generatedAlias0, className=team.entity.Character, tableAlias=character0_}
    |  \-[SQL_TOKEN] SqlFragment: 'character0_.alignment as alignmen2_0_, character0_.franchise as franchis3_0_, character0_.media as media4_0_, character0_.name as name5_0_, character0_.species as species6_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[character0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'characters character0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=characters,tableAlias=character0_,origin=null,columns={,className=team.entity.Character}}

[DEBUG] 2021-04-12 16:38:40.167 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-04-12 16:38:40.171 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from team.entity.Character as generatedAlias0
[DEBUG] 2021-04-12 16:38:40.171 [main] QueryTranslatorImpl - SQL: select character0_.id as id1_0_, character0_.alignment as alignmen2_0_, character0_.franchise as franchis3_0_, character0_.media as media4_0_, character0_.name as name5_0_, character0_.species as species6_0_ from characters character0_
[DEBUG] 2021-04-12 16:38:40.171 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-04-12 16:38:40.179 [main] SQL - select character0_.id as id1_0_, character0_.alignment as alignmen2_0_, character0_.franchise as franchis3_0_, character0_.media as media4_0_, character0_.name as name5_0_, character0_.species as species6_0_ from characters character0_
[DEBUG] 2021-04-12 16:38:40.182 [main] Loader - Result set row: 0
[DEBUG] 2021-04-12 16:38:40.182 [main] Loader - Result row: EntityKey[team.entity.Character#1]
[DEBUG] 2021-04-12 16:38:40.183 [main] Loader - Result set row: 1
[DEBUG] 2021-04-12 16:38:40.183 [main] Loader - Result row: EntityKey[team.entity.Character#2]
[DEBUG] 2021-04-12 16:38:40.183 [main] Loader - Result set row: 2
[DEBUG] 2021-04-12 16:38:40.183 [main] Loader - Result row: EntityKey[team.entity.Character#3]
[DEBUG] 2021-04-12 16:38:40.183 [main] Loader - Result set row: 3
[DEBUG] 2021-04-12 16:38:40.183 [main] Loader - Result row: EntityKey[team.entity.Character#4]
[DEBUG] 2021-04-12 16:38:40.183 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:38:40.183 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:38:40.183 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.183 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#2]
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Alien
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Processing attribute `media` : value = movie
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Processing attribute `name` : value = Ripley
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Processing attribute `species` : value = Human
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#2]
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#3]
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Star Wars
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Processing attribute `media` : value = movie
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Processing attribute `name` : value = Luke Skywalker
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.184 [main] TwoPhaseLoad - Processing attribute `species` : value = Human
[DEBUG] 2021-04-12 16:38:40.185 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.185 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#3]
[DEBUG] 2021-04-12 16:38:40.185 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#4]
[DEBUG] 2021-04-12 16:38:40.185 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:38:40.185 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.185 [main] TwoPhaseLoad - Processing attribute `franchise` : value = The Matrix
[DEBUG] 2021-04-12 16:38:40.185 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.185 [main] TwoPhaseLoad - Processing attribute `media` : value = movie
[DEBUG] 2021-04-12 16:38:40.185 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.185 [main] TwoPhaseLoad - Processing attribute `name` : value = Neo
[DEBUG] 2021-04-12 16:38:40.185 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.185 [main] TwoPhaseLoad - Processing attribute `species` : value = Human
[DEBUG] 2021-04-12 16:38:40.185 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.185 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#4]
[DEBUG] 2021-04-12 16:38:40.186 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:38:40.535 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:38:40.550 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:38:40.551 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:38:40.552 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:38:40.552 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:38:40.552 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.552 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:38:40.552 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.552 [main] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:38:40.552 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.552 [main] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 16:38:40.552 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.552 [main] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:38:40.552 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.553 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:38:40.553 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:38:40.553 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 16:38:40.553 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:38:40.807 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:38:40.822 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:38:40.827 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:38:40.828 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:38:40.828 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:38:40.828 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.840 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:38:40.840 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.840 [main] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:38:40.840 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.840 [main] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 16:38:40.840 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.840 [main] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:38:40.840 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.840 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:38:40.840 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:38:40.840 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 16:38:40.840 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:38:40.843 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-04-12 16:38:40.843 [main] TransactionImpl - begin
[DEBUG] 2021-04-12 16:38:40.845 [main] TransactionImpl - committing
[DEBUG] 2021-04-12 16:38:40.845 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-04-12 16:38:40.845 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-04-12 16:38:40.846 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2021-04-12 16:38:40.846 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-04-12 16:38:40.850 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-04-12 16:38:40.850 [main] EntityPrinter - team.entity.Character{franchise=Lord Of The Rings, species=Maia, name=Harry Wizard, id=1, media=book, alignment=Good}
[DEBUG] 2021-04-12 16:38:40.850 [main] SQL - update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 16:38:40.917 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:38:40.918 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:38:40.919 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:38:40.925 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:38:40.925 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:38:40.925 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:38:40.926 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:38:40.926 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.926 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:38:40.926 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.926 [main] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:38:40.926 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.926 [main] TwoPhaseLoad - Processing attribute `name` : value = Harry Wizard
[DEBUG] 2021-04-12 16:38:40.926 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.926 [main] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:38:40.926 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:40.926 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:38:40.926 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:38:40.926 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 16:38:40.927 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:38:41.325 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-04-12 16:38:41.326 [main] TransactionImpl - begin
[DEBUG] 2021-04-12 16:38:41.339 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-04-12 16:38:41.342 [main] SQL - insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:38:41.388 [main] IdentifierGeneratorHelper - Natively generated identity: 7
[DEBUG] 2021-04-12 16:38:41.388 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:38:41.389 [main] TransactionImpl - committing
[DEBUG] 2021-04-12 16:38:41.389 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-04-12 16:38:41.389 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-04-12 16:38:41.389 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-04-12 16:38:41.389 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-04-12 16:38:41.390 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-04-12 16:38:41.390 [main] EntityPrinter - team.entity.Character{franchise=Spawn, species=Hellspawn, name=Spawn, id=7, media=Comic, alignment=Neutral}
[DEBUG] 2021-04-12 16:38:41.487 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:38:41.489 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:38:41.490 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:38:41.492 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:38:41.492 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:38:41.492 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#7]
[DEBUG] 2021-04-12 16:38:41.493 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Neutral
[DEBUG] 2021-04-12 16:38:41.493 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:41.493 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Spawn
[DEBUG] 2021-04-12 16:38:41.493 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:41.493 [main] TwoPhaseLoad - Processing attribute `media` : value = Comic
[DEBUG] 2021-04-12 16:38:41.493 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:41.493 [main] TwoPhaseLoad - Processing attribute `name` : value = Spawn
[DEBUG] 2021-04-12 16:38:41.493 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:41.493 [main] TwoPhaseLoad - Processing attribute `species` : value = Hellspawn
[DEBUG] 2021-04-12 16:38:41.493 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:38:41.493 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#7]
[DEBUG] 2021-04-12 16:38:41.493 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:38:41.493 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#7
[DEBUG] 2021-04-12 16:38:41.493 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:40:36.646 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 16:40:36.648 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 16:40:36.652 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 16:40:36.729 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 16:40:36.732 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 16:40:36.911 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 16:40:36.911 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 16:40:36.918 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 16:40:37.172 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 16:40:37.191 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 16:40:37.192 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 16:40:37.210 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 16:40:37.239 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@27a97e08
[DEBUG] 2021-04-12 16:40:37.239 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@27a97e08
[DEBUG] 2021-04-12 16:40:37.240 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@27a97e08
[DEBUG] 2021-04-12 16:40:37.240 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@51ce6f85
[DEBUG] 2021-04-12 16:40:37.241 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4726927c
[DEBUG] 2021-04-12 16:40:37.241 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@5b275174
[DEBUG] 2021-04-12 16:40:37.242 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@571a9686
[DEBUG] 2021-04-12 16:40:37.243 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@571a9686
[DEBUG] 2021-04-12 16:40:37.245 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@571a9686
[DEBUG] 2021-04-12 16:40:37.246 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4e93dcb9
[DEBUG] 2021-04-12 16:40:37.246 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4e93dcb9
[DEBUG] 2021-04-12 16:40:37.246 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4e93dcb9
[DEBUG] 2021-04-12 16:40:37.247 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3cf7298d
[DEBUG] 2021-04-12 16:40:37.248 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3cf7298d
[DEBUG] 2021-04-12 16:40:37.248 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3cf7298d
[DEBUG] 2021-04-12 16:40:37.249 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@43da41e
[DEBUG] 2021-04-12 16:40:37.249 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@43da41e
[DEBUG] 2021-04-12 16:40:37.250 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@43da41e
[DEBUG] 2021-04-12 16:40:37.251 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3bd3d05e
[DEBUG] 2021-04-12 16:40:37.251 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3bd3d05e
[DEBUG] 2021-04-12 16:40:37.251 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3bd3d05e
[DEBUG] 2021-04-12 16:40:37.252 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ab7ce48
[DEBUG] 2021-04-12 16:40:37.252 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ab7ce48
[DEBUG] 2021-04-12 16:40:37.254 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ab7ce48
[DEBUG] 2021-04-12 16:40:37.255 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4d0753c9
[DEBUG] 2021-04-12 16:40:37.255 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4d0753c9
[DEBUG] 2021-04-12 16:40:37.255 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4d0753c9
[DEBUG] 2021-04-12 16:40:37.257 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@20411320
[DEBUG] 2021-04-12 16:40:37.257 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@20411320
[DEBUG] 2021-04-12 16:40:37.259 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@12abdfb
[DEBUG] 2021-04-12 16:40:37.259 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@12abdfb
[DEBUG] 2021-04-12 16:40:37.260 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@20011bf
[DEBUG] 2021-04-12 16:40:37.260 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@20011bf
[DEBUG] 2021-04-12 16:40:37.261 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@43f0c2d1
[DEBUG] 2021-04-12 16:40:37.261 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7a1f45ed
[DEBUG] 2021-04-12 16:40:37.262 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@73437222
[DEBUG] 2021-04-12 16:40:37.263 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@73437222
[DEBUG] 2021-04-12 16:40:37.263 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4096aa05
[DEBUG] 2021-04-12 16:40:37.264 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4096aa05
[DEBUG] 2021-04-12 16:40:37.270 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3e48d38
[DEBUG] 2021-04-12 16:40:37.270 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3e48d38
[DEBUG] 2021-04-12 16:40:37.272 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5833f5cd
[DEBUG] 2021-04-12 16:40:37.273 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5833f5cd
[DEBUG] 2021-04-12 16:40:37.274 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@31ff6309
[DEBUG] 2021-04-12 16:40:37.274 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@31ff6309
[DEBUG] 2021-04-12 16:40:37.275 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4dc8c0ea
[DEBUG] 2021-04-12 16:40:37.275 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4dc8c0ea
[DEBUG] 2021-04-12 16:40:37.277 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4aedaf61
[DEBUG] 2021-04-12 16:40:37.277 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4aedaf61
[DEBUG] 2021-04-12 16:40:37.278 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5eed2d86
[DEBUG] 2021-04-12 16:40:37.278 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5eed2d86
[DEBUG] 2021-04-12 16:40:37.280 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@228cea97
[DEBUG] 2021-04-12 16:40:37.280 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@228cea97
[DEBUG] 2021-04-12 16:40:37.281 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5524b72f
[DEBUG] 2021-04-12 16:40:37.281 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5524b72f
[DEBUG] 2021-04-12 16:40:37.283 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@21e20ad5
[DEBUG] 2021-04-12 16:40:37.283 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@21e20ad5
[DEBUG] 2021-04-12 16:40:37.284 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@75fc1992
[DEBUG] 2021-04-12 16:40:37.284 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@75fc1992
[DEBUG] 2021-04-12 16:40:37.284 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@75fc1992
[DEBUG] 2021-04-12 16:40:37.285 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7be7e15
[DEBUG] 2021-04-12 16:40:37.287 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@24b4d544
[DEBUG] 2021-04-12 16:40:37.288 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24b4d544
[DEBUG] 2021-04-12 16:40:37.289 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24b4d544
[DEBUG] 2021-04-12 16:40:37.289 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@40e60ece
[DEBUG] 2021-04-12 16:40:37.290 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4893b344
[DEBUG] 2021-04-12 16:40:37.290 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4893b344
[DEBUG] 2021-04-12 16:40:37.291 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@51b35e4e
[DEBUG] 2021-04-12 16:40:37.292 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51b35e4e
[DEBUG] 2021-04-12 16:40:37.293 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@62db0521
[DEBUG] 2021-04-12 16:40:37.293 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@62db0521
[DEBUG] 2021-04-12 16:40:37.294 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7be3a9ce
[DEBUG] 2021-04-12 16:40:37.295 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7be3a9ce
[DEBUG] 2021-04-12 16:40:37.296 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2b59501e
[DEBUG] 2021-04-12 16:40:37.296 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2b59501e
[DEBUG] 2021-04-12 16:40:37.296 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@57c47a9e
[DEBUG] 2021-04-12 16:40:37.297 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@715d6168
[DEBUG] 2021-04-12 16:40:37.300 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@715d6168
[DEBUG] 2021-04-12 16:40:37.301 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@715d6168
[DEBUG] 2021-04-12 16:40:37.302 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@107f4980
[DEBUG] 2021-04-12 16:40:37.303 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@107f4980
[DEBUG] 2021-04-12 16:40:37.303 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@107f4980
[DEBUG] 2021-04-12 16:40:37.304 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@f08fdce
[DEBUG] 2021-04-12 16:40:37.305 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@cbc8d0f
[DEBUG] 2021-04-12 16:40:37.305 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@17b6d426
[DEBUG] 2021-04-12 16:40:37.305 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@17b6d426
[DEBUG] 2021-04-12 16:40:37.306 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@17b6d426
[DEBUG] 2021-04-12 16:40:37.307 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@20e3c449
[DEBUG] 2021-04-12 16:40:37.308 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@20e3c449
[DEBUG] 2021-04-12 16:40:37.308 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@20e3c449
[DEBUG] 2021-04-12 16:40:37.309 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@680a66dd
[DEBUG] 2021-04-12 16:40:37.309 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@40712ee9
[DEBUG] 2021-04-12 16:40:37.310 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@33a3c44a
[DEBUG] 2021-04-12 16:40:37.314 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@33a3c44a
[DEBUG] 2021-04-12 16:40:37.314 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@93f432e
[DEBUG] 2021-04-12 16:40:37.316 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@66c38e51
[DEBUG] 2021-04-12 16:40:37.316 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@66c38e51
[DEBUG] 2021-04-12 16:40:37.317 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@58496c97
[DEBUG] 2021-04-12 16:40:37.317 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58496c97
[DEBUG] 2021-04-12 16:40:37.317 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12968227
[DEBUG] 2021-04-12 16:40:37.318 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@48eb9836
[DEBUG] 2021-04-12 16:40:37.319 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@79d06bbd
[DEBUG] 2021-04-12 16:40:37.321 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2caa5d7c
[DEBUG] 2021-04-12 16:40:37.321 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2caa5d7c
[DEBUG] 2021-04-12 16:40:37.322 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@38fc5554
[DEBUG] 2021-04-12 16:40:37.322 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5e8cda75
[DEBUG] 2021-04-12 16:40:37.322 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3f049056
[DEBUG] 2021-04-12 16:40:37.322 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@64968732
[DEBUG] 2021-04-12 16:40:37.322 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3e1a3801
[DEBUG] 2021-04-12 16:40:37.322 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6fd12c5
[DEBUG] 2021-04-12 16:40:37.323 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1de0a46c
[DEBUG] 2021-04-12 16:40:37.323 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d1f1ff5
[DEBUG] 2021-04-12 16:40:37.360 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 16:40:37.361 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 16:40:37.367 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:40:37.369 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:40:37.370 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 16:40:37.370 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 16:40:37.377 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 16:40:37.378 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:40:37.378 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 16:40:37.379 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 16:40:37.379 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 16:40:37.380 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 16:40:37.380 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:40:37.380 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 16:40:37.384 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 16:40:37.384 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 16:40:37.384 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 16:40:37.589 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 16:40:37.870 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:40:37.871 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:40:37.871 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 16:40:37.887 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 16:40:37.903 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 16:40:37.930 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 16:40:37.983 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 16:40:37.986 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6c6017b9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4730e0f0]
[DEBUG] 2021-04-12 16:40:38.044 [main] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 16:40:38.070 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 16:40:38.075 [main] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 16:40:38.081 [main] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 16:40:38.113 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:40:38.115 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 16:40:38.117 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 16:40:38.119 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 16:40:38.123 [main] PropertyBinder - Building property id
[DEBUG] 2021-04-12 16:40:38.145 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 16:40:38.147 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:40:38.147 [main] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 16:40:38.147 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 16:40:38.147 [main] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 16:40:38.147 [main] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 16:40:38.148 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:40:38.148 [main] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 16:40:38.148 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 16:40:38.148 [main] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 16:40:38.148 [main] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 16:40:38.149 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:40:38.149 [main] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 16:40:38.149 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 16:40:38.150 [main] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 16:40:38.151 [main] PropertyBinder - Building property media
[DEBUG] 2021-04-12 16:40:38.153 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:40:38.154 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 16:40:38.155 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 16:40:38.155 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 16:40:38.155 [main] PropertyBinder - Building property name
[DEBUG] 2021-04-12 16:40:38.156 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:40:38.157 [main] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 16:40:38.157 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 16:40:38.157 [main] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 16:40:38.157 [main] PropertyBinder - Building property species
[DEBUG] 2021-04-12 16:40:38.164 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 16:40:38.164 [main] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 16:40:38.164 [main] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 16:40:38.164 [main] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 16:40:38.164 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 16:40:38.164 [main] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 16:40:38.165 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 16:40:38.192 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 16:40:38.193 [main] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 16:40:38.193 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 16:40:38.193 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 16:40:38.194 [main] Settings - Statistics: disabled
[DEBUG] 2021-04-12 16:40:38.194 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 16:40:38.194 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 16:40:38.194 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 16:40:38.194 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 16:40:38.194 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 16:40:38.194 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 16:40:38.194 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 16:40:38.194 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 16:40:38.194 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 16:40:38.194 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 16:40:38.194 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 16:40:38.194 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 16:40:38.194 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 16:40:38.195 [main] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 16:40:38.196 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 16:40:38.196 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 16:40:38.196 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 16:40:38.196 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 16:40:38.196 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 16:40:38.197 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 16:40:38.197 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 16:40:38.197 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 16:40:38.197 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 16:40:38.197 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 16:40:38.197 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 16:40:38.197 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 16:40:38.197 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 16:40:38.197 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 16:40:38.197 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 16:40:38.197 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 16:40:38.198 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 16:40:38.198 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 16:40:38.200 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 16:40:38.200 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 16:40:38.243 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 16:40:38.262 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 16:40:38.262 [main] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit-rt.jar;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\test-classes;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\classes;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Walker\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Walker\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Walker\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Walker\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Walker\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Walker\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Walker\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Walker\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Walker\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Walker\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Walker\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Walker\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Walker\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Walker\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\Walker\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Walker\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Walker\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Walker\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Walker\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-client\2.29.1\jersey-client-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\2.1.6\jakarta.ws.rs-api-2.1.6.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-common\2.29.1\jersey-common-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.3\osgi-resource-locator-1.0.3.jar;C:\Users\Walker\.m2\repository\com\sun\activation\jakarta.activation\1.2.1\jakarta.activation-1.2.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\jakarta.inject\2.6.1\jakarta.inject-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\inject\jersey-hk2\2.29.1\jersey-hk2-2.29.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-locator\2.6.1\hk2-locator-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\aopalliance-repackaged\2.6.1\aopalliance-repackaged-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-api\2.6.1\hk2-api-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-utils\2.6.1\hk2-utils-2.6.1.jar;C:\Users\Walker\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Walker\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Walker\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0\jackson-core-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 team.persistence.GenericDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=13.0.1+9, user.name=Walker, path.separator=;, hibernate.connection.username=****, os.version=6.3, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Walker\AppData\Local\Temp\, java.version=13.0.1, user.dir=C:\Users\Walker\IdeaProjects\fictionalCharacterAPI, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2da99821, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0}
[DEBUG] 2021-04-12 16:40:38.279 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-04-12 16:40:38.279 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 16:40:38.280 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 16:40:38.280 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6c6017b9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5b39a3e6]
[DEBUG] 2021-04-12 16:40:38.316 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:40:38.316 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:40:38.329 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:40:38.329 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:40:38.528 [main] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 16:40:38.528 [main] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 16:40:38.528 [main] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 16:40:38.528 [main] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:40:38.528 [main] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 16:40:38.528 [main] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 16:40:38.528 [main] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:40:38.544 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1efac5b9]
[DEBUG] 2021-04-12 16:40:38.544 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:40:38.544 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:40:38.544 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:40:38.544 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:40:38.544 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:40:38.545 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:40:38.554 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:40:38.557 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:40:38.559 [main] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:40:38.559 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1511d157]
[DEBUG] 2021-04-12 16:40:38.559 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:40:38.559 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:40:38.559 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:40:38.559 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:40:38.559 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:40:38.559 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:40:38.559 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:40:38.560 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:40:38.560 [main] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:40:38.570 [main] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:40:38.570 [main] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:40:38.590 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 16:40:38.590 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 16:40:38.590 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 16:40:38.595 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 16:40:38.595 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 16:40:38.597 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 16:40:38.597 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 16:40:38.599 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ec9eefa
[DEBUG] 2021-04-12 16:40:38.600 [main] SessionFactoryRegistry - Registering SessionFactory: e5d02ad2-7edc-4491-8588-a48b3d8d1294 (<unnamed>)
[DEBUG] 2021-04-12 16:40:38.602 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 16:40:38.672 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 16:40:38.685 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:40:38.721 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:40:38.722 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:40:38.728 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#3]
[DEBUG] 2021-04-12 16:40:38.729 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:40:38.729 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:38.729 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Star Wars
[DEBUG] 2021-04-12 16:40:38.729 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:38.729 [main] TwoPhaseLoad - Processing attribute `media` : value = movie
[DEBUG] 2021-04-12 16:40:38.729 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:38.729 [main] TwoPhaseLoad - Processing attribute `name` : value = Luke Skywalker
[DEBUG] 2021-04-12 16:40:38.729 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:38.729 [main] TwoPhaseLoad - Processing attribute `species` : value = Human
[DEBUG] 2021-04-12 16:40:38.729 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:38.730 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#3]
[DEBUG] 2021-04-12 16:40:38.730 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:40:38.731 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#3
[DEBUG] 2021-04-12 16:40:38.731 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:40:38.752 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-04-12 16:40:38.752 [main] TransactionImpl - begin
[DEBUG] 2021-04-12 16:40:38.760 [main] TransactionImpl - committing
[DEBUG] 2021-04-12 16:40:38.760 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-04-12 16:40:38.760 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-04-12 16:40:38.761 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2021-04-12 16:40:38.761 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-04-12 16:40:38.762 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-04-12 16:40:38.762 [main] EntityPrinter - team.entity.Character{franchise=Star Wars, species=Human, name=Luke Skywalker, id=3, media=movie, alignment=Good}
[DEBUG] 2021-04-12 16:40:38.767 [main] SQL - delete from characters where id=?
[DEBUG] 2021-04-12 16:40:38.920 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:40:38.921 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:40:38.921 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2021-04-12 16:40:38.921 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:40:38.937 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:40:38.938 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#3
[DEBUG] 2021-04-12 16:40:38.938 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:40:39.334 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Character as generatedAlias0
[DEBUG] 2021-04-12 16:40:39.350 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@35ac9ebd
[DEBUG] 2021-04-12 16:40:39.369 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from team.entity.Character as generatedAlias0
[DEBUG] 2021-04-12 16:40:39.373 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-04-12 16:40:39.382 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'team'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Character'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2021-04-12 16:40:39.397 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-04-12 16:40:39.407 [main] FromElement - FromClause{level=1} : team.entity.Character (generatedAlias0) -> character0_
[DEBUG] 2021-04-12 16:40:39.407 [main] FromReferenceNode - Resolved : generatedAlias0 -> character0_.id
[DEBUG] 2021-04-12 16:40:39.408 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-04-12 16:40:39.408 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} character0_.id ) ( FromClause{level=1} characters character0_ ) )
[DEBUG] 2021-04-12 16:40:39.415 [main] JoinProcessor - Using FROM fragment [characters character0_]
[DEBUG] 2021-04-12 16:40:39.415 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-04-12 16:40:39.416 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (characters)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'character0_.id as id1_0_' {alias=generatedAlias0, className=team.entity.Character, tableAlias=character0_}
    |  \-[SQL_TOKEN] SqlFragment: 'character0_.alignment as alignmen2_0_, character0_.franchise as franchis3_0_, character0_.media as media4_0_, character0_.name as name5_0_, character0_.species as species6_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[character0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'characters character0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=characters,tableAlias=character0_,origin=null,columns={,className=team.entity.Character}}

[DEBUG] 2021-04-12 16:40:39.417 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-04-12 16:40:39.421 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from team.entity.Character as generatedAlias0
[DEBUG] 2021-04-12 16:40:39.421 [main] QueryTranslatorImpl - SQL: select character0_.id as id1_0_, character0_.alignment as alignmen2_0_, character0_.franchise as franchis3_0_, character0_.media as media4_0_, character0_.name as name5_0_, character0_.species as species6_0_ from characters character0_
[DEBUG] 2021-04-12 16:40:39.421 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-04-12 16:40:39.428 [main] SQL - select character0_.id as id1_0_, character0_.alignment as alignmen2_0_, character0_.franchise as franchis3_0_, character0_.media as media4_0_, character0_.name as name5_0_, character0_.species as species6_0_ from characters character0_
[DEBUG] 2021-04-12 16:40:39.432 [main] Loader - Result set row: 0
[DEBUG] 2021-04-12 16:40:39.433 [main] Loader - Result row: EntityKey[team.entity.Character#1]
[DEBUG] 2021-04-12 16:40:39.433 [main] Loader - Result set row: 1
[DEBUG] 2021-04-12 16:40:39.434 [main] Loader - Result row: EntityKey[team.entity.Character#2]
[DEBUG] 2021-04-12 16:40:39.434 [main] Loader - Result set row: 2
[DEBUG] 2021-04-12 16:40:39.434 [main] Loader - Result row: EntityKey[team.entity.Character#3]
[DEBUG] 2021-04-12 16:40:39.434 [main] Loader - Result set row: 3
[DEBUG] 2021-04-12 16:40:39.434 [main] Loader - Result row: EntityKey[team.entity.Character#4]
[DEBUG] 2021-04-12 16:40:39.434 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:40:39.434 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#2]
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Alien
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Processing attribute `media` : value = movie
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Processing attribute `name` : value = Ripley
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Processing attribute `species` : value = Human
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#2]
[DEBUG] 2021-04-12 16:40:39.435 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#3]
[DEBUG] 2021-04-12 16:40:39.436 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:40:39.436 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.436 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Star Wars
[DEBUG] 2021-04-12 16:40:39.436 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.436 [main] TwoPhaseLoad - Processing attribute `media` : value = movie
[DEBUG] 2021-04-12 16:40:39.436 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.436 [main] TwoPhaseLoad - Processing attribute `name` : value = Luke Skywalker
[DEBUG] 2021-04-12 16:40:39.436 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.436 [main] TwoPhaseLoad - Processing attribute `species` : value = Human
[DEBUG] 2021-04-12 16:40:39.436 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.436 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#3]
[DEBUG] 2021-04-12 16:40:39.436 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#4]
[DEBUG] 2021-04-12 16:40:39.436 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:40:39.436 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.436 [main] TwoPhaseLoad - Processing attribute `franchise` : value = The Matrix
[DEBUG] 2021-04-12 16:40:39.437 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.437 [main] TwoPhaseLoad - Processing attribute `media` : value = movie
[DEBUG] 2021-04-12 16:40:39.437 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.437 [main] TwoPhaseLoad - Processing attribute `name` : value = Neo
[DEBUG] 2021-04-12 16:40:39.437 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.437 [main] TwoPhaseLoad - Processing attribute `species` : value = Human
[DEBUG] 2021-04-12 16:40:39.437 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.437 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#4]
[DEBUG] 2021-04-12 16:40:39.438 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:40:39.663 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:40:39.699 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:40:39.699 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:40:39.699 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:40:39.699 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:40:39.699 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.699 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:40:39.699 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.699 [main] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:40:39.700 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.700 [main] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 16:40:39.700 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.700 [main] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:40:39.700 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.700 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:40:39.700 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:40:39.700 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 16:40:39.700 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:40:39.863 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:40:39.866 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:40:39.867 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:40:39.867 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:40:39.867 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:40:39.867 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.867 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:40:39.867 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.867 [main] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:40:39.867 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.867 [main] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 16:40:39.867 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.867 [main] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:40:39.867 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.868 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:40:39.868 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:40:39.869 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 16:40:39.869 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:40:39.870 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-04-12 16:40:39.870 [main] TransactionImpl - begin
[DEBUG] 2021-04-12 16:40:39.871 [main] TransactionImpl - committing
[DEBUG] 2021-04-12 16:40:39.872 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-04-12 16:40:39.872 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-04-12 16:40:39.872 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2021-04-12 16:40:39.873 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-04-12 16:40:39.873 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-04-12 16:40:39.873 [main] EntityPrinter - team.entity.Character{franchise=Lord Of The Rings, species=Maia, name=Harry Wizard, id=1, media=book, alignment=Good}
[DEBUG] 2021-04-12 16:40:39.873 [main] SQL - update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 16:40:39.961 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:40:39.962 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:40:39.963 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:40:39.966 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:40:39.966 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:40:39.968 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:40:39.968 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:40:39.968 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.968 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:40:39.968 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.968 [main] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:40:39.968 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.968 [main] TwoPhaseLoad - Processing attribute `name` : value = Harry Wizard
[DEBUG] 2021-04-12 16:40:39.968 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.968 [main] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:40:39.968 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:39.968 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:40:39.968 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:40:39.969 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 16:40:39.969 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:40:40.140 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-04-12 16:40:40.140 [main] TransactionImpl - begin
[DEBUG] 2021-04-12 16:40:40.144 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-04-12 16:40:40.147 [main] SQL - insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:40:40.181 [main] IdentifierGeneratorHelper - Natively generated identity: 8
[DEBUG] 2021-04-12 16:40:40.181 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:40:40.182 [main] TransactionImpl - committing
[DEBUG] 2021-04-12 16:40:40.182 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-04-12 16:40:40.182 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-04-12 16:40:40.183 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-04-12 16:40:40.183 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-04-12 16:40:40.183 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-04-12 16:40:40.183 [main] EntityPrinter - team.entity.Character{franchise=Spawn, species=Hellspawn, name=Spawn, id=8, media=Comic, alignment=Neutral}
[DEBUG] 2021-04-12 16:40:40.261 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:40:40.263 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:40:40.264 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:40:40.266 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:40:40.266 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:40:40.267 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#8]
[DEBUG] 2021-04-12 16:40:40.267 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Neutral
[DEBUG] 2021-04-12 16:40:40.267 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:40.267 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Spawn
[DEBUG] 2021-04-12 16:40:40.267 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:40.267 [main] TwoPhaseLoad - Processing attribute `media` : value = Comic
[DEBUG] 2021-04-12 16:40:40.267 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:40.267 [main] TwoPhaseLoad - Processing attribute `name` : value = Spawn
[DEBUG] 2021-04-12 16:40:40.267 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:40.267 [main] TwoPhaseLoad - Processing attribute `species` : value = Hellspawn
[DEBUG] 2021-04-12 16:40:40.267 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:40:40.267 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#8]
[DEBUG] 2021-04-12 16:40:40.267 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:40:40.267 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#8
[DEBUG] 2021-04-12 16:40:40.267 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:45:59.083 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 16:45:59.087 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 16:45:59.093 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 16:45:59.210 [http-nio-8080-exec-3] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 16:45:59.212 [http-nio-8080-exec-3] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 16:45:59.418 [http-nio-8080-exec-3] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 16:45:59.418 [http-nio-8080-exec-3] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 16:45:59.449 [http-nio-8080-exec-3] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 16:45:59.847 [http-nio-8080-exec-3] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 16:45:59.873 [http-nio-8080-exec-3] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 16:45:59.875 [http-nio-8080-exec-3] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 16:45:59.904 [http-nio-8080-exec-3] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 16:45:59.953 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3f397883
[DEBUG] 2021-04-12 16:45:59.953 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3f397883
[DEBUG] 2021-04-12 16:45:59.953 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3f397883
[DEBUG] 2021-04-12 16:45:59.954 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4fb2f29d
[DEBUG] 2021-04-12 16:45:59.955 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@322ff2b7
[DEBUG] 2021-04-12 16:45:59.956 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@77ac5889
[DEBUG] 2021-04-12 16:45:59.957 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@778246ed
[DEBUG] 2021-04-12 16:45:59.957 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@778246ed
[DEBUG] 2021-04-12 16:45:59.957 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@778246ed
[DEBUG] 2021-04-12 16:45:59.959 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6c42972e
[DEBUG] 2021-04-12 16:45:59.959 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6c42972e
[DEBUG] 2021-04-12 16:45:59.959 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6c42972e
[DEBUG] 2021-04-12 16:45:59.961 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1ce622c5
[DEBUG] 2021-04-12 16:45:59.962 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1ce622c5
[DEBUG] 2021-04-12 16:45:59.962 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1ce622c5
[DEBUG] 2021-04-12 16:45:59.963 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@59cb4c25
[DEBUG] 2021-04-12 16:45:59.963 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@59cb4c25
[DEBUG] 2021-04-12 16:45:59.964 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@59cb4c25
[DEBUG] 2021-04-12 16:45:59.965 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@35968b87
[DEBUG] 2021-04-12 16:45:59.965 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@35968b87
[DEBUG] 2021-04-12 16:45:59.965 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@35968b87
[DEBUG] 2021-04-12 16:45:59.966 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4c0e17d8
[DEBUG] 2021-04-12 16:45:59.966 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4c0e17d8
[DEBUG] 2021-04-12 16:45:59.967 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4c0e17d8
[DEBUG] 2021-04-12 16:45:59.968 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4b6107d3
[DEBUG] 2021-04-12 16:45:59.968 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4b6107d3
[DEBUG] 2021-04-12 16:45:59.968 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4b6107d3
[DEBUG] 2021-04-12 16:45:59.969 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2c06414
[DEBUG] 2021-04-12 16:45:59.969 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2c06414
[DEBUG] 2021-04-12 16:45:59.970 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@27fe011d
[DEBUG] 2021-04-12 16:45:59.971 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@27fe011d
[DEBUG] 2021-04-12 16:45:59.972 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6331b659
[DEBUG] 2021-04-12 16:45:59.972 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6331b659
[DEBUG] 2021-04-12 16:45:59.972 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@351c9d23
[DEBUG] 2021-04-12 16:45:59.973 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2813e541
[DEBUG] 2021-04-12 16:45:59.974 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7d1ace9d
[DEBUG] 2021-04-12 16:45:59.975 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7d1ace9d
[DEBUG] 2021-04-12 16:45:59.976 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@68e9174d
[DEBUG] 2021-04-12 16:45:59.978 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@68e9174d
[DEBUG] 2021-04-12 16:45:59.982 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@62f2f2d3
[DEBUG] 2021-04-12 16:45:59.982 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@62f2f2d3
[DEBUG] 2021-04-12 16:45:59.983 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@636b33c1
[DEBUG] 2021-04-12 16:45:59.983 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@636b33c1
[DEBUG] 2021-04-12 16:45:59.985 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6fb4b068
[DEBUG] 2021-04-12 16:45:59.985 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6fb4b068
[DEBUG] 2021-04-12 16:45:59.987 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6680fec7
[DEBUG] 2021-04-12 16:45:59.987 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6680fec7
[DEBUG] 2021-04-12 16:45:59.989 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6b545838
[DEBUG] 2021-04-12 16:45:59.989 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6b545838
[DEBUG] 2021-04-12 16:45:59.991 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59c89358
[DEBUG] 2021-04-12 16:45:59.991 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59c89358
[DEBUG] 2021-04-12 16:45:59.994 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2767fb17
[DEBUG] 2021-04-12 16:45:59.994 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2767fb17
[DEBUG] 2021-04-12 16:45:59.995 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@12858f42
[DEBUG] 2021-04-12 16:45:59.996 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@12858f42
[DEBUG] 2021-04-12 16:45:59.997 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3e72610d
[DEBUG] 2021-04-12 16:45:59.997 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3e72610d
[DEBUG] 2021-04-12 16:45:59.998 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@153d5729
[DEBUG] 2021-04-12 16:45:59.999 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@153d5729
[DEBUG] 2021-04-12 16:45:59.999 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@153d5729
[DEBUG] 2021-04-12 16:46:00.001 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5948ca41
[DEBUG] 2021-04-12 16:46:00.003 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2f12e1e0
[DEBUG] 2021-04-12 16:46:00.003 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2f12e1e0
[DEBUG] 2021-04-12 16:46:00.004 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2f12e1e0
[DEBUG] 2021-04-12 16:46:00.004 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a754bcd
[DEBUG] 2021-04-12 16:46:00.006 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5e0137b3
[DEBUG] 2021-04-12 16:46:00.006 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5e0137b3
[DEBUG] 2021-04-12 16:46:00.007 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7d6dd4ce
[DEBUG] 2021-04-12 16:46:00.007 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7d6dd4ce
[DEBUG] 2021-04-12 16:46:00.008 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7df7a56b
[DEBUG] 2021-04-12 16:46:00.008 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7df7a56b
[DEBUG] 2021-04-12 16:46:00.009 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@578b8095
[DEBUG] 2021-04-12 16:46:00.009 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@578b8095
[DEBUG] 2021-04-12 16:46:00.010 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@48af6e4
[DEBUG] 2021-04-12 16:46:00.010 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@48af6e4
[DEBUG] 2021-04-12 16:46:00.011 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c91043e
[DEBUG] 2021-04-12 16:46:00.012 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@d7ac4e0
[DEBUG] 2021-04-12 16:46:00.012 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@d7ac4e0
[DEBUG] 2021-04-12 16:46:00.012 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@d7ac4e0
[DEBUG] 2021-04-12 16:46:00.014 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@e88611d
[DEBUG] 2021-04-12 16:46:00.014 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@e88611d
[DEBUG] 2021-04-12 16:46:00.014 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@e88611d
[DEBUG] 2021-04-12 16:46:00.015 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2f2d908d
[DEBUG] 2021-04-12 16:46:00.016 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58942d1d
[DEBUG] 2021-04-12 16:46:00.017 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1e3efb77
[DEBUG] 2021-04-12 16:46:00.017 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1e3efb77
[DEBUG] 2021-04-12 16:46:00.017 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1e3efb77
[DEBUG] 2021-04-12 16:46:00.018 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3296fa26
[DEBUG] 2021-04-12 16:46:00.018 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3296fa26
[DEBUG] 2021-04-12 16:46:00.018 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3296fa26
[DEBUG] 2021-04-12 16:46:00.019 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2d77c939
[DEBUG] 2021-04-12 16:46:00.020 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7d91d3fd
[DEBUG] 2021-04-12 16:46:00.022 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5c524c98
[DEBUG] 2021-04-12 16:46:00.022 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5c524c98
[DEBUG] 2021-04-12 16:46:00.023 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4c1e218e
[DEBUG] 2021-04-12 16:46:00.025 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3e27ee66
[DEBUG] 2021-04-12 16:46:00.025 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e27ee66
[DEBUG] 2021-04-12 16:46:00.030 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4087a4a3
[DEBUG] 2021-04-12 16:46:00.030 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4087a4a3
[DEBUG] 2021-04-12 16:46:00.031 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@432656a4
[DEBUG] 2021-04-12 16:46:00.032 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3d3e8b6d
[DEBUG] 2021-04-12 16:46:00.033 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@24eb4042
[DEBUG] 2021-04-12 16:46:00.037 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@352ac294
[DEBUG] 2021-04-12 16:46:00.037 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@352ac294
[DEBUG] 2021-04-12 16:46:00.038 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@140cd24e
[DEBUG] 2021-04-12 16:46:00.038 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1e18c59f
[DEBUG] 2021-04-12 16:46:00.038 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@62b2f5cc
[DEBUG] 2021-04-12 16:46:00.038 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@191aaad8
[DEBUG] 2021-04-12 16:46:00.039 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6bf69517
[DEBUG] 2021-04-12 16:46:00.039 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@331a91cb
[DEBUG] 2021-04-12 16:46:00.039 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@46730ef1
[DEBUG] 2021-04-12 16:46:00.040 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@af3308d
[DEBUG] 2021-04-12 16:46:00.104 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 16:46:00.105 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 16:46:00.106 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:46:00.108 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:46:00.109 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 16:46:00.110 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 16:46:00.111 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 16:46:00.112 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:46:00.113 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 16:46:00.114 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 16:46:00.114 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 16:46:00.115 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 16:46:00.115 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:46:00.116 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 16:46:00.144 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 16:46:00.144 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 16:46:00.144 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 16:46:00.402 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 16:46:01.092 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:46:01.092 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:46:01.092 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 16:46:01.136 [http-nio-8080-exec-3] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 16:46:01.164 [http-nio-8080-exec-3] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 16:46:01.261 [http-nio-8080-exec-3] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 16:46:01.308 [http-nio-8080-exec-3] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 16:46:01.314 [http-nio-8080-exec-3] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@60cd1c38] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1402ac7e]
[DEBUG] 2021-04-12 16:46:01.385 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 16:46:01.416 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 16:46:01.424 [http-nio-8080-exec-3] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 16:46:01.445 [http-nio-8080-exec-3] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 16:46:01.499 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:46:01.503 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 16:46:01.506 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 16:46:01.511 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 16:46:01.514 [http-nio-8080-exec-3] PropertyBinder - Building property id
[DEBUG] 2021-04-12 16:46:01.520 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 16:46:01.522 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:46:01.523 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 16:46:01.523 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 16:46:01.524 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 16:46:01.524 [http-nio-8080-exec-3] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 16:46:01.524 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:46:01.524 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 16:46:01.524 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 16:46:01.524 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 16:46:01.524 [http-nio-8080-exec-3] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 16:46:01.525 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:46:01.525 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 16:46:01.525 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 16:46:01.525 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 16:46:01.526 [http-nio-8080-exec-3] PropertyBinder - Building property media
[DEBUG] 2021-04-12 16:46:01.531 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:46:01.533 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 16:46:01.533 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 16:46:01.533 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 16:46:01.533 [http-nio-8080-exec-3] PropertyBinder - Building property name
[DEBUG] 2021-04-12 16:46:01.534 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:46:01.534 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 16:46:01.534 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 16:46:01.534 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 16:46:01.534 [http-nio-8080-exec-3] PropertyBinder - Building property species
[DEBUG] 2021-04-12 16:46:01.538 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 16:46:01.538 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 16:46:01.538 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 16:46:01.538 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 16:46:01.538 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 16:46:01.538 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 16:46:01.542 [http-nio-8080-exec-3] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 16:46:01.593 [http-nio-8080-exec-3] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 16:46:01.594 [http-nio-8080-exec-3] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 16:46:01.594 [http-nio-8080-exec-3] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 16:46:01.594 [http-nio-8080-exec-3] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 16:46:01.594 [http-nio-8080-exec-3] Settings - Statistics: disabled
[DEBUG] 2021-04-12 16:46:01.594 [http-nio-8080-exec-3] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 16:46:01.594 [http-nio-8080-exec-3] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 16:46:01.594 [http-nio-8080-exec-3] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 16:46:01.594 [http-nio-8080-exec-3] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 16:46:01.594 [http-nio-8080-exec-3] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 16:46:01.594 [http-nio-8080-exec-3] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 16:46:01.594 [http-nio-8080-exec-3] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 16:46:01.594 [http-nio-8080-exec-3] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 16:46:01.594 [http-nio-8080-exec-3] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 16:46:01.594 [http-nio-8080-exec-3] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 16:46:01.595 [http-nio-8080-exec-3] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 16:46:01.595 [http-nio-8080-exec-3] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 16:46:01.595 [http-nio-8080-exec-3] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 16:46:01.595 [http-nio-8080-exec-3] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 16:46:01.598 [http-nio-8080-exec-3] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 16:46:01.598 [http-nio-8080-exec-3] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 16:46:01.598 [http-nio-8080-exec-3] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 16:46:01.598 [http-nio-8080-exec-3] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 16:46:01.598 [http-nio-8080-exec-3] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 16:46:01.598 [http-nio-8080-exec-3] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 16:46:01.598 [http-nio-8080-exec-3] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 16:46:01.598 [http-nio-8080-exec-3] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 16:46:01.598 [http-nio-8080-exec-3] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 16:46:01.598 [http-nio-8080-exec-3] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 16:46:01.598 [http-nio-8080-exec-3] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 16:46:01.598 [http-nio-8080-exec-3] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 16:46:01.598 [http-nio-8080-exec-3] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 16:46:01.598 [http-nio-8080-exec-3] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 16:46:01.598 [http-nio-8080-exec-3] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 16:46:01.598 [http-nio-8080-exec-3] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 16:46:01.599 [http-nio-8080-exec-3] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 16:46:01.599 [http-nio-8080-exec-3] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 16:46:01.599 [http-nio-8080-exec-3] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 16:46:01.599 [http-nio-8080-exec-3] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 16:46:01.683 [http-nio-8080-exec-3] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 16:46:01.705 [http-nio-8080-exec-3] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 16:46:01.706 [http-nio-8080-exec-3] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, org.apache.activemq.broker.jmx.createConnector=false, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=13.0.1+9, user.name=Walker, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, derby.system.home=C:\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=13.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=Jun 30 2020 21:49:10 UTC, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, tomee.version=7.1.4, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.path=C:\tomcat\bin\bootstrap.jar;C:\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.57.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/tomcat/lib","C:/tomcat/lib/*.jar","C:\tomcat/lib","C:\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=6.3, openejb.version=7.1.4, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=C:\tomcat, user.dir=C:\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@248290a2, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0, authconfigprovider.factory=false}
[DEBUG] 2021-04-12 16:46:01.753 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:46:01.753 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:46:01.757 [http-nio-8080-exec-3] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 16:46:01.758 [http-nio-8080-exec-3] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 16:46:01.758 [http-nio-8080-exec-3] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@60cd1c38] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6e0e17d5]
[DEBUG] 2021-04-12 16:46:01.815 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:46:01.815 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:46:01.839 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:46:01.839 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:46:02.135 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 16:46:02.135 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 16:46:02.135 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 16:46:02.135 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:46:02.135 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 16:46:02.135 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 16:46:02.136 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:46:02.167 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35f9b8cb]
[DEBUG] 2021-04-12 16:46:02.168 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:46:02.169 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:46:02.169 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:46:02.169 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:46:02.169 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:46:02.170 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:46:02.188 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:46:02.201 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:46:02.204 [http-nio-8080-exec-3] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:46:02.204 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27553d63]
[DEBUG] 2021-04-12 16:46:02.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:46:02.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:46:02.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:46:02.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:46:02.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:46:02.204 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:46:02.204 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:46:02.204 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:46:02.205 [http-nio-8080-exec-3] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:46:02.242 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:46:02.242 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:46:02.280 [http-nio-8080-exec-3] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 16:46:02.280 [http-nio-8080-exec-3] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 16:46:02.281 [http-nio-8080-exec-3] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 16:46:02.293 [http-nio-8080-exec-3] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 16:46:02.293 [http-nio-8080-exec-3] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 16:46:02.294 [http-nio-8080-exec-3] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 16:46:02.294 [http-nio-8080-exec-3] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 16:46:02.298 [http-nio-8080-exec-3] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3351eedd
[DEBUG] 2021-04-12 16:46:02.300 [http-nio-8080-exec-3] SessionFactoryRegistry - Registering SessionFactory: dd5e93e5-eb4d-4dea-b2aa-cddcefeb9842 (<unnamed>)
[DEBUG] 2021-04-12 16:46:02.300 [http-nio-8080-exec-3] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 16:46:02.402 [http-nio-8080-exec-3] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 16:46:02.422 [http-nio-8080-exec-3] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:46:02.446 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:46:02.447 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:46:02.460 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 16:46:02.460 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:46:02.461 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:46:02.461 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 16:46:02.461 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:46:02.461 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 16:46:02.461 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:46:02.461 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 16:46:02.461 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:46:02.461 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 16:46:02.461 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:46:02.462 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 16:46:02.463 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:46:02.463 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 16:46:02.463 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:46:16.825 [http-nio-8080-exec-4] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-04-12 16:46:16.825 [http-nio-8080-exec-4] TransactionImpl - begin
[DEBUG] 2021-04-12 16:46:16.856 [http-nio-8080-exec-4] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-04-12 16:46:16.862 [http-nio-8080-exec-4] SQL - insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:46:16.885 [http-nio-8080-exec-4] IdentifierGeneratorHelper - Natively generated identity: 9
[DEBUG] 2021-04-12 16:46:16.885 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:46:16.887 [http-nio-8080-exec-4] TransactionImpl - committing
[DEBUG] 2021-04-12 16:46:16.887 [http-nio-8080-exec-4] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-04-12 16:46:16.887 [http-nio-8080-exec-4] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-04-12 16:46:16.903 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-04-12 16:46:16.903 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-04-12 16:46:16.906 [http-nio-8080-exec-4] EntityPrinter - Listing entities:
[DEBUG] 2021-04-12 16:46:16.906 [http-nio-8080-exec-4] EntityPrinter - team.entity.Character{franchise=Super Mario, species=Human, name=Mario, id=9, media=Video Game, alignment=Good}
[DEBUG] 2021-04-12 16:46:16.964 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:46:16.965 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:49:58.920 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 16:49:58.926 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 16:49:58.934 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 16:49:59.170 [http-nio-8080-exec-1] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 16:49:59.176 [http-nio-8080-exec-1] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 16:49:59.390 [http-nio-8080-exec-1] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 16:49:59.391 [http-nio-8080-exec-1] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 16:49:59.427 [http-nio-8080-exec-1] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 16:49:59.820 [http-nio-8080-exec-1] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 16:49:59.856 [http-nio-8080-exec-1] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 16:49:59.857 [http-nio-8080-exec-1] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 16:49:59.886 [http-nio-8080-exec-1] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 16:49:59.953 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6e63347c
[DEBUG] 2021-04-12 16:49:59.953 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6e63347c
[DEBUG] 2021-04-12 16:49:59.955 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6e63347c
[DEBUG] 2021-04-12 16:49:59.955 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@66a0a47
[DEBUG] 2021-04-12 16:49:59.956 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@62f1a783
[DEBUG] 2021-04-12 16:49:59.957 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@c0d383f
[DEBUG] 2021-04-12 16:49:59.958 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6a98118e
[DEBUG] 2021-04-12 16:49:59.958 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6a98118e
[DEBUG] 2021-04-12 16:49:59.958 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6a98118e
[DEBUG] 2021-04-12 16:49:59.960 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@280d002c
[DEBUG] 2021-04-12 16:49:59.961 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@280d002c
[DEBUG] 2021-04-12 16:49:59.961 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@280d002c
[DEBUG] 2021-04-12 16:49:59.963 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6cfb25a5
[DEBUG] 2021-04-12 16:49:59.963 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6cfb25a5
[DEBUG] 2021-04-12 16:49:59.964 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6cfb25a5
[DEBUG] 2021-04-12 16:49:59.965 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@11601485
[DEBUG] 2021-04-12 16:49:59.965 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@11601485
[DEBUG] 2021-04-12 16:49:59.965 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@11601485
[DEBUG] 2021-04-12 16:49:59.967 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@328f1cbe
[DEBUG] 2021-04-12 16:49:59.967 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@328f1cbe
[DEBUG] 2021-04-12 16:49:59.967 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@328f1cbe
[DEBUG] 2021-04-12 16:49:59.968 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7b17e929
[DEBUG] 2021-04-12 16:49:59.968 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7b17e929
[DEBUG] 2021-04-12 16:49:59.969 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b17e929
[DEBUG] 2021-04-12 16:49:59.971 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3c76e4b
[DEBUG] 2021-04-12 16:49:59.971 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3c76e4b
[DEBUG] 2021-04-12 16:49:59.971 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3c76e4b
[DEBUG] 2021-04-12 16:49:59.972 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7ce3efe8
[DEBUG] 2021-04-12 16:49:59.974 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7ce3efe8
[DEBUG] 2021-04-12 16:49:59.976 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@55ef8d64
[DEBUG] 2021-04-12 16:49:59.976 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@55ef8d64
[DEBUG] 2021-04-12 16:49:59.978 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@26510435
[DEBUG] 2021-04-12 16:49:59.978 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@26510435
[DEBUG] 2021-04-12 16:49:59.979 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@546a079
[DEBUG] 2021-04-12 16:49:59.979 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2031cf65
[DEBUG] 2021-04-12 16:49:59.981 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@60367cd2
[DEBUG] 2021-04-12 16:49:59.981 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@60367cd2
[DEBUG] 2021-04-12 16:49:59.983 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@72e3be37
[DEBUG] 2021-04-12 16:49:59.983 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@72e3be37
[DEBUG] 2021-04-12 16:49:59.987 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2dbdfd5c
[DEBUG] 2021-04-12 16:49:59.988 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2dbdfd5c
[DEBUG] 2021-04-12 16:49:59.989 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@19546cf9
[DEBUG] 2021-04-12 16:49:59.989 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@19546cf9
[DEBUG] 2021-04-12 16:49:59.991 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7bfe218
[DEBUG] 2021-04-12 16:49:59.995 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7bfe218
[DEBUG] 2021-04-12 16:49:59.996 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@866dbee
[DEBUG] 2021-04-12 16:49:59.996 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@866dbee
[DEBUG] 2021-04-12 16:49:59.999 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5694832
[DEBUG] 2021-04-12 16:49:59.999 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5694832
[DEBUG] 2021-04-12 16:50:00.001 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7b226bf7
[DEBUG] 2021-04-12 16:50:00.001 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7b226bf7
[DEBUG] 2021-04-12 16:50:00.003 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30e3625a
[DEBUG] 2021-04-12 16:50:00.003 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30e3625a
[DEBUG] 2021-04-12 16:50:00.006 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@18c15702
[DEBUG] 2021-04-12 16:50:00.006 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@18c15702
[DEBUG] 2021-04-12 16:50:00.008 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5478ab37
[DEBUG] 2021-04-12 16:50:00.008 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5478ab37
[DEBUG] 2021-04-12 16:50:00.010 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@272bbd7b
[DEBUG] 2021-04-12 16:50:00.010 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@272bbd7b
[DEBUG] 2021-04-12 16:50:00.010 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@272bbd7b
[DEBUG] 2021-04-12 16:50:00.013 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7fe32aaf
[DEBUG] 2021-04-12 16:50:00.014 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@55ff409
[DEBUG] 2021-04-12 16:50:00.014 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@55ff409
[DEBUG] 2021-04-12 16:50:00.016 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@55ff409
[DEBUG] 2021-04-12 16:50:00.016 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@20135007
[DEBUG] 2021-04-12 16:50:00.037 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3cc64a3a
[DEBUG] 2021-04-12 16:50:00.037 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3cc64a3a
[DEBUG] 2021-04-12 16:50:00.039 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@26c07bb8
[DEBUG] 2021-04-12 16:50:00.040 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@26c07bb8
[DEBUG] 2021-04-12 16:50:00.041 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@203ca771
[DEBUG] 2021-04-12 16:50:00.041 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@203ca771
[DEBUG] 2021-04-12 16:50:00.042 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@96762c2
[DEBUG] 2021-04-12 16:50:00.042 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@96762c2
[DEBUG] 2021-04-12 16:50:00.046 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@14630f52
[DEBUG] 2021-04-12 16:50:00.046 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@14630f52
[DEBUG] 2021-04-12 16:50:00.047 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1d0811f8
[DEBUG] 2021-04-12 16:50:00.049 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6ddd4580
[DEBUG] 2021-04-12 16:50:00.049 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6ddd4580
[DEBUG] 2021-04-12 16:50:00.049 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6ddd4580
[DEBUG] 2021-04-12 16:50:00.050 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1adf5fb
[DEBUG] 2021-04-12 16:50:00.050 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1adf5fb
[DEBUG] 2021-04-12 16:50:00.050 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1adf5fb
[DEBUG] 2021-04-12 16:50:00.051 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6854a2e
[DEBUG] 2021-04-12 16:50:00.053 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2246503d
[DEBUG] 2021-04-12 16:50:00.054 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2902794b
[DEBUG] 2021-04-12 16:50:00.054 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2902794b
[DEBUG] 2021-04-12 16:50:00.056 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2902794b
[DEBUG] 2021-04-12 16:50:00.057 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ceb35b9
[DEBUG] 2021-04-12 16:50:00.057 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ceb35b9
[DEBUG] 2021-04-12 16:50:00.057 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ceb35b9
[DEBUG] 2021-04-12 16:50:00.058 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@77d8e39f
[DEBUG] 2021-04-12 16:50:00.058 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1a41f2be
[DEBUG] 2021-04-12 16:50:00.060 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7a3ec8fe
[DEBUG] 2021-04-12 16:50:00.061 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7a3ec8fe
[DEBUG] 2021-04-12 16:50:00.061 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@401e5cef
[DEBUG] 2021-04-12 16:50:00.063 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6ead3933
[DEBUG] 2021-04-12 16:50:00.064 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6ead3933
[DEBUG] 2021-04-12 16:50:00.066 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1175c48e
[DEBUG] 2021-04-12 16:50:00.067 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1175c48e
[DEBUG] 2021-04-12 16:50:00.068 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e339d06
[DEBUG] 2021-04-12 16:50:00.069 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@573f9fbe
[DEBUG] 2021-04-12 16:50:00.071 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@13e5ae22
[DEBUG] 2021-04-12 16:50:00.074 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3eb448d8
[DEBUG] 2021-04-12 16:50:00.075 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3eb448d8
[DEBUG] 2021-04-12 16:50:00.076 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6e85beea
[DEBUG] 2021-04-12 16:50:00.076 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@25f95b9e
[DEBUG] 2021-04-12 16:50:00.076 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1d2da08b
[DEBUG] 2021-04-12 16:50:00.076 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31bdfd3b
[DEBUG] 2021-04-12 16:50:00.077 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@720c7708
[DEBUG] 2021-04-12 16:50:00.077 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1dc6f77c
[DEBUG] 2021-04-12 16:50:00.077 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d1f35b7
[DEBUG] 2021-04-12 16:50:00.078 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3315490a
[DEBUG] 2021-04-12 16:50:00.133 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 16:50:00.134 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 16:50:00.135 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:50:00.138 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:50:00.139 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 16:50:00.141 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 16:50:00.141 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 16:50:00.146 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:50:00.147 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 16:50:00.148 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 16:50:00.149 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 16:50:00.150 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 16:50:00.150 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:50:00.151 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 16:50:00.166 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 16:50:00.166 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 16:50:00.166 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 16:50:00.451 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 16:50:01.214 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:50:01.214 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:50:01.214 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 16:50:01.248 [http-nio-8080-exec-1] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 16:50:01.274 [http-nio-8080-exec-1] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 16:50:01.325 [http-nio-8080-exec-1] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 16:50:01.385 [http-nio-8080-exec-1] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 16:50:01.390 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c69d72c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@c66a14b]
[DEBUG] 2021-04-12 16:50:01.471 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 16:50:01.505 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 16:50:01.513 [http-nio-8080-exec-1] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 16:50:01.517 [http-nio-8080-exec-1] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 16:50:01.572 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:50:01.575 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 16:50:01.578 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 16:50:01.582 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 16:50:01.586 [http-nio-8080-exec-1] PropertyBinder - Building property id
[DEBUG] 2021-04-12 16:50:01.591 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 16:50:01.596 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:50:01.596 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 16:50:01.596 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 16:50:01.597 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 16:50:01.597 [http-nio-8080-exec-1] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 16:50:01.597 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:50:01.597 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 16:50:01.598 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 16:50:01.598 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 16:50:01.598 [http-nio-8080-exec-1] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 16:50:01.598 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:50:01.598 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 16:50:01.598 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 16:50:01.598 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 16:50:01.598 [http-nio-8080-exec-1] PropertyBinder - Building property media
[DEBUG] 2021-04-12 16:50:01.599 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:50:01.600 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 16:50:01.600 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 16:50:01.600 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 16:50:01.600 [http-nio-8080-exec-1] PropertyBinder - Building property name
[DEBUG] 2021-04-12 16:50:01.600 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:50:01.600 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 16:50:01.600 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 16:50:01.600 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 16:50:01.600 [http-nio-8080-exec-1] PropertyBinder - Building property species
[DEBUG] 2021-04-12 16:50:01.605 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 16:50:01.605 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 16:50:01.605 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 16:50:01.605 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 16:50:01.605 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 16:50:01.605 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 16:50:01.607 [http-nio-8080-exec-1] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 16:50:01.653 [http-nio-8080-exec-1] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 16:50:01.654 [http-nio-8080-exec-1] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 16:50:01.655 [http-nio-8080-exec-1] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 16:50:01.655 [http-nio-8080-exec-1] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 16:50:01.655 [http-nio-8080-exec-1] Settings - Statistics: disabled
[DEBUG] 2021-04-12 16:50:01.655 [http-nio-8080-exec-1] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 16:50:01.655 [http-nio-8080-exec-1] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 16:50:01.655 [http-nio-8080-exec-1] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 16:50:01.655 [http-nio-8080-exec-1] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 16:50:01.655 [http-nio-8080-exec-1] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 16:50:01.655 [http-nio-8080-exec-1] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 16:50:01.655 [http-nio-8080-exec-1] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 16:50:01.655 [http-nio-8080-exec-1] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 16:50:01.655 [http-nio-8080-exec-1] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 16:50:01.655 [http-nio-8080-exec-1] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 16:50:01.655 [http-nio-8080-exec-1] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 16:50:01.655 [http-nio-8080-exec-1] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 16:50:01.655 [http-nio-8080-exec-1] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 16:50:01.655 [http-nio-8080-exec-1] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 16:50:01.658 [http-nio-8080-exec-1] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 16:50:01.658 [http-nio-8080-exec-1] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 16:50:01.658 [http-nio-8080-exec-1] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 16:50:01.658 [http-nio-8080-exec-1] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 16:50:01.659 [http-nio-8080-exec-1] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 16:50:01.659 [http-nio-8080-exec-1] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 16:50:01.659 [http-nio-8080-exec-1] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 16:50:01.659 [http-nio-8080-exec-1] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 16:50:01.659 [http-nio-8080-exec-1] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 16:50:01.659 [http-nio-8080-exec-1] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 16:50:01.659 [http-nio-8080-exec-1] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 16:50:01.659 [http-nio-8080-exec-1] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 16:50:01.659 [http-nio-8080-exec-1] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 16:50:01.659 [http-nio-8080-exec-1] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 16:50:01.659 [http-nio-8080-exec-1] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 16:50:01.659 [http-nio-8080-exec-1] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 16:50:01.659 [http-nio-8080-exec-1] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 16:50:01.659 [http-nio-8080-exec-1] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 16:50:01.659 [http-nio-8080-exec-1] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 16:50:01.659 [http-nio-8080-exec-1] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 16:50:01.766 [http-nio-8080-exec-1] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 16:50:01.810 [http-nio-8080-exec-1] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 16:50:01.811 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, org.apache.activemq.broker.jmx.createConnector=false, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=13.0.1+9, user.name=Walker, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, derby.system.home=C:\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=13.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=Jun 30 2020 21:49:10 UTC, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, tomee.version=7.1.4, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.path=C:\tomcat\bin\bootstrap.jar;C:\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.57.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/tomcat/lib","C:/tomcat/lib/*.jar","C:\tomcat/lib","C:\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=6.3, openejb.version=7.1.4, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=C:\tomcat, user.dir=C:\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5788970, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0, authconfigprovider.factory=false}
[DEBUG] 2021-04-12 16:50:01.833 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:50:01.834 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:50:01.838 [http-nio-8080-exec-1] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 16:50:01.839 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 16:50:01.839 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c69d72c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7c08effc]
[DEBUG] 2021-04-12 16:50:01.900 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:50:01.900 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:50:01.922 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:50:01.922 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:50:02.262 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 16:50:02.262 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 16:50:02.263 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 16:50:02.263 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:50:02.263 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 16:50:02.263 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 16:50:02.263 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:50:02.297 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b4fd934]
[DEBUG] 2021-04-12 16:50:02.298 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:50:02.299 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:50:02.299 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:50:02.300 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:50:02.300 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:50:02.300 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:50:02.315 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:50:02.320 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:50:02.323 [http-nio-8080-exec-1] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:50:02.323 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60d45ea5]
[DEBUG] 2021-04-12 16:50:02.323 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:50:02.323 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:50:02.323 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:50:02.323 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:50:02.323 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:50:02.323 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:50:02.323 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:50:02.323 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:50:02.324 [http-nio-8080-exec-1] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:50:02.340 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:50:02.340 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:50:02.378 [http-nio-8080-exec-1] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 16:50:02.378 [http-nio-8080-exec-1] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 16:50:02.378 [http-nio-8080-exec-1] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 16:50:02.390 [http-nio-8080-exec-1] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 16:50:02.390 [http-nio-8080-exec-1] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 16:50:02.391 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 16:50:02.391 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 16:50:02.398 [http-nio-8080-exec-1] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7d48a612
[DEBUG] 2021-04-12 16:50:02.400 [http-nio-8080-exec-1] SessionFactoryRegistry - Registering SessionFactory: 089b8f27-eaa7-45bb-943b-5ae790e1b941 (<unnamed>)
[DEBUG] 2021-04-12 16:50:02.400 [http-nio-8080-exec-1] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 16:50:02.508 [http-nio-8080-exec-1] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 16:50:02.550 [http-nio-8080-exec-1] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:50:02.573 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:50:02.573 [http-nio-8080-exec-1] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#7
[DEBUG] 2021-04-12 16:50:02.574 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:50:11.322 [http-nio-8080-exec-4] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:50:11.325 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:50:11.329 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:50:11.342 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [team.entity.Character#4]
[DEBUG] 2021-04-12 16:50:11.343 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:50:11.344 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:50:11.344 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `franchise` : value = The Matrix
[DEBUG] 2021-04-12 16:50:11.344 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:50:11.344 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `media` : value = movie
[DEBUG] 2021-04-12 16:50:11.344 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:50:11.344 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `name` : value = Neo
[DEBUG] 2021-04-12 16:50:11.344 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:50:11.344 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `species` : value = Human
[DEBUG] 2021-04-12 16:50:11.344 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:50:11.345 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [team.entity.Character#4]
[DEBUG] 2021-04-12 16:50:11.346 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:50:11.346 [http-nio-8080-exec-4] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#4
[DEBUG] 2021-04-12 16:50:11.346 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:50:59.305 [http-nio-8080-exec-7] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-04-12 16:50:59.306 [http-nio-8080-exec-7] TransactionImpl - begin
[DEBUG] 2021-04-12 16:50:59.315 [http-nio-8080-exec-7] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-04-12 16:50:59.320 [http-nio-8080-exec-7] SQL - insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:50:59.330 [http-nio-8080-exec-7] IdentifierGeneratorHelper - Natively generated identity: 10
[DEBUG] 2021-04-12 16:50:59.330 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:50:59.331 [http-nio-8080-exec-7] TransactionImpl - committing
[DEBUG] 2021-04-12 16:50:59.332 [http-nio-8080-exec-7] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-04-12 16:50:59.332 [http-nio-8080-exec-7] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-04-12 16:50:59.334 [http-nio-8080-exec-7] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-04-12 16:50:59.334 [http-nio-8080-exec-7] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-04-12 16:50:59.336 [http-nio-8080-exec-7] EntityPrinter - Listing entities:
[DEBUG] 2021-04-12 16:50:59.336 [http-nio-8080-exec-7] EntityPrinter - team.entity.Character{franchise=Mega Man, species=Reploid, name=X, id=10, media=Video Game, alignment=Good}
[DEBUG] 2021-04-12 16:50:59.434 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:50:59.435 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:53:24.212 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 16:53:24.215 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 16:53:24.221 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 16:53:24.349 [http-nio-8080-exec-10] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 16:53:24.353 [http-nio-8080-exec-10] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 16:53:24.570 [http-nio-8080-exec-10] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 16:53:24.571 [http-nio-8080-exec-10] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 16:53:24.599 [http-nio-8080-exec-10] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 16:53:24.990 [http-nio-8080-exec-10] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 16:53:25.021 [http-nio-8080-exec-10] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 16:53:25.023 [http-nio-8080-exec-10] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 16:53:25.156 [http-nio-8080-exec-10] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 16:53:25.263 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6fa6bebd
[DEBUG] 2021-04-12 16:53:25.263 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6fa6bebd
[DEBUG] 2021-04-12 16:53:25.263 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6fa6bebd
[DEBUG] 2021-04-12 16:53:25.264 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@155946ae
[DEBUG] 2021-04-12 16:53:25.265 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3f9d4a47
[DEBUG] 2021-04-12 16:53:25.266 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@55128e31
[DEBUG] 2021-04-12 16:53:25.267 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@99dce35
[DEBUG] 2021-04-12 16:53:25.267 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@99dce35
[DEBUG] 2021-04-12 16:53:25.268 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@99dce35
[DEBUG] 2021-04-12 16:53:25.269 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@21f8b3bf
[DEBUG] 2021-04-12 16:53:25.270 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@21f8b3bf
[DEBUG] 2021-04-12 16:53:25.270 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@21f8b3bf
[DEBUG] 2021-04-12 16:53:25.272 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@78e13625
[DEBUG] 2021-04-12 16:53:25.273 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@78e13625
[DEBUG] 2021-04-12 16:53:25.273 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78e13625
[DEBUG] 2021-04-12 16:53:25.274 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@757b5554
[DEBUG] 2021-04-12 16:53:25.274 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@757b5554
[DEBUG] 2021-04-12 16:53:25.274 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@757b5554
[DEBUG] 2021-04-12 16:53:25.277 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@708a403b
[DEBUG] 2021-04-12 16:53:25.277 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@708a403b
[DEBUG] 2021-04-12 16:53:25.277 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@708a403b
[DEBUG] 2021-04-12 16:53:25.278 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5eaece55
[DEBUG] 2021-04-12 16:53:25.278 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5eaece55
[DEBUG] 2021-04-12 16:53:25.279 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5eaece55
[DEBUG] 2021-04-12 16:53:25.281 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2fe97008
[DEBUG] 2021-04-12 16:53:25.282 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2fe97008
[DEBUG] 2021-04-12 16:53:25.282 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2fe97008
[DEBUG] 2021-04-12 16:53:25.283 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@752e0230
[DEBUG] 2021-04-12 16:53:25.283 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@752e0230
[DEBUG] 2021-04-12 16:53:25.284 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5b71c5f
[DEBUG] 2021-04-12 16:53:25.284 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5b71c5f
[DEBUG] 2021-04-12 16:53:25.296 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@19986768
[DEBUG] 2021-04-12 16:53:25.297 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@19986768
[DEBUG] 2021-04-12 16:53:25.298 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@44e75e52
[DEBUG] 2021-04-12 16:53:25.299 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@adab2e9
[DEBUG] 2021-04-12 16:53:25.300 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3712bd4c
[DEBUG] 2021-04-12 16:53:25.301 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3712bd4c
[DEBUG] 2021-04-12 16:53:25.302 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@29b98660
[DEBUG] 2021-04-12 16:53:25.302 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@29b98660
[DEBUG] 2021-04-12 16:53:25.306 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2aad65f4
[DEBUG] 2021-04-12 16:53:25.324 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2aad65f4
[DEBUG] 2021-04-12 16:53:25.326 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1993749f
[DEBUG] 2021-04-12 16:53:25.326 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1993749f
[DEBUG] 2021-04-12 16:53:25.336 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@249903ea
[DEBUG] 2021-04-12 16:53:25.337 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@249903ea
[DEBUG] 2021-04-12 16:53:25.359 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@61364848
[DEBUG] 2021-04-12 16:53:25.359 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@61364848
[DEBUG] 2021-04-12 16:53:25.361 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70e449e3
[DEBUG] 2021-04-12 16:53:25.361 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70e449e3
[DEBUG] 2021-04-12 16:53:25.362 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2c86c1c4
[DEBUG] 2021-04-12 16:53:25.363 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2c86c1c4
[DEBUG] 2021-04-12 16:53:25.365 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@37242a3b
[DEBUG] 2021-04-12 16:53:25.365 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@37242a3b
[DEBUG] 2021-04-12 16:53:25.367 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7c846278
[DEBUG] 2021-04-12 16:53:25.367 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c846278
[DEBUG] 2021-04-12 16:53:25.368 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3b1c66fd
[DEBUG] 2021-04-12 16:53:25.369 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b1c66fd
[DEBUG] 2021-04-12 16:53:25.370 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@8b4a56e
[DEBUG] 2021-04-12 16:53:25.371 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@8b4a56e
[DEBUG] 2021-04-12 16:53:25.371 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@8b4a56e
[DEBUG] 2021-04-12 16:53:25.374 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6cbe95d
[DEBUG] 2021-04-12 16:53:25.375 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@860891a
[DEBUG] 2021-04-12 16:53:25.375 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@860891a
[DEBUG] 2021-04-12 16:53:25.376 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@860891a
[DEBUG] 2021-04-12 16:53:25.377 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@138d9116
[DEBUG] 2021-04-12 16:53:25.379 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@576453f9
[DEBUG] 2021-04-12 16:53:25.379 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@576453f9
[DEBUG] 2021-04-12 16:53:25.405 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@39862f3a
[DEBUG] 2021-04-12 16:53:25.406 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@39862f3a
[DEBUG] 2021-04-12 16:53:25.407 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a09d382
[DEBUG] 2021-04-12 16:53:25.407 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a09d382
[DEBUG] 2021-04-12 16:53:25.408 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@27d2c4e6
[DEBUG] 2021-04-12 16:53:25.409 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@27d2c4e6
[DEBUG] 2021-04-12 16:53:25.410 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@30da8096
[DEBUG] 2021-04-12 16:53:25.410 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@30da8096
[DEBUG] 2021-04-12 16:53:25.411 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@76a17d98
[DEBUG] 2021-04-12 16:53:25.413 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7b2ce6b9
[DEBUG] 2021-04-12 16:53:25.413 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7b2ce6b9
[DEBUG] 2021-04-12 16:53:25.413 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7b2ce6b9
[DEBUG] 2021-04-12 16:53:25.414 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@157fd348
[DEBUG] 2021-04-12 16:53:25.415 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@157fd348
[DEBUG] 2021-04-12 16:53:25.415 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@157fd348
[DEBUG] 2021-04-12 16:53:25.416 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4540bf
[DEBUG] 2021-04-12 16:53:25.417 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3d7654f0
[DEBUG] 2021-04-12 16:53:25.420 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@59f26f50
[DEBUG] 2021-04-12 16:53:25.420 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@59f26f50
[DEBUG] 2021-04-12 16:53:25.422 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@59f26f50
[DEBUG] 2021-04-12 16:53:25.423 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7a8fdde4
[DEBUG] 2021-04-12 16:53:25.423 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7a8fdde4
[DEBUG] 2021-04-12 16:53:25.423 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7a8fdde4
[DEBUG] 2021-04-12 16:53:25.424 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@43c30b8f
[DEBUG] 2021-04-12 16:53:25.425 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@34e9d227
[DEBUG] 2021-04-12 16:53:25.427 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6255a7d8
[DEBUG] 2021-04-12 16:53:25.427 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6255a7d8
[DEBUG] 2021-04-12 16:53:25.428 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@66ff59d0
[DEBUG] 2021-04-12 16:53:25.434 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1097c1a6
[DEBUG] 2021-04-12 16:53:25.435 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1097c1a6
[DEBUG] 2021-04-12 16:53:25.437 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@31a6e18d
[DEBUG] 2021-04-12 16:53:25.437 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@31a6e18d
[DEBUG] 2021-04-12 16:53:25.438 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6592ffa2
[DEBUG] 2021-04-12 16:53:25.440 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@94e0683
[DEBUG] 2021-04-12 16:53:25.442 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@824db7c
[DEBUG] 2021-04-12 16:53:25.446 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@15aa81e4
[DEBUG] 2021-04-12 16:53:25.447 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@15aa81e4
[DEBUG] 2021-04-12 16:53:25.448 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@50cf2502
[DEBUG] 2021-04-12 16:53:25.448 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1a090a44
[DEBUG] 2021-04-12 16:53:25.448 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@28158522
[DEBUG] 2021-04-12 16:53:25.448 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@60ed03f1
[DEBUG] 2021-04-12 16:53:25.451 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4923dddb
[DEBUG] 2021-04-12 16:53:25.451 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1b2aa591
[DEBUG] 2021-04-12 16:53:25.451 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f120f43
[DEBUG] 2021-04-12 16:53:25.451 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@17e875db
[DEBUG] 2021-04-12 16:53:25.502 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 16:53:25.503 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 16:53:25.504 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:53:25.507 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 16:53:25.509 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 16:53:25.511 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 16:53:25.511 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 16:53:25.513 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:53:25.514 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 16:53:25.514 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 16:53:25.515 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 16:53:25.516 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 16:53:25.516 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 16:53:25.517 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 16:53:25.525 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 16:53:25.525 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 16:53:25.526 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 16:53:25.852 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 16:53:26.620 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:53:26.620 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 16:53:26.620 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 16:53:26.676 [http-nio-8080-exec-10] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 16:53:26.704 [http-nio-8080-exec-10] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 16:53:26.750 [http-nio-8080-exec-10] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 16:53:26.818 [http-nio-8080-exec-10] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 16:53:26.827 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18f7c3b0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@140aeb33]
[DEBUG] 2021-04-12 16:53:26.944 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 16:53:26.989 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 16:53:26.999 [http-nio-8080-exec-10] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 16:53:27.003 [http-nio-8080-exec-10] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 16:53:27.041 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:53:27.045 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 16:53:27.048 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 16:53:27.052 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 16:53:27.056 [http-nio-8080-exec-10] PropertyBinder - Building property id
[DEBUG] 2021-04-12 16:53:27.063 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 16:53:27.064 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:53:27.066 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 16:53:27.066 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 16:53:27.067 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 16:53:27.067 [http-nio-8080-exec-10] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 16:53:27.068 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:53:27.068 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 16:53:27.068 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 16:53:27.068 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 16:53:27.068 [http-nio-8080-exec-10] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 16:53:27.069 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:53:27.069 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 16:53:27.070 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 16:53:27.070 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 16:53:27.070 [http-nio-8080-exec-10] PropertyBinder - Building property media
[DEBUG] 2021-04-12 16:53:27.075 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:53:27.076 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 16:53:27.076 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 16:53:27.076 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 16:53:27.076 [http-nio-8080-exec-10] PropertyBinder - Building property name
[DEBUG] 2021-04-12 16:53:27.076 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 16:53:27.077 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 16:53:27.077 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 16:53:27.077 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 16:53:27.077 [http-nio-8080-exec-10] PropertyBinder - Building property species
[DEBUG] 2021-04-12 16:53:27.086 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 16:53:27.086 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 16:53:27.086 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 16:53:27.086 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 16:53:27.086 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 16:53:27.086 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 16:53:27.088 [http-nio-8080-exec-10] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 16:53:27.161 [http-nio-8080-exec-10] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 16:53:27.162 [http-nio-8080-exec-10] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 16:53:27.162 [http-nio-8080-exec-10] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 16:53:27.162 [http-nio-8080-exec-10] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 16:53:27.162 [http-nio-8080-exec-10] Settings - Statistics: disabled
[DEBUG] 2021-04-12 16:53:27.162 [http-nio-8080-exec-10] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 16:53:27.162 [http-nio-8080-exec-10] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 16:53:27.162 [http-nio-8080-exec-10] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 16:53:27.162 [http-nio-8080-exec-10] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 16:53:27.162 [http-nio-8080-exec-10] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 16:53:27.162 [http-nio-8080-exec-10] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 16:53:27.162 [http-nio-8080-exec-10] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 16:53:27.162 [http-nio-8080-exec-10] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 16:53:27.162 [http-nio-8080-exec-10] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 16:53:27.166 [http-nio-8080-exec-10] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 16:53:27.166 [http-nio-8080-exec-10] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 16:53:27.166 [http-nio-8080-exec-10] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 16:53:27.166 [http-nio-8080-exec-10] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 16:53:27.166 [http-nio-8080-exec-10] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 16:53:27.169 [http-nio-8080-exec-10] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 16:53:27.169 [http-nio-8080-exec-10] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 16:53:27.169 [http-nio-8080-exec-10] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 16:53:27.169 [http-nio-8080-exec-10] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 16:53:27.169 [http-nio-8080-exec-10] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 16:53:27.169 [http-nio-8080-exec-10] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 16:53:27.169 [http-nio-8080-exec-10] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 16:53:27.169 [http-nio-8080-exec-10] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 16:53:27.169 [http-nio-8080-exec-10] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 16:53:27.169 [http-nio-8080-exec-10] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 16:53:27.169 [http-nio-8080-exec-10] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 16:53:27.169 [http-nio-8080-exec-10] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 16:53:27.169 [http-nio-8080-exec-10] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 16:53:27.169 [http-nio-8080-exec-10] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 16:53:27.169 [http-nio-8080-exec-10] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 16:53:27.169 [http-nio-8080-exec-10] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 16:53:27.169 [http-nio-8080-exec-10] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 16:53:27.169 [http-nio-8080-exec-10] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 16:53:27.169 [http-nio-8080-exec-10] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 16:53:27.170 [http-nio-8080-exec-10] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 16:53:27.277 [http-nio-8080-exec-10] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 16:53:27.306 [http-nio-8080-exec-10] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 16:53:27.306 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, org.apache.activemq.broker.jmx.createConnector=false, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=13.0.1+9, user.name=Walker, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, derby.system.home=C:\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=13.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=Jun 30 2020 21:49:10 UTC, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, tomee.version=7.1.4, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.path=C:\tomcat\bin\bootstrap.jar;C:\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.57.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/tomcat/lib","C:/tomcat/lib/*.jar","C:\tomcat/lib","C:\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=6.3, openejb.version=7.1.4, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=C:\tomcat, user.dir=C:\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5fc10ab7, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0, authconfigprovider.factory=false}
[DEBUG] 2021-04-12 16:53:27.338 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:53:27.338 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:53:27.342 [http-nio-8080-exec-10] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 16:53:27.355 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 16:53:27.355 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18f7c3b0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3ff3b5a7]
[DEBUG] 2021-04-12 16:53:27.450 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:53:27.450 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:53:27.478 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 16:53:27.478 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 16:53:27.819 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 16:53:27.819 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 16:53:27.819 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 16:53:27.819 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:53:27.819 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 16:53:27.819 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 16:53:27.819 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:53:27.859 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1386d66e]
[DEBUG] 2021-04-12 16:53:27.862 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:53:27.863 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:53:27.864 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:53:27.864 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:53:27.865 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:53:27.865 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:53:27.884 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:53:27.906 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:53:27.909 [http-nio-8080-exec-10] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:53:27.909 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@425f37ff]
[DEBUG] 2021-04-12 16:53:27.909 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 16:53:27.909 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 16:53:27.909 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 16:53:27.909 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 16:53:27.909 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 16:53:27.909 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 16:53:27.909 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 16:53:27.910 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 16:53:27.910 [http-nio-8080-exec-10] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:53:27.927 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:53:27.927 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:53:27.966 [http-nio-8080-exec-10] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 16:53:27.967 [http-nio-8080-exec-10] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 16:53:27.967 [http-nio-8080-exec-10] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 16:53:27.979 [http-nio-8080-exec-10] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 16:53:27.979 [http-nio-8080-exec-10] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 16:53:27.982 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 16:53:27.983 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 16:53:27.986 [http-nio-8080-exec-10] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@e96fa87
[DEBUG] 2021-04-12 16:53:27.988 [http-nio-8080-exec-10] SessionFactoryRegistry - Registering SessionFactory: 7d3c88ef-f08a-44d2-a8ea-4df4b2e6d435 (<unnamed>)
[DEBUG] 2021-04-12 16:53:27.988 [http-nio-8080-exec-10] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 16:53:28.087 [http-nio-8080-exec-10] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 16:53:28.108 [http-nio-8080-exec-10] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 16:53:28.140 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 16:53:28.141 [http-nio-8080-exec-10] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 16:53:28.155 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [team.entity.Character#10]
[DEBUG] 2021-04-12 16:53:28.157 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 16:53:28.157 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:53:28.157 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `franchise` : value = Mega Man
[DEBUG] 2021-04-12 16:53:28.157 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:53:28.157 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `media` : value = Video Game
[DEBUG] 2021-04-12 16:53:28.157 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:53:28.157 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `name` : value = X
[DEBUG] 2021-04-12 16:53:28.157 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:53:28.157 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `species` : value = Reploid
[DEBUG] 2021-04-12 16:53:28.157 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 16:53:28.160 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [team.entity.Character#10]
[DEBUG] 2021-04-12 16:53:28.161 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:53:28.161 [http-nio-8080-exec-10] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#10
[DEBUG] 2021-04-12 16:53:28.161 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:53:59.615 [http-nio-8080-exec-5] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-04-12 16:53:59.616 [http-nio-8080-exec-5] TransactionImpl - begin
[DEBUG] 2021-04-12 16:53:59.629 [http-nio-8080-exec-5] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-04-12 16:53:59.634 [http-nio-8080-exec-5] SQL - insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 16:53:59.665 [http-nio-8080-exec-5] IdentifierGeneratorHelper - Natively generated identity: 11
[DEBUG] 2021-04-12 16:53:59.665 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 16:53:59.666 [http-nio-8080-exec-5] TransactionImpl - committing
[DEBUG] 2021-04-12 16:53:59.667 [http-nio-8080-exec-5] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-04-12 16:53:59.667 [http-nio-8080-exec-5] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-04-12 16:53:59.668 [http-nio-8080-exec-5] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-04-12 16:53:59.668 [http-nio-8080-exec-5] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-04-12 16:53:59.670 [http-nio-8080-exec-5] EntityPrinter - Listing entities:
[DEBUG] 2021-04-12 16:53:59.671 [http-nio-8080-exec-5] EntityPrinter - team.entity.Character{franchise=Mega Man, species=Reploid, name=Zero, id=11, media=Video Game, alignment=Good}
[DEBUG] 2021-04-12 16:53:59.724 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 16:53:59.724 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 17:00:47.798 [http-nio-8080-exec-8] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 17:00:47.802 [http-nio-8080-exec-8] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 17:00:47.828 [http-nio-8080-exec-8] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 17:00:47.952 [http-nio-8080-exec-8] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 17:00:47.958 [http-nio-8080-exec-8] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 17:00:48.189 [http-nio-8080-exec-8] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 17:00:48.190 [http-nio-8080-exec-8] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 17:00:48.225 [http-nio-8080-exec-8] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 17:00:48.625 [http-nio-8080-exec-8] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 17:00:48.671 [http-nio-8080-exec-8] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 17:00:48.673 [http-nio-8080-exec-8] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 17:00:48.699 [http-nio-8080-exec-8] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 17:00:48.749 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5aa9ca1
[DEBUG] 2021-04-12 17:00:48.749 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5aa9ca1
[DEBUG] 2021-04-12 17:00:48.750 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5aa9ca1
[DEBUG] 2021-04-12 17:00:48.750 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@13855b89
[DEBUG] 2021-04-12 17:00:48.751 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2ee20f84
[DEBUG] 2021-04-12 17:00:48.752 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@27db11d0
[DEBUG] 2021-04-12 17:00:48.753 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6bfd88ed
[DEBUG] 2021-04-12 17:00:48.753 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6bfd88ed
[DEBUG] 2021-04-12 17:00:48.753 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6bfd88ed
[DEBUG] 2021-04-12 17:00:48.754 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@503c9cb4
[DEBUG] 2021-04-12 17:00:48.754 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@503c9cb4
[DEBUG] 2021-04-12 17:00:48.755 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@503c9cb4
[DEBUG] 2021-04-12 17:00:48.756 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@764c4638
[DEBUG] 2021-04-12 17:00:48.756 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@764c4638
[DEBUG] 2021-04-12 17:00:48.757 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@764c4638
[DEBUG] 2021-04-12 17:00:48.758 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@55958875
[DEBUG] 2021-04-12 17:00:48.758 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@55958875
[DEBUG] 2021-04-12 17:00:48.758 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55958875
[DEBUG] 2021-04-12 17:00:48.763 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1db15b1d
[DEBUG] 2021-04-12 17:00:48.763 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1db15b1d
[DEBUG] 2021-04-12 17:00:48.763 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1db15b1d
[DEBUG] 2021-04-12 17:00:48.764 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@50ebd5db
[DEBUG] 2021-04-12 17:00:48.764 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@50ebd5db
[DEBUG] 2021-04-12 17:00:48.764 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50ebd5db
[DEBUG] 2021-04-12 17:00:48.765 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@61f521ba
[DEBUG] 2021-04-12 17:00:48.765 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@61f521ba
[DEBUG] 2021-04-12 17:00:48.766 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@61f521ba
[DEBUG] 2021-04-12 17:00:48.767 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@450b7632
[DEBUG] 2021-04-12 17:00:48.767 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@450b7632
[DEBUG] 2021-04-12 17:00:48.768 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6e45f238
[DEBUG] 2021-04-12 17:00:48.768 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6e45f238
[DEBUG] 2021-04-12 17:00:48.769 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5075f6f8
[DEBUG] 2021-04-12 17:00:48.769 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5075f6f8
[DEBUG] 2021-04-12 17:00:48.769 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4ce5e9d
[DEBUG] 2021-04-12 17:00:48.770 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2ac085a8
[DEBUG] 2021-04-12 17:00:48.771 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5e8dbadd
[DEBUG] 2021-04-12 17:00:48.771 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5e8dbadd
[DEBUG] 2021-04-12 17:00:48.772 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@541d7458
[DEBUG] 2021-04-12 17:00:48.773 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@541d7458
[DEBUG] 2021-04-12 17:00:48.776 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@8a9b71
[DEBUG] 2021-04-12 17:00:48.776 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@8a9b71
[DEBUG] 2021-04-12 17:00:48.778 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@fd6052d
[DEBUG] 2021-04-12 17:00:48.778 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@fd6052d
[DEBUG] 2021-04-12 17:00:48.779 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@67a10fd
[DEBUG] 2021-04-12 17:00:48.780 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@67a10fd
[DEBUG] 2021-04-12 17:00:48.781 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@48bcb89a
[DEBUG] 2021-04-12 17:00:48.781 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@48bcb89a
[DEBUG] 2021-04-12 17:00:48.783 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4b266243
[DEBUG] 2021-04-12 17:00:48.783 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4b266243
[DEBUG] 2021-04-12 17:00:48.784 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@57d7b72d
[DEBUG] 2021-04-12 17:00:48.784 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@57d7b72d
[DEBUG] 2021-04-12 17:00:48.786 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3d6eb366
[DEBUG] 2021-04-12 17:00:48.786 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3d6eb366
[DEBUG] 2021-04-12 17:00:48.788 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5834d4bf
[DEBUG] 2021-04-12 17:00:48.788 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5834d4bf
[DEBUG] 2021-04-12 17:00:48.789 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@28f6ef6c
[DEBUG] 2021-04-12 17:00:48.790 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@28f6ef6c
[DEBUG] 2021-04-12 17:00:48.791 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@6ef33c71
[DEBUG] 2021-04-12 17:00:48.792 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6ef33c71
[DEBUG] 2021-04-12 17:00:48.792 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6ef33c71
[DEBUG] 2021-04-12 17:00:48.795 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@42269f6
[DEBUG] 2021-04-12 17:00:48.796 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@38c12193
[DEBUG] 2021-04-12 17:00:48.796 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@38c12193
[DEBUG] 2021-04-12 17:00:48.798 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@38c12193
[DEBUG] 2021-04-12 17:00:48.798 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@696d5ede
[DEBUG] 2021-04-12 17:00:48.800 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@24f9e2cc
[DEBUG] 2021-04-12 17:00:48.800 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@24f9e2cc
[DEBUG] 2021-04-12 17:00:48.802 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@29f69d87
[DEBUG] 2021-04-12 17:00:48.802 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@29f69d87
[DEBUG] 2021-04-12 17:00:48.803 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5ca51730
[DEBUG] 2021-04-12 17:00:48.803 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5ca51730
[DEBUG] 2021-04-12 17:00:48.804 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7785df1b
[DEBUG] 2021-04-12 17:00:48.804 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7785df1b
[DEBUG] 2021-04-12 17:00:48.805 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@eafd216
[DEBUG] 2021-04-12 17:00:48.805 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@eafd216
[DEBUG] 2021-04-12 17:00:48.806 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f18ab55
[DEBUG] 2021-04-12 17:00:48.807 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@8fb678c
[DEBUG] 2021-04-12 17:00:48.807 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@8fb678c
[DEBUG] 2021-04-12 17:00:48.807 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@8fb678c
[DEBUG] 2021-04-12 17:00:48.816 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3032d149
[DEBUG] 2021-04-12 17:00:48.816 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3032d149
[DEBUG] 2021-04-12 17:00:48.816 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3032d149
[DEBUG] 2021-04-12 17:00:48.817 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@52e139ac
[DEBUG] 2021-04-12 17:00:48.819 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@30b09907
[DEBUG] 2021-04-12 17:00:48.820 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7246338a
[DEBUG] 2021-04-12 17:00:48.820 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7246338a
[DEBUG] 2021-04-12 17:00:48.823 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7246338a
[DEBUG] 2021-04-12 17:00:48.826 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@151367b
[DEBUG] 2021-04-12 17:00:48.826 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@151367b
[DEBUG] 2021-04-12 17:00:48.826 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@151367b
[DEBUG] 2021-04-12 17:00:48.827 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7e088b10
[DEBUG] 2021-04-12 17:00:48.827 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@23f7057c
[DEBUG] 2021-04-12 17:00:48.829 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@f10259b
[DEBUG] 2021-04-12 17:00:48.829 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@f10259b
[DEBUG] 2021-04-12 17:00:48.830 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7a5fd594
[DEBUG] 2021-04-12 17:00:48.832 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@30857b47
[DEBUG] 2021-04-12 17:00:48.832 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@30857b47
[DEBUG] 2021-04-12 17:00:48.834 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6bf39b2a
[DEBUG] 2021-04-12 17:00:48.834 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6bf39b2a
[DEBUG] 2021-04-12 17:00:48.835 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5f82bbe7
[DEBUG] 2021-04-12 17:00:48.837 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5c0bb956
[DEBUG] 2021-04-12 17:00:48.839 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6e8168da
[DEBUG] 2021-04-12 17:00:48.844 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@135335ac
[DEBUG] 2021-04-12 17:00:48.844 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@135335ac
[DEBUG] 2021-04-12 17:00:48.845 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@52fe3685
[DEBUG] 2021-04-12 17:00:48.845 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1fd87371
[DEBUG] 2021-04-12 17:00:48.845 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@27702c8f
[DEBUG] 2021-04-12 17:00:48.845 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2b457fe2
[DEBUG] 2021-04-12 17:00:48.846 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@8ac3e11
[DEBUG] 2021-04-12 17:00:48.846 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@54b3878e
[DEBUG] 2021-04-12 17:00:48.846 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7201cdc3
[DEBUG] 2021-04-12 17:00:48.846 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@723b060e
[DEBUG] 2021-04-12 17:00:48.887 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 17:00:48.888 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 17:00:48.889 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 17:00:48.890 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 17:00:48.892 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 17:00:48.893 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 17:00:48.894 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 17:00:48.895 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 17:00:48.896 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 17:00:48.897 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 17:00:48.898 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 17:00:48.898 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 17:00:48.898 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 17:00:48.899 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 17:00:48.906 [http-nio-8080-exec-8] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 17:00:48.907 [http-nio-8080-exec-8] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 17:00:48.907 [http-nio-8080-exec-8] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 17:00:49.185 [http-nio-8080-exec-8] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 17:00:49.803 [http-nio-8080-exec-8] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 17:00:49.804 [http-nio-8080-exec-8] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 17:00:49.804 [http-nio-8080-exec-8] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 17:00:49.843 [http-nio-8080-exec-8] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 17:00:49.872 [http-nio-8080-exec-8] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 17:00:49.942 [http-nio-8080-exec-8] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 17:00:50.032 [http-nio-8080-exec-8] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 17:00:50.041 [http-nio-8080-exec-8] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11376e1d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@452578f5]
[DEBUG] 2021-04-12 17:00:50.115 [http-nio-8080-exec-8] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 17:00:50.149 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 17:00:50.157 [http-nio-8080-exec-8] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 17:00:50.178 [http-nio-8080-exec-8] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 17:00:50.221 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:00:50.225 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 17:00:50.228 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 17:00:50.231 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 17:00:50.234 [http-nio-8080-exec-8] PropertyBinder - Building property id
[DEBUG] 2021-04-12 17:00:50.240 [http-nio-8080-exec-8] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 17:00:50.242 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:00:50.242 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 17:00:50.243 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 17:00:50.243 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 17:00:50.243 [http-nio-8080-exec-8] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 17:00:50.244 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:00:50.244 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 17:00:50.244 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 17:00:50.244 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 17:00:50.244 [http-nio-8080-exec-8] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 17:00:50.244 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:00:50.244 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 17:00:50.244 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 17:00:50.244 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 17:00:50.245 [http-nio-8080-exec-8] PropertyBinder - Building property media
[DEBUG] 2021-04-12 17:00:50.245 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:00:50.246 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 17:00:50.246 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 17:00:50.247 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 17:00:50.247 [http-nio-8080-exec-8] PropertyBinder - Building property name
[DEBUG] 2021-04-12 17:00:50.248 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:00:50.248 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 17:00:50.248 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 17:00:50.248 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 17:00:50.249 [http-nio-8080-exec-8] PropertyBinder - Building property species
[DEBUG] 2021-04-12 17:00:50.252 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 17:00:50.252 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 17:00:50.252 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 17:00:50.252 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 17:00:50.252 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 17:00:50.252 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 17:00:50.253 [http-nio-8080-exec-8] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 17:00:50.300 [http-nio-8080-exec-8] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 17:00:50.301 [http-nio-8080-exec-8] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 17:00:50.301 [http-nio-8080-exec-8] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 17:00:50.301 [http-nio-8080-exec-8] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 17:00:50.301 [http-nio-8080-exec-8] Settings - Statistics: disabled
[DEBUG] 2021-04-12 17:00:50.301 [http-nio-8080-exec-8] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 17:00:50.301 [http-nio-8080-exec-8] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 17:00:50.301 [http-nio-8080-exec-8] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 17:00:50.301 [http-nio-8080-exec-8] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 17:00:50.301 [http-nio-8080-exec-8] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 17:00:50.301 [http-nio-8080-exec-8] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 17:00:50.301 [http-nio-8080-exec-8] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 17:00:50.301 [http-nio-8080-exec-8] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 17:00:50.301 [http-nio-8080-exec-8] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 17:00:50.301 [http-nio-8080-exec-8] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 17:00:50.301 [http-nio-8080-exec-8] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 17:00:50.301 [http-nio-8080-exec-8] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 17:00:50.301 [http-nio-8080-exec-8] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 17:00:50.302 [http-nio-8080-exec-8] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 17:00:50.302 [http-nio-8080-exec-8] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 17:00:50.302 [http-nio-8080-exec-8] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 17:00:50.302 [http-nio-8080-exec-8] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 17:00:50.302 [http-nio-8080-exec-8] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 17:00:50.302 [http-nio-8080-exec-8] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 17:00:50.302 [http-nio-8080-exec-8] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 17:00:50.302 [http-nio-8080-exec-8] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 17:00:50.302 [http-nio-8080-exec-8] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 17:00:50.302 [http-nio-8080-exec-8] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 17:00:50.302 [http-nio-8080-exec-8] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 17:00:50.302 [http-nio-8080-exec-8] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 17:00:50.302 [http-nio-8080-exec-8] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 17:00:50.302 [http-nio-8080-exec-8] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 17:00:50.302 [http-nio-8080-exec-8] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 17:00:50.302 [http-nio-8080-exec-8] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 17:00:50.302 [http-nio-8080-exec-8] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 17:00:50.302 [http-nio-8080-exec-8] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 17:00:50.302 [http-nio-8080-exec-8] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 17:00:50.302 [http-nio-8080-exec-8] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 17:00:50.303 [http-nio-8080-exec-8] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 17:00:50.388 [http-nio-8080-exec-8] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 17:00:50.426 [http-nio-8080-exec-8] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 17:00:50.427 [http-nio-8080-exec-8] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, org.apache.activemq.broker.jmx.createConnector=false, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=13.0.1+9, user.name=Walker, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, derby.system.home=C:\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=13.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=Jun 30 2020 21:49:10 UTC, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, tomee.version=7.1.4, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.path=C:\tomcat\bin\bootstrap.jar;C:\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.57.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/tomcat/lib","C:/tomcat/lib/*.jar","C:\tomcat/lib","C:\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=6.3, openejb.version=7.1.4, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=C:\tomcat, user.dir=C:\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@53a79216, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0, authconfigprovider.factory=false}
[DEBUG] 2021-04-12 17:00:50.452 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 17:00:50.452 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 17:00:50.456 [http-nio-8080-exec-8] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 17:00:50.457 [http-nio-8080-exec-8] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 17:00:50.457 [http-nio-8080-exec-8] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11376e1d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3f92212e]
[DEBUG] 2021-04-12 17:00:50.548 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 17:00:50.548 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 17:00:50.574 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 17:00:50.574 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 17:00:50.863 [http-nio-8080-exec-8] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 17:00:50.863 [http-nio-8080-exec-8] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 17:00:50.863 [http-nio-8080-exec-8] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 17:00:50.863 [http-nio-8080-exec-8] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 17:00:50.863 [http-nio-8080-exec-8] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 17:00:50.863 [http-nio-8080-exec-8] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 17:00:50.863 [http-nio-8080-exec-8] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 17:00:50.895 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dfddf60]
[DEBUG] 2021-04-12 17:00:50.897 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 17:00:50.897 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 17:00:50.897 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 17:00:50.897 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 17:00:50.897 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 17:00:50.897 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 17:00:50.923 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 17:00:50.928 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 17:00:50.931 [http-nio-8080-exec-8] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:00:50.931 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b9ba19b]
[DEBUG] 2021-04-12 17:00:50.931 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 17:00:50.931 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 17:00:50.931 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 17:00:50.931 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 17:00:50.931 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 17:00:50.931 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 17:00:50.931 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 17:00:50.932 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 17:00:50.932 [http-nio-8080-exec-8] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:00:50.948 [http-nio-8080-exec-8] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:00:50.948 [http-nio-8080-exec-8] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:00:51.004 [http-nio-8080-exec-8] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 17:00:51.004 [http-nio-8080-exec-8] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 17:00:51.004 [http-nio-8080-exec-8] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 17:00:51.020 [http-nio-8080-exec-8] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 17:00:51.020 [http-nio-8080-exec-8] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 17:00:51.022 [http-nio-8080-exec-8] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 17:00:51.023 [http-nio-8080-exec-8] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 17:00:51.027 [http-nio-8080-exec-8] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2f64f282
[DEBUG] 2021-04-12 17:00:51.030 [http-nio-8080-exec-8] SessionFactoryRegistry - Registering SessionFactory: f43f4cce-4c8a-4639-a246-656470fb5f14 (<unnamed>)
[DEBUG] 2021-04-12 17:00:51.030 [http-nio-8080-exec-8] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 17:00:51.146 [http-nio-8080-exec-8] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 17:00:51.175 [http-nio-8080-exec-8] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:00:51.200 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 17:00:51.200 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 17:00:51.218 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 17:00:51.219 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 17:00:51.220 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:00:51.220 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 17:00:51.220 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:00:51.220 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 17:00:51.220 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:00:51.222 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 17:00:51.222 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:00:51.222 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 17:00:51.222 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:00:51.226 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 17:00:51.227 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 17:00:51.228 [http-nio-8080-exec-8] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 17:00:51.228 [http-nio-8080-exec-8] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 17:01:16.538 [http-nio-8080-exec-10] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-04-12 17:01:16.538 [http-nio-8080-exec-10] TransactionImpl - begin
[DEBUG] 2021-04-12 17:01:16.548 [http-nio-8080-exec-10] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-04-12 17:01:16.553 [http-nio-8080-exec-10] SQL - insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 17:01:16.568 [http-nio-8080-exec-10] IdentifierGeneratorHelper - Natively generated identity: 12
[DEBUG] 2021-04-12 17:01:16.568 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 17:01:16.570 [http-nio-8080-exec-10] TransactionImpl - committing
[DEBUG] 2021-04-12 17:01:16.570 [http-nio-8080-exec-10] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-04-12 17:01:16.570 [http-nio-8080-exec-10] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-04-12 17:01:16.572 [http-nio-8080-exec-10] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-04-12 17:01:16.572 [http-nio-8080-exec-10] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-04-12 17:01:16.574 [http-nio-8080-exec-10] EntityPrinter - Listing entities:
[DEBUG] 2021-04-12 17:01:16.574 [http-nio-8080-exec-10] EntityPrinter - team.entity.Character{franchise=Mega Man, species=Reploid, name=Sigma, id=12, media=Video Game, alignment=Evil}
[DEBUG] 2021-04-12 17:01:16.733 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 17:01:16.734 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 17:09:20.013 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 17:09:20.017 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 17:09:20.024 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 17:09:20.213 [http-nio-8080-exec-9] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 17:09:20.216 [http-nio-8080-exec-9] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 17:09:20.422 [http-nio-8080-exec-9] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 17:09:20.423 [http-nio-8080-exec-9] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 17:09:20.454 [http-nio-8080-exec-9] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 17:09:20.810 [http-nio-8080-exec-9] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 17:09:20.839 [http-nio-8080-exec-9] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 17:09:20.840 [http-nio-8080-exec-9] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 17:09:20.868 [http-nio-8080-exec-9] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 17:09:20.952 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@277a3fd
[DEBUG] 2021-04-12 17:09:20.952 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@277a3fd
[DEBUG] 2021-04-12 17:09:20.952 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@277a3fd
[DEBUG] 2021-04-12 17:09:20.953 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7529d410
[DEBUG] 2021-04-12 17:09:20.954 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@88904bb
[DEBUG] 2021-04-12 17:09:20.955 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@73e9806b
[DEBUG] 2021-04-12 17:09:20.957 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@c6436a0
[DEBUG] 2021-04-12 17:09:20.957 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@c6436a0
[DEBUG] 2021-04-12 17:09:20.957 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@c6436a0
[DEBUG] 2021-04-12 17:09:20.958 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@55ac5c8
[DEBUG] 2021-04-12 17:09:20.958 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@55ac5c8
[DEBUG] 2021-04-12 17:09:20.958 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@55ac5c8
[DEBUG] 2021-04-12 17:09:20.960 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5a50dbca
[DEBUG] 2021-04-12 17:09:20.960 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5a50dbca
[DEBUG] 2021-04-12 17:09:20.960 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a50dbca
[DEBUG] 2021-04-12 17:09:20.962 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@f583253
[DEBUG] 2021-04-12 17:09:20.962 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@f583253
[DEBUG] 2021-04-12 17:09:20.962 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f583253
[DEBUG] 2021-04-12 17:09:20.964 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1f8cb3fb
[DEBUG] 2021-04-12 17:09:20.964 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1f8cb3fb
[DEBUG] 2021-04-12 17:09:20.964 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1f8cb3fb
[DEBUG] 2021-04-12 17:09:20.965 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2f892607
[DEBUG] 2021-04-12 17:09:20.965 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2f892607
[DEBUG] 2021-04-12 17:09:20.965 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2f892607
[DEBUG] 2021-04-12 17:09:20.966 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@582cd319
[DEBUG] 2021-04-12 17:09:20.967 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@582cd319
[DEBUG] 2021-04-12 17:09:20.967 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@582cd319
[DEBUG] 2021-04-12 17:09:20.968 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6056a3b7
[DEBUG] 2021-04-12 17:09:20.968 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6056a3b7
[DEBUG] 2021-04-12 17:09:20.969 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6dea6482
[DEBUG] 2021-04-12 17:09:20.969 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6dea6482
[DEBUG] 2021-04-12 17:09:20.971 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6773bfb2
[DEBUG] 2021-04-12 17:09:20.971 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6773bfb2
[DEBUG] 2021-04-12 17:09:20.972 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ff5df84
[DEBUG] 2021-04-12 17:09:20.973 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26db17ef
[DEBUG] 2021-04-12 17:09:20.974 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7a795746
[DEBUG] 2021-04-12 17:09:20.974 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7a795746
[DEBUG] 2021-04-12 17:09:20.975 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7ef05994
[DEBUG] 2021-04-12 17:09:20.976 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7ef05994
[DEBUG] 2021-04-12 17:09:20.979 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7955c015
[DEBUG] 2021-04-12 17:09:20.979 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7955c015
[DEBUG] 2021-04-12 17:09:20.980 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1a6db7b3
[DEBUG] 2021-04-12 17:09:20.981 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1a6db7b3
[DEBUG] 2021-04-12 17:09:20.982 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@21772c47
[DEBUG] 2021-04-12 17:09:20.983 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@21772c47
[DEBUG] 2021-04-12 17:09:20.984 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@73da75db
[DEBUG] 2021-04-12 17:09:20.984 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@73da75db
[DEBUG] 2021-04-12 17:09:20.986 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70d61df2
[DEBUG] 2021-04-12 17:09:20.986 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70d61df2
[DEBUG] 2021-04-12 17:09:20.988 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3565d12f
[DEBUG] 2021-04-12 17:09:20.989 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3565d12f
[DEBUG] 2021-04-12 17:09:20.992 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@35ec7b77
[DEBUG] 2021-04-12 17:09:20.992 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@35ec7b77
[DEBUG] 2021-04-12 17:09:20.996 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@88bbf7f
[DEBUG] 2021-04-12 17:09:20.996 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@88bbf7f
[DEBUG] 2021-04-12 17:09:20.998 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3a167e05
[DEBUG] 2021-04-12 17:09:21.000 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3a167e05
[DEBUG] 2021-04-12 17:09:21.002 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@33549402
[DEBUG] 2021-04-12 17:09:21.003 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@33549402
[DEBUG] 2021-04-12 17:09:21.003 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@33549402
[DEBUG] 2021-04-12 17:09:21.006 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@421adcd6
[DEBUG] 2021-04-12 17:09:21.007 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2c20b99e
[DEBUG] 2021-04-12 17:09:21.007 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2c20b99e
[DEBUG] 2021-04-12 17:09:21.008 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2c20b99e
[DEBUG] 2021-04-12 17:09:21.009 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5cb1d199
[DEBUG] 2021-04-12 17:09:21.010 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2112655
[DEBUG] 2021-04-12 17:09:21.010 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2112655
[DEBUG] 2021-04-12 17:09:21.011 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5fa3e46b
[DEBUG] 2021-04-12 17:09:21.012 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5fa3e46b
[DEBUG] 2021-04-12 17:09:21.013 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@732ec541
[DEBUG] 2021-04-12 17:09:21.013 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@732ec541
[DEBUG] 2021-04-12 17:09:21.014 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6952995e
[DEBUG] 2021-04-12 17:09:21.014 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6952995e
[DEBUG] 2021-04-12 17:09:21.015 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6ab8f5aa
[DEBUG] 2021-04-12 17:09:21.015 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6ab8f5aa
[DEBUG] 2021-04-12 17:09:21.015 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@53b69d7d
[DEBUG] 2021-04-12 17:09:21.017 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@655aba2d
[DEBUG] 2021-04-12 17:09:21.017 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@655aba2d
[DEBUG] 2021-04-12 17:09:21.017 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@655aba2d
[DEBUG] 2021-04-12 17:09:21.018 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2496481f
[DEBUG] 2021-04-12 17:09:21.018 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2496481f
[DEBUG] 2021-04-12 17:09:21.019 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2496481f
[DEBUG] 2021-04-12 17:09:21.020 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1e11b2e0
[DEBUG] 2021-04-12 17:09:21.021 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@306dbbb4
[DEBUG] 2021-04-12 17:09:21.022 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@47e0a8ef
[DEBUG] 2021-04-12 17:09:21.022 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@47e0a8ef
[DEBUG] 2021-04-12 17:09:21.023 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@47e0a8ef
[DEBUG] 2021-04-12 17:09:21.024 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@40fdd5cd
[DEBUG] 2021-04-12 17:09:21.024 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@40fdd5cd
[DEBUG] 2021-04-12 17:09:21.024 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@40fdd5cd
[DEBUG] 2021-04-12 17:09:21.025 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6accab89
[DEBUG] 2021-04-12 17:09:21.025 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@19d15e45
[DEBUG] 2021-04-12 17:09:21.027 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@50c77e37
[DEBUG] 2021-04-12 17:09:21.027 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@50c77e37
[DEBUG] 2021-04-12 17:09:21.028 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@43f63a64
[DEBUG] 2021-04-12 17:09:21.029 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@18336da1
[DEBUG] 2021-04-12 17:09:21.030 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@18336da1
[DEBUG] 2021-04-12 17:09:21.031 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@10193926
[DEBUG] 2021-04-12 17:09:21.031 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@10193926
[DEBUG] 2021-04-12 17:09:21.032 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2b8ba47f
[DEBUG] 2021-04-12 17:09:21.034 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5c46fe65
[DEBUG] 2021-04-12 17:09:21.040 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3693560f
[DEBUG] 2021-04-12 17:09:21.044 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2cb4de3e
[DEBUG] 2021-04-12 17:09:21.044 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2cb4de3e
[DEBUG] 2021-04-12 17:09:21.045 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2a1996dc
[DEBUG] 2021-04-12 17:09:21.045 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@49026325
[DEBUG] 2021-04-12 17:09:21.045 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6f5a444c
[DEBUG] 2021-04-12 17:09:21.046 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@785508a8
[DEBUG] 2021-04-12 17:09:21.046 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1e1cde08
[DEBUG] 2021-04-12 17:09:21.046 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@445d9da5
[DEBUG] 2021-04-12 17:09:21.046 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7918d946
[DEBUG] 2021-04-12 17:09:21.047 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@29d89e85
[DEBUG] 2021-04-12 17:09:21.091 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 17:09:21.091 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 17:09:21.092 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 17:09:21.094 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 17:09:21.095 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 17:09:21.097 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 17:09:21.097 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 17:09:21.099 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 17:09:21.100 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 17:09:21.100 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 17:09:21.101 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 17:09:21.101 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 17:09:21.102 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 17:09:21.102 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 17:09:21.142 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 17:09:21.142 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 17:09:21.142 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 17:09:21.479 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 17:09:22.103 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 17:09:22.104 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 17:09:22.104 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 17:09:22.141 [http-nio-8080-exec-9] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 17:09:22.167 [http-nio-8080-exec-9] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 17:09:22.214 [http-nio-8080-exec-9] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 17:09:22.281 [http-nio-8080-exec-9] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 17:09:22.292 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53cdc6f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4bbb8a09]
[DEBUG] 2021-04-12 17:09:22.360 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 17:09:22.411 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 17:09:22.420 [http-nio-8080-exec-9] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 17:09:22.424 [http-nio-8080-exec-9] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 17:09:22.468 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:09:22.473 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 17:09:22.476 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 17:09:22.482 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 17:09:22.488 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2021-04-12 17:09:22.494 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 17:09:22.496 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:09:22.497 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 17:09:22.497 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 17:09:22.498 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 17:09:22.498 [http-nio-8080-exec-9] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 17:09:22.500 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:09:22.500 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 17:09:22.500 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 17:09:22.500 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 17:09:22.500 [http-nio-8080-exec-9] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 17:09:22.501 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:09:22.501 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 17:09:22.501 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 17:09:22.501 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 17:09:22.501 [http-nio-8080-exec-9] PropertyBinder - Building property media
[DEBUG] 2021-04-12 17:09:22.504 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:09:22.506 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 17:09:22.507 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 17:09:22.507 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 17:09:22.507 [http-nio-8080-exec-9] PropertyBinder - Building property name
[DEBUG] 2021-04-12 17:09:22.507 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:09:22.508 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 17:09:22.509 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 17:09:22.509 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 17:09:22.509 [http-nio-8080-exec-9] PropertyBinder - Building property species
[DEBUG] 2021-04-12 17:09:22.513 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 17:09:22.513 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 17:09:22.514 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 17:09:22.514 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 17:09:22.514 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 17:09:22.514 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 17:09:22.515 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 17:09:22.568 [http-nio-8080-exec-9] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 17:09:22.569 [http-nio-8080-exec-9] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - Statistics: disabled
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 17:09:22.570 [http-nio-8080-exec-9] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 17:09:22.571 [http-nio-8080-exec-9] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 17:09:22.571 [http-nio-8080-exec-9] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 17:09:22.571 [http-nio-8080-exec-9] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 17:09:22.571 [http-nio-8080-exec-9] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 17:09:22.571 [http-nio-8080-exec-9] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 17:09:22.571 [http-nio-8080-exec-9] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 17:09:22.571 [http-nio-8080-exec-9] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 17:09:22.571 [http-nio-8080-exec-9] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 17:09:22.571 [http-nio-8080-exec-9] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 17:09:22.571 [http-nio-8080-exec-9] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 17:09:22.571 [http-nio-8080-exec-9] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 17:09:22.571 [http-nio-8080-exec-9] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 17:09:22.571 [http-nio-8080-exec-9] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 17:09:22.571 [http-nio-8080-exec-9] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 17:09:22.571 [http-nio-8080-exec-9] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 17:09:22.571 [http-nio-8080-exec-9] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 17:09:22.653 [http-nio-8080-exec-9] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 17:09:22.675 [http-nio-8080-exec-9] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 17:09:22.675 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, org.apache.activemq.broker.jmx.createConnector=false, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=13.0.1+9, user.name=Walker, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, derby.system.home=C:\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=13.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=Jun 30 2020 21:49:10 UTC, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, tomee.version=7.1.4, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.path=C:\tomcat\bin\bootstrap.jar;C:\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.57.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/tomcat/lib","C:/tomcat/lib/*.jar","C:\tomcat/lib","C:\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=6.3, openejb.version=7.1.4, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=C:\tomcat, user.dir=C:\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@8bcb37d, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0, authconfigprovider.factory=false}
[DEBUG] 2021-04-12 17:09:22.739 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 17:09:22.739 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 17:09:22.743 [http-nio-8080-exec-9] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 17:09:22.744 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 17:09:22.744 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53cdc6f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@58cdf2dd]
[DEBUG] 2021-04-12 17:09:22.809 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 17:09:22.810 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 17:09:22.831 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 17:09:22.831 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 17:09:23.200 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 17:09:23.200 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 17:09:23.200 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 17:09:23.200 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 17:09:23.200 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 17:09:23.200 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 17:09:23.201 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 17:09:23.252 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67816555]
[DEBUG] 2021-04-12 17:09:23.254 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 17:09:23.254 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 17:09:23.254 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 17:09:23.254 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 17:09:23.255 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 17:09:23.256 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 17:09:23.271 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 17:09:23.275 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 17:09:23.278 [http-nio-8080-exec-9] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:09:23.278 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23c234b]
[DEBUG] 2021-04-12 17:09:23.278 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 17:09:23.278 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 17:09:23.278 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 17:09:23.278 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 17:09:23.278 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 17:09:23.278 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 17:09:23.279 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 17:09:23.279 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 17:09:23.279 [http-nio-8080-exec-9] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:09:23.298 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:09:23.298 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:09:23.345 [http-nio-8080-exec-9] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 17:09:23.345 [http-nio-8080-exec-9] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 17:09:23.345 [http-nio-8080-exec-9] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 17:09:23.357 [http-nio-8080-exec-9] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 17:09:23.357 [http-nio-8080-exec-9] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 17:09:23.358 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 17:09:23.358 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 17:09:23.362 [http-nio-8080-exec-9] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@108a20cd
[DEBUG] 2021-04-12 17:09:23.364 [http-nio-8080-exec-9] SessionFactoryRegistry - Registering SessionFactory: d0820871-6d8e-458f-bac5-7d5e26800e84 (<unnamed>)
[DEBUG] 2021-04-12 17:09:23.365 [http-nio-8080-exec-9] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 17:09:23.477 [http-nio-8080-exec-9] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 17:09:23.505 [http-nio-8080-exec-9] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:09:23.529 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 17:09:23.530 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 17:09:23.547 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [team.entity.Character#2]
[DEBUG] 2021-04-12 17:09:23.548 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 17:09:23.548 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:09:23.548 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `franchise` : value = Alien
[DEBUG] 2021-04-12 17:09:23.548 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:09:23.548 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `media` : value = movie
[DEBUG] 2021-04-12 17:09:23.548 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:09:23.550 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Ripley
[DEBUG] 2021-04-12 17:09:23.552 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:09:23.552 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `species` : value = Human
[DEBUG] 2021-04-12 17:09:23.552 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:09:23.555 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [team.entity.Character#2]
[DEBUG] 2021-04-12 17:09:23.556 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 17:09:23.556 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#2
[DEBUG] 2021-04-12 17:09:23.556 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 17:15:43.055 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 17:15:43.060 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 17:15:43.065 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 17:15:43.206 [http-nio-8080-exec-1] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 17:15:43.211 [http-nio-8080-exec-1] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 17:15:43.420 [http-nio-8080-exec-1] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 17:15:43.421 [http-nio-8080-exec-1] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 17:15:43.448 [http-nio-8080-exec-1] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 17:15:43.895 [http-nio-8080-exec-1] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 17:15:43.940 [http-nio-8080-exec-1] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 17:15:43.942 [http-nio-8080-exec-1] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 17:15:43.972 [http-nio-8080-exec-1] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 17:15:44.021 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@79e6d26f
[DEBUG] 2021-04-12 17:15:44.021 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@79e6d26f
[DEBUG] 2021-04-12 17:15:44.021 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@79e6d26f
[DEBUG] 2021-04-12 17:15:44.022 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@cc1b933
[DEBUG] 2021-04-12 17:15:44.023 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@53a54ada
[DEBUG] 2021-04-12 17:15:44.023 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@67a09cf4
[DEBUG] 2021-04-12 17:15:44.025 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@dd7fe75
[DEBUG] 2021-04-12 17:15:44.025 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@dd7fe75
[DEBUG] 2021-04-12 17:15:44.025 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@dd7fe75
[DEBUG] 2021-04-12 17:15:44.027 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3ff0e988
[DEBUG] 2021-04-12 17:15:44.027 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3ff0e988
[DEBUG] 2021-04-12 17:15:44.028 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3ff0e988
[DEBUG] 2021-04-12 17:15:44.030 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6935b14b
[DEBUG] 2021-04-12 17:15:44.030 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6935b14b
[DEBUG] 2021-04-12 17:15:44.030 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6935b14b
[DEBUG] 2021-04-12 17:15:44.032 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1c80ab85
[DEBUG] 2021-04-12 17:15:44.033 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1c80ab85
[DEBUG] 2021-04-12 17:15:44.033 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1c80ab85
[DEBUG] 2021-04-12 17:15:44.034 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7837af23
[DEBUG] 2021-04-12 17:15:44.034 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7837af23
[DEBUG] 2021-04-12 17:15:44.034 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7837af23
[DEBUG] 2021-04-12 17:15:44.037 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7a25b704
[DEBUG] 2021-04-12 17:15:44.037 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7a25b704
[DEBUG] 2021-04-12 17:15:44.038 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7a25b704
[DEBUG] 2021-04-12 17:15:44.039 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6de22986
[DEBUG] 2021-04-12 17:15:44.040 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6de22986
[DEBUG] 2021-04-12 17:15:44.041 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6de22986
[DEBUG] 2021-04-12 17:15:44.043 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@64e8f7a7
[DEBUG] 2021-04-12 17:15:44.043 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@64e8f7a7
[DEBUG] 2021-04-12 17:15:44.044 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3bc424b7
[DEBUG] 2021-04-12 17:15:44.044 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3bc424b7
[DEBUG] 2021-04-12 17:15:44.046 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@67763679
[DEBUG] 2021-04-12 17:15:44.047 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@67763679
[DEBUG] 2021-04-12 17:15:44.047 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50ff3a07
[DEBUG] 2021-04-12 17:15:44.048 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@d65c3e8
[DEBUG] 2021-04-12 17:15:44.049 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@ae39c94
[DEBUG] 2021-04-12 17:15:44.050 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@ae39c94
[DEBUG] 2021-04-12 17:15:44.051 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3fc10150
[DEBUG] 2021-04-12 17:15:44.051 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3fc10150
[DEBUG] 2021-04-12 17:15:44.055 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2c8ae277
[DEBUG] 2021-04-12 17:15:44.055 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2c8ae277
[DEBUG] 2021-04-12 17:15:44.057 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@505b7c13
[DEBUG] 2021-04-12 17:15:44.057 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@505b7c13
[DEBUG] 2021-04-12 17:15:44.059 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@731c5912
[DEBUG] 2021-04-12 17:15:44.060 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@731c5912
[DEBUG] 2021-04-12 17:15:44.062 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7cbaac3e
[DEBUG] 2021-04-12 17:15:44.062 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7cbaac3e
[DEBUG] 2021-04-12 17:15:44.063 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@324b41e1
[DEBUG] 2021-04-12 17:15:44.063 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@324b41e1
[DEBUG] 2021-04-12 17:15:44.065 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@537a9c96
[DEBUG] 2021-04-12 17:15:44.065 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@537a9c96
[DEBUG] 2021-04-12 17:15:44.067 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@35fcd438
[DEBUG] 2021-04-12 17:15:44.067 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@35fcd438
[DEBUG] 2021-04-12 17:15:44.068 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@13b43ccd
[DEBUG] 2021-04-12 17:15:44.069 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@13b43ccd
[DEBUG] 2021-04-12 17:15:44.070 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5a7a4ddf
[DEBUG] 2021-04-12 17:15:44.070 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5a7a4ddf
[DEBUG] 2021-04-12 17:15:44.072 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@51c83288
[DEBUG] 2021-04-12 17:15:44.072 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@51c83288
[DEBUG] 2021-04-12 17:15:44.072 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@51c83288
[DEBUG] 2021-04-12 17:15:44.075 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7399ddf
[DEBUG] 2021-04-12 17:15:44.076 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7cad29bf
[DEBUG] 2021-04-12 17:15:44.076 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7cad29bf
[DEBUG] 2021-04-12 17:15:44.078 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7cad29bf
[DEBUG] 2021-04-12 17:15:44.079 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@637189f1
[DEBUG] 2021-04-12 17:15:44.080 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@781c33db
[DEBUG] 2021-04-12 17:15:44.080 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@781c33db
[DEBUG] 2021-04-12 17:15:44.082 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7c3f9009
[DEBUG] 2021-04-12 17:15:44.082 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7c3f9009
[DEBUG] 2021-04-12 17:15:44.083 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4f613aa
[DEBUG] 2021-04-12 17:15:44.083 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4f613aa
[DEBUG] 2021-04-12 17:15:44.084 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4a2f938f
[DEBUG] 2021-04-12 17:15:44.084 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4a2f938f
[DEBUG] 2021-04-12 17:15:44.085 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1af20786
[DEBUG] 2021-04-12 17:15:44.086 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1af20786
[DEBUG] 2021-04-12 17:15:44.086 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@34858d6e
[DEBUG] 2021-04-12 17:15:44.089 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5a93b20a
[DEBUG] 2021-04-12 17:15:44.089 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5a93b20a
[DEBUG] 2021-04-12 17:15:44.089 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5a93b20a
[DEBUG] 2021-04-12 17:15:44.091 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5d77f9be
[DEBUG] 2021-04-12 17:15:44.091 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5d77f9be
[DEBUG] 2021-04-12 17:15:44.091 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5d77f9be
[DEBUG] 2021-04-12 17:15:44.093 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1ea613c2
[DEBUG] 2021-04-12 17:15:44.093 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@137019d1
[DEBUG] 2021-04-12 17:15:44.095 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@79d5b32
[DEBUG] 2021-04-12 17:15:44.095 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@79d5b32
[DEBUG] 2021-04-12 17:15:44.095 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@79d5b32
[DEBUG] 2021-04-12 17:15:44.096 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@261b0fed
[DEBUG] 2021-04-12 17:15:44.096 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@261b0fed
[DEBUG] 2021-04-12 17:15:44.096 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@261b0fed
[DEBUG] 2021-04-12 17:15:44.097 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2dd3203d
[DEBUG] 2021-04-12 17:15:44.097 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@441c55ed
[DEBUG] 2021-04-12 17:15:44.099 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@264fb765
[DEBUG] 2021-04-12 17:15:44.099 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@264fb765
[DEBUG] 2021-04-12 17:15:44.100 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26658463
[DEBUG] 2021-04-12 17:15:44.102 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@647e5ab9
[DEBUG] 2021-04-12 17:15:44.102 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@647e5ab9
[DEBUG] 2021-04-12 17:15:44.104 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1f9f4e0d
[DEBUG] 2021-04-12 17:15:44.104 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1f9f4e0d
[DEBUG] 2021-04-12 17:15:44.104 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@513d0e92
[DEBUG] 2021-04-12 17:15:44.105 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@54cf32df
[DEBUG] 2021-04-12 17:15:44.107 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@59f097a9
[DEBUG] 2021-04-12 17:15:44.111 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4c6cc2e4
[DEBUG] 2021-04-12 17:15:44.111 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4c6cc2e4
[DEBUG] 2021-04-12 17:15:44.112 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1368f1ca
[DEBUG] 2021-04-12 17:15:44.112 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@502dd3ea
[DEBUG] 2021-04-12 17:15:44.112 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4ccb6cd3
[DEBUG] 2021-04-12 17:15:44.112 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e7f0496
[DEBUG] 2021-04-12 17:15:44.113 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6acd4432
[DEBUG] 2021-04-12 17:15:44.113 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@54417802
[DEBUG] 2021-04-12 17:15:44.113 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@437b2bad
[DEBUG] 2021-04-12 17:15:44.113 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5e6dce0
[DEBUG] 2021-04-12 17:15:44.161 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 17:15:44.162 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 17:15:44.163 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 17:15:44.164 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 17:15:44.166 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 17:15:44.167 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 17:15:44.168 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 17:15:44.169 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 17:15:44.171 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 17:15:44.171 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 17:15:44.172 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 17:15:44.173 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 17:15:44.173 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 17:15:44.174 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 17:15:44.182 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 17:15:44.183 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 17:15:44.183 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 17:15:44.478 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 17:15:45.055 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 17:15:45.055 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 17:15:45.055 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 17:15:45.088 [http-nio-8080-exec-1] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 17:15:45.114 [http-nio-8080-exec-1] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 17:15:45.157 [http-nio-8080-exec-1] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 17:15:45.207 [http-nio-8080-exec-1] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 17:15:45.212 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7b490ea4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6d819afd]
[DEBUG] 2021-04-12 17:15:45.276 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 17:15:45.326 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 17:15:45.345 [http-nio-8080-exec-1] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 17:15:45.348 [http-nio-8080-exec-1] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 17:15:45.394 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:15:45.399 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 17:15:45.401 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 17:15:45.404 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 17:15:45.407 [http-nio-8080-exec-1] PropertyBinder - Building property id
[DEBUG] 2021-04-12 17:15:45.413 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 17:15:45.414 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:15:45.415 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 17:15:45.415 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 17:15:45.415 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 17:15:45.415 [http-nio-8080-exec-1] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 17:15:45.415 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:15:45.415 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 17:15:45.415 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 17:15:45.415 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 17:15:45.415 [http-nio-8080-exec-1] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 17:15:45.416 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:15:45.416 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 17:15:45.416 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 17:15:45.416 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 17:15:45.416 [http-nio-8080-exec-1] PropertyBinder - Building property media
[DEBUG] 2021-04-12 17:15:45.417 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:15:45.417 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 17:15:45.417 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 17:15:45.418 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 17:15:45.418 [http-nio-8080-exec-1] PropertyBinder - Building property name
[DEBUG] 2021-04-12 17:15:45.418 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:15:45.418 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 17:15:45.418 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 17:15:45.418 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 17:15:45.418 [http-nio-8080-exec-1] PropertyBinder - Building property species
[DEBUG] 2021-04-12 17:15:45.423 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 17:15:45.423 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 17:15:45.423 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 17:15:45.423 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 17:15:45.423 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 17:15:45.423 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 17:15:45.425 [http-nio-8080-exec-1] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 17:15:45.469 [http-nio-8080-exec-1] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 17:15:45.471 [http-nio-8080-exec-1] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 17:15:45.471 [http-nio-8080-exec-1] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 17:15:45.471 [http-nio-8080-exec-1] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 17:15:45.471 [http-nio-8080-exec-1] Settings - Statistics: disabled
[DEBUG] 2021-04-12 17:15:45.471 [http-nio-8080-exec-1] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 17:15:45.471 [http-nio-8080-exec-1] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 17:15:45.471 [http-nio-8080-exec-1] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 17:15:45.471 [http-nio-8080-exec-1] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 17:15:45.471 [http-nio-8080-exec-1] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 17:15:45.471 [http-nio-8080-exec-1] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 17:15:45.471 [http-nio-8080-exec-1] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 17:15:45.471 [http-nio-8080-exec-1] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 17:15:45.471 [http-nio-8080-exec-1] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 17:15:45.471 [http-nio-8080-exec-1] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 17:15:45.471 [http-nio-8080-exec-1] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 17:15:45.471 [http-nio-8080-exec-1] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 17:15:45.471 [http-nio-8080-exec-1] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 17:15:45.471 [http-nio-8080-exec-1] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 17:15:45.471 [http-nio-8080-exec-1] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 17:15:45.471 [http-nio-8080-exec-1] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 17:15:45.472 [http-nio-8080-exec-1] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 17:15:45.472 [http-nio-8080-exec-1] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 17:15:45.472 [http-nio-8080-exec-1] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 17:15:45.472 [http-nio-8080-exec-1] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 17:15:45.472 [http-nio-8080-exec-1] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 17:15:45.472 [http-nio-8080-exec-1] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 17:15:45.472 [http-nio-8080-exec-1] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 17:15:45.472 [http-nio-8080-exec-1] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 17:15:45.472 [http-nio-8080-exec-1] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 17:15:45.472 [http-nio-8080-exec-1] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 17:15:45.472 [http-nio-8080-exec-1] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 17:15:45.472 [http-nio-8080-exec-1] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 17:15:45.472 [http-nio-8080-exec-1] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 17:15:45.472 [http-nio-8080-exec-1] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 17:15:45.472 [http-nio-8080-exec-1] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 17:15:45.472 [http-nio-8080-exec-1] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 17:15:45.472 [http-nio-8080-exec-1] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 17:15:45.472 [http-nio-8080-exec-1] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 17:15:45.568 [http-nio-8080-exec-1] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 17:15:45.596 [http-nio-8080-exec-1] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 17:15:45.596 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, org.apache.activemq.broker.jmx.createConnector=false, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=13.0.1+9, user.name=Walker, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, derby.system.home=C:\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=13.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=Jun 30 2020 21:49:10 UTC, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, tomee.version=7.1.4, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.path=C:\tomcat\bin\bootstrap.jar;C:\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.57.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/tomcat/lib","C:/tomcat/lib/*.jar","C:\tomcat/lib","C:\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=6.3, openejb.version=7.1.4, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=C:\tomcat, user.dir=C:\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6cd63aff, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0, authconfigprovider.factory=false}
[DEBUG] 2021-04-12 17:15:45.623 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 17:15:45.623 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 17:15:45.627 [http-nio-8080-exec-1] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 17:15:45.631 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 17:15:45.631 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7b490ea4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@224c43ca]
[DEBUG] 2021-04-12 17:15:45.699 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 17:15:45.699 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 17:15:45.722 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 17:15:45.722 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 17:15:46.016 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 17:15:46.016 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 17:15:46.016 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 17:15:46.016 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 17:15:46.016 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 17:15:46.016 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 17:15:46.017 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 17:15:46.050 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@514b6bd3]
[DEBUG] 2021-04-12 17:15:46.051 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 17:15:46.053 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 17:15:46.053 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 17:15:46.054 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 17:15:46.054 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 17:15:46.054 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 17:15:46.069 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 17:15:46.074 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 17:15:46.076 [http-nio-8080-exec-1] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:15:46.076 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f71249]
[DEBUG] 2021-04-12 17:15:46.076 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 17:15:46.077 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 17:15:46.077 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 17:15:46.077 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 17:15:46.077 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 17:15:46.077 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 17:15:46.077 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 17:15:46.077 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 17:15:46.077 [http-nio-8080-exec-1] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:15:46.096 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:15:46.096 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:15:46.144 [http-nio-8080-exec-1] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 17:15:46.144 [http-nio-8080-exec-1] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 17:15:46.145 [http-nio-8080-exec-1] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 17:15:46.156 [http-nio-8080-exec-1] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 17:15:46.156 [http-nio-8080-exec-1] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 17:15:46.158 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 17:15:46.158 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 17:15:46.162 [http-nio-8080-exec-1] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7cf674b0
[DEBUG] 2021-04-12 17:15:46.164 [http-nio-8080-exec-1] SessionFactoryRegistry - Registering SessionFactory: b9486f20-5819-408d-bbd8-826f9297fc63 (<unnamed>)
[DEBUG] 2021-04-12 17:15:46.164 [http-nio-8080-exec-1] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 17:15:46.263 [http-nio-8080-exec-1] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 17:15:46.287 [http-nio-8080-exec-1] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:15:46.347 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 17:15:46.347 [http-nio-8080-exec-1] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 17:15:46.362 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 17:15:46.363 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 17:15:46.363 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:15:46.363 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 17:15:46.363 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:15:46.363 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 17:15:46.363 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:15:46.365 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 17:15:46.365 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:15:46.365 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 17:15:46.365 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:15:46.366 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 17:15:46.367 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 17:15:46.367 [http-nio-8080-exec-1] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 17:15:46.367 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 17:16:16.789 [http-nio-8080-exec-3] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:16:16.805 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 17:16:16.805 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 17:16:16.807 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 17:16:16.807 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 17:16:16.807 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:16:16.807 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 17:16:16.807 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:16:16.807 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 17:16:16.807 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:16:16.807 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 17:16:16.807 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:16:16.807 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 17:16:16.807 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:16:16.807 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 17:16:16.807 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 17:16:16.821 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 17:16:16.821 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 17:17:10.893 [http-nio-8080-exec-5] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-04-12 17:17:10.893 [http-nio-8080-exec-5] TransactionImpl - begin
[DEBUG] 2021-04-12 17:17:10.906 [http-nio-8080-exec-5] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-04-12 17:17:10.911 [http-nio-8080-exec-5] SQL - insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 17:17:10.946 [http-nio-8080-exec-5] IdentifierGeneratorHelper - Natively generated identity: 13
[DEBUG] 2021-04-12 17:17:10.946 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 17:17:10.948 [http-nio-8080-exec-5] TransactionImpl - committing
[DEBUG] 2021-04-12 17:17:10.948 [http-nio-8080-exec-5] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-04-12 17:17:10.948 [http-nio-8080-exec-5] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-04-12 17:17:10.950 [http-nio-8080-exec-5] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-04-12 17:17:10.950 [http-nio-8080-exec-5] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-04-12 17:17:10.952 [http-nio-8080-exec-5] EntityPrinter - Listing entities:
[DEBUG] 2021-04-12 17:17:10.953 [http-nio-8080-exec-5] EntityPrinter - team.entity.Character{franchise=Resident Evil, species=Human, name=Jill Valentine, id=13, media=Video Game, alignment=Good}
[DEBUG] 2021-04-12 17:17:11.056 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 17:17:11.057 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 17:39:46.698 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 17:39:46.701 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 17:39:46.709 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 17:39:46.865 [http-nio-8080-exec-1] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 17:39:46.870 [http-nio-8080-exec-1] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 17:39:47.199 [http-nio-8080-exec-1] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 17:39:47.200 [http-nio-8080-exec-1] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 17:39:47.227 [http-nio-8080-exec-1] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 17:39:47.642 [http-nio-8080-exec-1] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 17:39:47.675 [http-nio-8080-exec-1] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 17:39:47.676 [http-nio-8080-exec-1] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 17:39:47.723 [http-nio-8080-exec-1] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 17:39:47.777 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3308ce7c
[DEBUG] 2021-04-12 17:39:47.777 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3308ce7c
[DEBUG] 2021-04-12 17:39:47.778 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3308ce7c
[DEBUG] 2021-04-12 17:39:47.778 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@f9d4748
[DEBUG] 2021-04-12 17:39:47.779 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6b58b0c0
[DEBUG] 2021-04-12 17:39:47.780 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@24b441d7
[DEBUG] 2021-04-12 17:39:47.781 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2879e991
[DEBUG] 2021-04-12 17:39:47.781 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2879e991
[DEBUG] 2021-04-12 17:39:47.782 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2879e991
[DEBUG] 2021-04-12 17:39:47.784 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@246f5c79
[DEBUG] 2021-04-12 17:39:47.784 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@246f5c79
[DEBUG] 2021-04-12 17:39:47.784 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@246f5c79
[DEBUG] 2021-04-12 17:39:47.786 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7ac19b7e
[DEBUG] 2021-04-12 17:39:47.786 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7ac19b7e
[DEBUG] 2021-04-12 17:39:47.799 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7ac19b7e
[DEBUG] 2021-04-12 17:39:47.801 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@16907d88
[DEBUG] 2021-04-12 17:39:47.801 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@16907d88
[DEBUG] 2021-04-12 17:39:47.801 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@16907d88
[DEBUG] 2021-04-12 17:39:47.802 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@785709
[DEBUG] 2021-04-12 17:39:47.802 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@785709
[DEBUG] 2021-04-12 17:39:47.803 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@785709
[DEBUG] 2021-04-12 17:39:47.805 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a0f9f48
[DEBUG] 2021-04-12 17:39:47.805 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a0f9f48
[DEBUG] 2021-04-12 17:39:47.806 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a0f9f48
[DEBUG] 2021-04-12 17:39:47.807 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1d3ba649
[DEBUG] 2021-04-12 17:39:47.807 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1d3ba649
[DEBUG] 2021-04-12 17:39:47.807 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1d3ba649
[DEBUG] 2021-04-12 17:39:47.808 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67b1c8f4
[DEBUG] 2021-04-12 17:39:47.808 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67b1c8f4
[DEBUG] 2021-04-12 17:39:47.810 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@38f14a65
[DEBUG] 2021-04-12 17:39:47.811 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@38f14a65
[DEBUG] 2021-04-12 17:39:47.812 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@27427393
[DEBUG] 2021-04-12 17:39:47.812 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@27427393
[DEBUG] 2021-04-12 17:39:47.812 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6431aaa7
[DEBUG] 2021-04-12 17:39:47.813 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4553d41e
[DEBUG] 2021-04-12 17:39:47.814 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@38c1faec
[DEBUG] 2021-04-12 17:39:47.815 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@38c1faec
[DEBUG] 2021-04-12 17:39:47.816 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@25919b6b
[DEBUG] 2021-04-12 17:39:47.816 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@25919b6b
[DEBUG] 2021-04-12 17:39:47.820 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@53045732
[DEBUG] 2021-04-12 17:39:47.821 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@53045732
[DEBUG] 2021-04-12 17:39:47.823 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@357189a9
[DEBUG] 2021-04-12 17:39:47.823 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@357189a9
[DEBUG] 2021-04-12 17:39:47.833 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@140c8837
[DEBUG] 2021-04-12 17:39:47.834 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@140c8837
[DEBUG] 2021-04-12 17:39:47.836 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1c762893
[DEBUG] 2021-04-12 17:39:47.836 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1c762893
[DEBUG] 2021-04-12 17:39:47.838 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5efdba2c
[DEBUG] 2021-04-12 17:39:47.838 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5efdba2c
[DEBUG] 2021-04-12 17:39:47.840 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@789f66c5
[DEBUG] 2021-04-12 17:39:47.840 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@789f66c5
[DEBUG] 2021-04-12 17:39:47.842 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5cc2f6e4
[DEBUG] 2021-04-12 17:39:47.842 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5cc2f6e4
[DEBUG] 2021-04-12 17:39:47.843 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38c599ed
[DEBUG] 2021-04-12 17:39:47.844 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38c599ed
[DEBUG] 2021-04-12 17:39:47.848 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@404a8293
[DEBUG] 2021-04-12 17:39:47.848 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@404a8293
[DEBUG] 2021-04-12 17:39:47.850 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ab94de
[DEBUG] 2021-04-12 17:39:47.850 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ab94de
[DEBUG] 2021-04-12 17:39:47.850 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ab94de
[DEBUG] 2021-04-12 17:39:47.852 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@74fe8d7d
[DEBUG] 2021-04-12 17:39:47.854 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@391ee4b3
[DEBUG] 2021-04-12 17:39:47.854 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@391ee4b3
[DEBUG] 2021-04-12 17:39:47.855 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@391ee4b3
[DEBUG] 2021-04-12 17:39:47.855 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@344f230a
[DEBUG] 2021-04-12 17:39:47.857 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@e9e4139
[DEBUG] 2021-04-12 17:39:47.857 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@e9e4139
[DEBUG] 2021-04-12 17:39:47.858 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@62df7843
[DEBUG] 2021-04-12 17:39:47.858 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62df7843
[DEBUG] 2021-04-12 17:39:47.859 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5aec6fb0
[DEBUG] 2021-04-12 17:39:47.859 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5aec6fb0
[DEBUG] 2021-04-12 17:39:47.860 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@953a04b
[DEBUG] 2021-04-12 17:39:47.860 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@953a04b
[DEBUG] 2021-04-12 17:39:47.861 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@779fd816
[DEBUG] 2021-04-12 17:39:47.861 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@779fd816
[DEBUG] 2021-04-12 17:39:47.862 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1dfd5c26
[DEBUG] 2021-04-12 17:39:47.863 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1727283f
[DEBUG] 2021-04-12 17:39:47.864 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1727283f
[DEBUG] 2021-04-12 17:39:47.864 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1727283f
[DEBUG] 2021-04-12 17:39:47.865 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@60be4fbd
[DEBUG] 2021-04-12 17:39:47.865 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@60be4fbd
[DEBUG] 2021-04-12 17:39:47.865 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@60be4fbd
[DEBUG] 2021-04-12 17:39:47.866 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@15a7367d
[DEBUG] 2021-04-12 17:39:47.867 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@541849c5
[DEBUG] 2021-04-12 17:39:47.869 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2941bb44
[DEBUG] 2021-04-12 17:39:47.869 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2941bb44
[DEBUG] 2021-04-12 17:39:47.871 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2941bb44
[DEBUG] 2021-04-12 17:39:47.872 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ac4deb8
[DEBUG] 2021-04-12 17:39:47.872 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ac4deb8
[DEBUG] 2021-04-12 17:39:47.872 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ac4deb8
[DEBUG] 2021-04-12 17:39:47.873 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@303985de
[DEBUG] 2021-04-12 17:39:47.873 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@659de50
[DEBUG] 2021-04-12 17:39:47.875 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@60e9b282
[DEBUG] 2021-04-12 17:39:47.875 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@60e9b282
[DEBUG] 2021-04-12 17:39:47.876 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4a606b72
[DEBUG] 2021-04-12 17:39:47.877 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@581b83da
[DEBUG] 2021-04-12 17:39:47.877 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@581b83da
[DEBUG] 2021-04-12 17:39:47.879 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@42ceed7d
[DEBUG] 2021-04-12 17:39:47.879 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@42ceed7d
[DEBUG] 2021-04-12 17:39:47.880 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28ff06b2
[DEBUG] 2021-04-12 17:39:47.881 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79283bbb
[DEBUG] 2021-04-12 17:39:47.883 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@71037afc
[DEBUG] 2021-04-12 17:39:47.886 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1883a5c6
[DEBUG] 2021-04-12 17:39:47.886 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1883a5c6
[DEBUG] 2021-04-12 17:39:47.887 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@64af3be5
[DEBUG] 2021-04-12 17:39:47.887 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@505c693e
[DEBUG] 2021-04-12 17:39:47.887 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@60c6b5ea
[DEBUG] 2021-04-12 17:39:47.888 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@39e46ddb
[DEBUG] 2021-04-12 17:39:47.888 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@24891911
[DEBUG] 2021-04-12 17:39:47.888 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17af8127
[DEBUG] 2021-04-12 17:39:47.888 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@42131fdd
[DEBUG] 2021-04-12 17:39:47.889 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@580328f1
[DEBUG] 2021-04-12 17:39:47.930 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 17:39:47.931 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 17:39:47.932 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 17:39:47.934 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 17:39:47.935 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 17:39:47.937 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 17:39:47.937 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 17:39:47.939 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 17:39:47.940 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 17:39:47.940 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 17:39:47.941 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 17:39:47.941 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 17:39:47.941 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 17:39:47.942 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 17:39:47.953 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 17:39:47.953 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 17:39:47.953 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 17:39:48.225 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 17:39:48.836 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 17:39:48.836 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 17:39:48.836 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 17:39:48.881 [http-nio-8080-exec-1] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 17:39:48.911 [http-nio-8080-exec-1] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 17:39:48.957 [http-nio-8080-exec-1] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 17:39:49.026 [http-nio-8080-exec-1] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 17:39:49.031 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23b97b45] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@369d97f8]
[DEBUG] 2021-04-12 17:39:49.096 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 17:39:49.128 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 17:39:49.137 [http-nio-8080-exec-1] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 17:39:49.141 [http-nio-8080-exec-1] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 17:39:49.231 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:39:49.235 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 17:39:49.238 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 17:39:49.241 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 17:39:49.248 [http-nio-8080-exec-1] PropertyBinder - Building property id
[DEBUG] 2021-04-12 17:39:49.255 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 17:39:49.256 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:39:49.257 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 17:39:49.258 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 17:39:49.258 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 17:39:49.258 [http-nio-8080-exec-1] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 17:39:49.258 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:39:49.258 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 17:39:49.258 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 17:39:49.258 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 17:39:49.258 [http-nio-8080-exec-1] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 17:39:49.259 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:39:49.260 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 17:39:49.260 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 17:39:49.260 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 17:39:49.260 [http-nio-8080-exec-1] PropertyBinder - Building property media
[DEBUG] 2021-04-12 17:39:49.262 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:39:49.264 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 17:39:49.264 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 17:39:49.264 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 17:39:49.264 [http-nio-8080-exec-1] PropertyBinder - Building property name
[DEBUG] 2021-04-12 17:39:49.265 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 17:39:49.266 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 17:39:49.266 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 17:39:49.266 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 17:39:49.266 [http-nio-8080-exec-1] PropertyBinder - Building property species
[DEBUG] 2021-04-12 17:39:49.271 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 17:39:49.272 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 17:39:49.272 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 17:39:49.272 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 17:39:49.272 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 17:39:49.272 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 17:39:49.274 [http-nio-8080-exec-1] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 17:39:49.319 [http-nio-8080-exec-1] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 17:39:49.320 [http-nio-8080-exec-1] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 17:39:49.320 [http-nio-8080-exec-1] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 17:39:49.320 [http-nio-8080-exec-1] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 17:39:49.320 [http-nio-8080-exec-1] Settings - Statistics: disabled
[DEBUG] 2021-04-12 17:39:49.320 [http-nio-8080-exec-1] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 17:39:49.320 [http-nio-8080-exec-1] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 17:39:49.320 [http-nio-8080-exec-1] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 17:39:49.320 [http-nio-8080-exec-1] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 17:39:49.320 [http-nio-8080-exec-1] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 17:39:49.320 [http-nio-8080-exec-1] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 17:39:49.320 [http-nio-8080-exec-1] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 17:39:49.320 [http-nio-8080-exec-1] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 17:39:49.320 [http-nio-8080-exec-1] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 17:39:49.320 [http-nio-8080-exec-1] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 17:39:49.320 [http-nio-8080-exec-1] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 17:39:49.320 [http-nio-8080-exec-1] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 17:39:49.320 [http-nio-8080-exec-1] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 17:39:49.320 [http-nio-8080-exec-1] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 17:39:49.321 [http-nio-8080-exec-1] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 17:39:49.321 [http-nio-8080-exec-1] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 17:39:49.321 [http-nio-8080-exec-1] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 17:39:49.321 [http-nio-8080-exec-1] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 17:39:49.321 [http-nio-8080-exec-1] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 17:39:49.321 [http-nio-8080-exec-1] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 17:39:49.322 [http-nio-8080-exec-1] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 17:39:49.323 [http-nio-8080-exec-1] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 17:39:49.323 [http-nio-8080-exec-1] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 17:39:49.323 [http-nio-8080-exec-1] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 17:39:49.323 [http-nio-8080-exec-1] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 17:39:49.323 [http-nio-8080-exec-1] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 17:39:49.323 [http-nio-8080-exec-1] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 17:39:49.323 [http-nio-8080-exec-1] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 17:39:49.323 [http-nio-8080-exec-1] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 17:39:49.323 [http-nio-8080-exec-1] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 17:39:49.323 [http-nio-8080-exec-1] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 17:39:49.323 [http-nio-8080-exec-1] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 17:39:49.323 [http-nio-8080-exec-1] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 17:39:49.323 [http-nio-8080-exec-1] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 17:39:49.413 [http-nio-8080-exec-1] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 17:39:49.433 [http-nio-8080-exec-1] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 17:39:49.433 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, org.apache.activemq.broker.jmx.createConnector=false, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=13.0.1+9, user.name=Walker, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, derby.system.home=C:\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=13.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=Jun 30 2020 21:49:10 UTC, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, tomee.version=7.1.4, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.path=C:\tomcat\bin\bootstrap.jar;C:\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.57.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/tomcat/lib","C:/tomcat/lib/*.jar","C:\tomcat/lib","C:\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=6.3, openejb.version=7.1.4, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=C:\tomcat, user.dir=C:\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Walker\AppData\Local\JetBrains\IntelliJIdea2020.3\tomcat\645eb27e-9850-47ee-9900-3fbe835fd7a9, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@339ecd75, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0, authconfigprovider.factory=false}
[DEBUG] 2021-04-12 17:39:49.457 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 17:39:49.457 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 17:39:49.461 [http-nio-8080-exec-1] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 17:39:49.463 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 17:39:49.463 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23b97b45] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5ca941d6]
[DEBUG] 2021-04-12 17:39:49.548 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 17:39:49.548 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 17:39:49.572 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 17:39:49.572 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 17:39:49.877 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 17:39:49.877 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 17:39:49.877 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 17:39:49.877 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 17:39:49.877 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 17:39:49.877 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 17:39:49.877 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 17:39:49.921 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e19ac76]
[DEBUG] 2021-04-12 17:39:49.922 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 17:39:49.923 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 17:39:49.923 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 17:39:49.923 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 17:39:49.923 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 17:39:49.923 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 17:39:49.938 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 17:39:49.942 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 17:39:49.949 [http-nio-8080-exec-1] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:39:49.949 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3666de9f]
[DEBUG] 2021-04-12 17:39:49.949 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 17:39:49.949 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 17:39:49.949 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 17:39:49.949 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 17:39:49.949 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 17:39:49.949 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 17:39:49.949 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 17:39:49.950 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 17:39:49.950 [http-nio-8080-exec-1] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:39:49.966 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:39:49.967 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:39:50.023 [http-nio-8080-exec-1] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 17:39:50.023 [http-nio-8080-exec-1] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 17:39:50.023 [http-nio-8080-exec-1] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 17:39:50.034 [http-nio-8080-exec-1] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 17:39:50.034 [http-nio-8080-exec-1] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 17:39:50.036 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 17:39:50.036 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 17:39:50.040 [http-nio-8080-exec-1] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@38a15da3
[DEBUG] 2021-04-12 17:39:50.042 [http-nio-8080-exec-1] SessionFactoryRegistry - Registering SessionFactory: c60357fc-c770-443b-bff6-b076f61964d6 (<unnamed>)
[DEBUG] 2021-04-12 17:39:50.042 [http-nio-8080-exec-1] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 17:39:50.153 [http-nio-8080-exec-1] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 17:39:50.175 [http-nio-8080-exec-1] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:39:50.199 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 17:39:50.200 [http-nio-8080-exec-1] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 17:39:50.213 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [team.entity.Character#13]
[DEBUG] 2021-04-12 17:39:50.214 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 17:39:50.214 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:39:50.214 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `franchise` : value = Resident Evil
[DEBUG] 2021-04-12 17:39:50.214 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:39:50.214 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `media` : value = Video Game
[DEBUG] 2021-04-12 17:39:50.214 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:39:50.214 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = Jill Valentine
[DEBUG] 2021-04-12 17:39:50.215 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:39:50.215 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `species` : value = Human
[DEBUG] 2021-04-12 17:39:50.215 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:39:50.216 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [team.entity.Character#13]
[DEBUG] 2021-04-12 17:39:50.217 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 17:39:50.217 [http-nio-8080-exec-1] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#13
[DEBUG] 2021-04-12 17:39:50.217 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 17:40:10.764 [http-nio-8080-exec-4] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-04-12 17:40:10.764 [http-nio-8080-exec-4] TransactionImpl - begin
[DEBUG] 2021-04-12 17:40:10.778 [http-nio-8080-exec-4] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-04-12 17:40:10.783 [http-nio-8080-exec-4] SQL - insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 17:40:10.802 [http-nio-8080-exec-4] IdentifierGeneratorHelper - Natively generated identity: 14
[DEBUG] 2021-04-12 17:40:10.802 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 17:40:10.803 [http-nio-8080-exec-4] TransactionImpl - committing
[DEBUG] 2021-04-12 17:40:10.806 [http-nio-8080-exec-4] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-04-12 17:40:10.806 [http-nio-8080-exec-4] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-04-12 17:40:10.808 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-04-12 17:40:10.808 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-04-12 17:40:10.810 [http-nio-8080-exec-4] EntityPrinter - Listing entities:
[DEBUG] 2021-04-12 17:40:10.810 [http-nio-8080-exec-4] EntityPrinter - team.entity.Character{franchise=Resident Evil, species=Human, name=Chris Redfield, id=14, media=Video Game, alignment=Good}
[DEBUG] 2021-04-12 17:40:10.857 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 17:40:10.858 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 17:54:45.897 [http-nio-8080-exec-6] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:54:45.933 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 17:54:45.933 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 17:54:45.934 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 17:54:45.934 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 17:54:45.934 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:54:45.934 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 17:54:45.934 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:54:45.934 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 17:54:45.934 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:54:45.934 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 17:54:45.934 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:54:45.934 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 17:54:45.934 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:54:45.934 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 17:54:45.934 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 17:54:45.934 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 17:54:45.934 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 17:54:50.732 [http-nio-8080-exec-7] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:54:50.754 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 17:54:50.754 [http-nio-8080-exec-7] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 17:54:50.754 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 17:54:50.754 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 17:54:50.754 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:54:50.754 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 17:54:50.754 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:54:50.754 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 17:54:50.754 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:54:50.754 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 17:54:50.754 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:54:50.755 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 17:54:50.755 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:54:50.755 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 17:54:50.755 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 17:54:50.755 [http-nio-8080-exec-7] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 17:54:50.755 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 17:55:02.415 [http-nio-8080-exec-8] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 17:55:02.419 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 17:55:02.420 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 17:55:02.420 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [team.entity.Character#12]
[DEBUG] 2021-04-12 17:55:02.420 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `alignment` : value = Evil
[DEBUG] 2021-04-12 17:55:02.420 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:55:02.420 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `franchise` : value = Mega Man
[DEBUG] 2021-04-12 17:55:02.420 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:55:02.420 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `media` : value = Video Game
[DEBUG] 2021-04-12 17:55:02.420 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:55:02.420 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `name` : value = Sigma
[DEBUG] 2021-04-12 17:55:02.420 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:55:02.420 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `species` : value = Reploid
[DEBUG] 2021-04-12 17:55:02.420 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 17:55:02.420 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [team.entity.Character#12]
[DEBUG] 2021-04-12 17:55:02.420 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 17:55:02.420 [http-nio-8080-exec-8] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#12
[DEBUG] 2021-04-12 17:55:02.420 [http-nio-8080-exec-8] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 17:58:57.654 [http-nio-8080-exec-1] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-04-12 17:58:57.654 [http-nio-8080-exec-1] TransactionImpl - begin
[DEBUG] 2021-04-12 17:58:57.657 [http-nio-8080-exec-1] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-04-12 17:58:57.657 [http-nio-8080-exec-1] SQL - insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 17:58:57.692 [http-nio-8080-exec-1] IdentifierGeneratorHelper - Natively generated identity: 15
[DEBUG] 2021-04-12 17:58:57.692 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 17:58:57.692 [http-nio-8080-exec-1] TransactionImpl - committing
[DEBUG] 2021-04-12 17:58:57.692 [http-nio-8080-exec-1] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-04-12 17:58:57.692 [http-nio-8080-exec-1] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-04-12 17:58:57.693 [http-nio-8080-exec-1] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-04-12 17:58:57.693 [http-nio-8080-exec-1] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-04-12 17:58:57.695 [http-nio-8080-exec-1] EntityPrinter - Listing entities:
[DEBUG] 2021-04-12 17:58:57.696 [http-nio-8080-exec-1] EntityPrinter - team.entity.Character{franchise=Resident Evil, species=Human, name=Wesker, id=15, media=Video Game, alignment=Evil}
[DEBUG] 2021-04-12 17:58:58.020 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 17:58:58.022 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 19:08:38.782 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 19:08:38.810 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 19:08:38.838 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 19:08:39.288 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 19:08:39.291 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 19:08:39.706 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 19:08:39.706 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 19:08:39.713 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 19:08:40.228 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 19:08:40.326 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 19:08:40.350 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 19:08:40.399 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 19:08:40.472 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5cb042da
[DEBUG] 2021-04-12 19:08:40.472 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5cb042da
[DEBUG] 2021-04-12 19:08:40.473 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5cb042da
[DEBUG] 2021-04-12 19:08:40.474 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2f651f93
[DEBUG] 2021-04-12 19:08:40.474 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@736309a9
[DEBUG] 2021-04-12 19:08:40.475 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6f6621e3
[DEBUG] 2021-04-12 19:08:40.477 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@51a8313b
[DEBUG] 2021-04-12 19:08:40.477 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@51a8313b
[DEBUG] 2021-04-12 19:08:40.478 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@51a8313b
[DEBUG] 2021-04-12 19:08:40.481 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@39ad12b6
[DEBUG] 2021-04-12 19:08:40.481 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@39ad12b6
[DEBUG] 2021-04-12 19:08:40.481 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@39ad12b6
[DEBUG] 2021-04-12 19:08:40.482 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7df76d99
[DEBUG] 2021-04-12 19:08:40.482 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7df76d99
[DEBUG] 2021-04-12 19:08:40.482 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7df76d99
[DEBUG] 2021-04-12 19:08:40.483 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2e5ee2c9
[DEBUG] 2021-04-12 19:08:40.483 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2e5ee2c9
[DEBUG] 2021-04-12 19:08:40.483 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2e5ee2c9
[DEBUG] 2021-04-12 19:08:40.485 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@25a5c7db
[DEBUG] 2021-04-12 19:08:40.485 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@25a5c7db
[DEBUG] 2021-04-12 19:08:40.485 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@25a5c7db
[DEBUG] 2021-04-12 19:08:40.486 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7f5eae0f
[DEBUG] 2021-04-12 19:08:40.486 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7f5eae0f
[DEBUG] 2021-04-12 19:08:40.486 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f5eae0f
[DEBUG] 2021-04-12 19:08:40.488 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@68577ba8
[DEBUG] 2021-04-12 19:08:40.488 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@68577ba8
[DEBUG] 2021-04-12 19:08:40.488 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68577ba8
[DEBUG] 2021-04-12 19:08:40.489 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@43f0c2d1
[DEBUG] 2021-04-12 19:08:40.489 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@43f0c2d1
[DEBUG] 2021-04-12 19:08:40.490 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c5c616f
[DEBUG] 2021-04-12 19:08:40.490 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c5c616f
[DEBUG] 2021-04-12 19:08:40.492 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3f985a86
[DEBUG] 2021-04-12 19:08:40.492 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3f985a86
[DEBUG] 2021-04-12 19:08:40.492 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4096aa05
[DEBUG] 2021-04-12 19:08:40.493 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@184fb68d
[DEBUG] 2021-04-12 19:08:40.494 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@16a49a5d
[DEBUG] 2021-04-12 19:08:40.495 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@16a49a5d
[DEBUG] 2021-04-12 19:08:40.495 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7c2b58c0
[DEBUG] 2021-04-12 19:08:40.495 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7c2b58c0
[DEBUG] 2021-04-12 19:08:40.536 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5c73f672
[DEBUG] 2021-04-12 19:08:40.538 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5c73f672
[DEBUG] 2021-04-12 19:08:40.540 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7a34f66a
[DEBUG] 2021-04-12 19:08:40.540 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7a34f66a
[DEBUG] 2021-04-12 19:08:40.543 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2459319c
[DEBUG] 2021-04-12 19:08:40.543 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2459319c
[DEBUG] 2021-04-12 19:08:40.545 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7808f638
[DEBUG] 2021-04-12 19:08:40.545 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7808f638
[DEBUG] 2021-04-12 19:08:40.566 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3db663d0
[DEBUG] 2021-04-12 19:08:40.566 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3db663d0
[DEBUG] 2021-04-12 19:08:40.569 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5524b72f
[DEBUG] 2021-04-12 19:08:40.570 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5524b72f
[DEBUG] 2021-04-12 19:08:40.571 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e6f2bb5
[DEBUG] 2021-04-12 19:08:40.571 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e6f2bb5
[DEBUG] 2021-04-12 19:08:40.572 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38af1bf6
[DEBUG] 2021-04-12 19:08:40.573 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38af1bf6
[DEBUG] 2021-04-12 19:08:40.574 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4defd42
[DEBUG] 2021-04-12 19:08:40.574 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4defd42
[DEBUG] 2021-04-12 19:08:40.575 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3f9270ed
[DEBUG] 2021-04-12 19:08:40.575 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3f9270ed
[DEBUG] 2021-04-12 19:08:40.575 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3f9270ed
[DEBUG] 2021-04-12 19:08:40.577 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@61f39bb
[DEBUG] 2021-04-12 19:08:40.579 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3bfc6a5e
[DEBUG] 2021-04-12 19:08:40.580 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3bfc6a5e
[DEBUG] 2021-04-12 19:08:40.581 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3bfc6a5e
[DEBUG] 2021-04-12 19:08:40.581 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e00ed0f
[DEBUG] 2021-04-12 19:08:40.582 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@65753040
[DEBUG] 2021-04-12 19:08:40.583 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@65753040
[DEBUG] 2021-04-12 19:08:40.584 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4e1459ea
[DEBUG] 2021-04-12 19:08:40.585 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e1459ea
[DEBUG] 2021-04-12 19:08:40.585 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@57c47a9e
[DEBUG] 2021-04-12 19:08:40.585 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@57c47a9e
[DEBUG] 2021-04-12 19:08:40.587 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@52d6cd34
[DEBUG] 2021-04-12 19:08:40.588 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@52d6cd34
[DEBUG] 2021-04-12 19:08:40.588 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c2e3264
[DEBUG] 2021-04-12 19:08:40.588 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c2e3264
[DEBUG] 2021-04-12 19:08:40.589 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6014a9ba
[DEBUG] 2021-04-12 19:08:40.590 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@cbc8d0f
[DEBUG] 2021-04-12 19:08:40.590 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@cbc8d0f
[DEBUG] 2021-04-12 19:08:40.590 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@cbc8d0f
[DEBUG] 2021-04-12 19:08:40.591 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@17b6d426
[DEBUG] 2021-04-12 19:08:40.591 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@17b6d426
[DEBUG] 2021-04-12 19:08:40.593 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@17b6d426
[DEBUG] 2021-04-12 19:08:40.595 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@20e3c449
[DEBUG] 2021-04-12 19:08:40.595 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@680a66dd
[DEBUG] 2021-04-12 19:08:40.596 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@76ddd61a
[DEBUG] 2021-04-12 19:08:40.596 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@76ddd61a
[DEBUG] 2021-04-12 19:08:40.597 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@76ddd61a
[DEBUG] 2021-04-12 19:08:40.615 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@33a3c44a
[DEBUG] 2021-04-12 19:08:40.615 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@33a3c44a
[DEBUG] 2021-04-12 19:08:40.615 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@33a3c44a
[DEBUG] 2021-04-12 19:08:40.616 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@93f432e
[DEBUG] 2021-04-12 19:08:40.616 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5b051a5c
[DEBUG] 2021-04-12 19:08:40.618 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3f9f71ff
[DEBUG] 2021-04-12 19:08:40.618 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3f9f71ff
[DEBUG] 2021-04-12 19:08:40.619 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@764cba
[DEBUG] 2021-04-12 19:08:40.620 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@48eb9836
[DEBUG] 2021-04-12 19:08:40.620 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@48eb9836
[DEBUG] 2021-04-12 19:08:40.622 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@79d06bbd
[DEBUG] 2021-04-12 19:08:40.624 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@79d06bbd
[DEBUG] 2021-04-12 19:08:40.626 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@e8ea697
[DEBUG] 2021-04-12 19:08:40.627 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@45bf6f39
[DEBUG] 2021-04-12 19:08:40.629 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5fe7f967
[DEBUG] 2021-04-12 19:08:40.631 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5477a1ca
[DEBUG] 2021-04-12 19:08:40.632 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5477a1ca
[DEBUG] 2021-04-12 19:08:40.635 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@670d4d38
[DEBUG] 2021-04-12 19:08:40.636 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@131ff6fa
[DEBUG] 2021-04-12 19:08:40.636 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@43b40233
[DEBUG] 2021-04-12 19:08:40.636 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@23eff5d1
[DEBUG] 2021-04-12 19:08:40.636 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e060819
[DEBUG] 2021-04-12 19:08:40.636 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@42c28305
[DEBUG] 2021-04-12 19:08:40.637 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2184b4f4
[DEBUG] 2021-04-12 19:08:40.637 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7d199c68
[DEBUG] 2021-04-12 19:08:40.710 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 19:08:40.712 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 19:08:40.724 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 19:08:40.727 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 19:08:40.729 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 19:08:40.730 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 19:08:40.731 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 19:08:40.732 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 19:08:40.736 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 19:08:40.736 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 19:08:40.738 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 19:08:40.738 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 19:08:40.738 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 19:08:40.740 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 19:08:40.749 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 19:08:40.749 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 19:08:40.749 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 19:08:41.195 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 19:08:41.499 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 19:08:41.499 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 19:08:41.500 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 19:08:41.721 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 19:08:41.763 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 19:08:41.866 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 19:08:41.945 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 19:08:41.950 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@fb2e3fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@43a09ce2]
[DEBUG] 2021-04-12 19:08:42.000 [main] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 19:08:42.035 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 19:08:42.042 [main] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 19:08:42.045 [main] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 19:08:42.074 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 19:08:42.076 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 19:08:42.078 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 19:08:42.079 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 19:08:42.081 [main] PropertyBinder - Building property id
[DEBUG] 2021-04-12 19:08:42.084 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 19:08:42.085 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 19:08:42.085 [main] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 19:08:42.086 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 19:08:42.086 [main] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 19:08:42.086 [main] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 19:08:42.086 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 19:08:42.086 [main] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 19:08:42.087 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 19:08:42.088 [main] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 19:08:42.089 [main] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 19:08:42.090 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 19:08:42.091 [main] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 19:08:42.091 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 19:08:42.092 [main] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 19:08:42.092 [main] PropertyBinder - Building property media
[DEBUG] 2021-04-12 19:08:42.092 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 19:08:42.093 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 19:08:42.093 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 19:08:42.093 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 19:08:42.095 [main] PropertyBinder - Building property name
[DEBUG] 2021-04-12 19:08:42.096 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 19:08:42.096 [main] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 19:08:42.096 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 19:08:42.096 [main] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 19:08:42.096 [main] PropertyBinder - Building property species
[DEBUG] 2021-04-12 19:08:42.100 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 19:08:42.100 [main] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 19:08:42.100 [main] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 19:08:42.100 [main] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 19:08:42.100 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 19:08:42.100 [main] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 19:08:42.101 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 19:08:42.186 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 19:08:42.196 [main] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 19:08:42.196 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 19:08:42.196 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 19:08:42.196 [main] Settings - Statistics: disabled
[DEBUG] 2021-04-12 19:08:42.196 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 19:08:42.196 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 19:08:42.196 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 19:08:42.198 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 19:08:42.198 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 19:08:42.198 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 19:08:42.198 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 19:08:42.199 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 19:08:42.199 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 19:08:42.199 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 19:08:42.200 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 19:08:42.200 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 19:08:42.200 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 19:08:42.200 [main] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 19:08:42.201 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 19:08:42.201 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 19:08:42.201 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 19:08:42.201 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 19:08:42.201 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 19:08:42.201 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 19:08:42.201 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 19:08:42.202 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 19:08:42.202 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 19:08:42.202 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 19:08:42.202 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 19:08:42.202 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 19:08:42.202 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 19:08:42.202 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 19:08:42.202 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 19:08:42.202 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 19:08:42.203 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 19:08:42.203 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 19:08:42.206 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 19:08:42.206 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 19:08:42.316 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 19:08:42.346 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 19:08:42.347 [main] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit-rt.jar;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\test-classes;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\classes;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Walker\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Walker\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Walker\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Walker\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Walker\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Walker\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Walker\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Walker\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Walker\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Walker\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Walker\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Walker\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Walker\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Walker\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\Walker\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Walker\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Walker\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Walker\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Walker\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-client\2.29.1\jersey-client-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\2.1.6\jakarta.ws.rs-api-2.1.6.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-common\2.29.1\jersey-common-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.3\osgi-resource-locator-1.0.3.jar;C:\Users\Walker\.m2\repository\com\sun\activation\jakarta.activation\1.2.1\jakarta.activation-1.2.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\jakarta.inject\2.6.1\jakarta.inject-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\inject\jersey-hk2\2.29.1\jersey-hk2-2.29.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-locator\2.6.1\hk2-locator-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\aopalliance-repackaged\2.6.1\aopalliance-repackaged-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-api\2.6.1\hk2-api-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-utils\2.6.1\hk2-utils-2.6.1.jar;C:\Users\Walker\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Walker\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Walker\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0\jackson-core-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 team.persistence.GenericDaoTest,getByIdSuccess, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=13.0.1+9, user.name=Walker, path.separator=;, hibernate.connection.username=****, os.version=6.3, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Walker\AppData\Local\Temp\, java.version=13.0.1, user.dir=C:\Users\Walker\IdeaProjects\fictionalCharacterAPI, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@40bb4f87, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0}
[DEBUG] 2021-04-12 19:08:42.400 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-04-12 19:08:42.400 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 19:08:42.408 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 19:08:42.408 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@fb2e3fd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@314a31b0]
[DEBUG] 2021-04-12 19:08:42.490 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 19:08:42.490 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 19:08:42.537 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 19:08:42.538 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 19:08:42.975 [main] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 19:08:42.975 [main] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 19:08:42.975 [main] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 19:08:42.975 [main] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 19:08:42.975 [main] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 19:08:42.975 [main] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 19:08:42.975 [main] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 19:08:43.012 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340cb97f]
[DEBUG] 2021-04-12 19:08:43.013 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 19:08:43.013 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 19:08:43.013 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 19:08:43.013 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 19:08:43.013 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 19:08:43.014 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 19:08:43.024 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 19:08:43.027 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 19:08:43.029 [main] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 19:08:43.030 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51ba952e]
[DEBUG] 2021-04-12 19:08:43.030 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 19:08:43.030 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 19:08:43.030 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 19:08:43.030 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 19:08:43.030 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 19:08:43.030 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 19:08:43.030 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 19:08:43.030 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 19:08:43.030 [main] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 19:08:43.050 [main] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 19:08:43.051 [main] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 19:08:43.073 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 19:08:43.073 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 19:08:43.073 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 19:08:43.078 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 19:08:43.078 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 19:08:43.079 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 19:08:43.079 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 19:08:43.089 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3e14d390
[DEBUG] 2021-04-12 19:08:43.094 [main] SessionFactoryRegistry - Registering SessionFactory: 1f58f074-c2e2-4acb-b31a-42d835f70498 (<unnamed>)
[DEBUG] 2021-04-12 19:08:43.095 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 19:08:43.176 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 19:08:43.190 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 19:08:43.229 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 19:08:43.229 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 19:08:43.237 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 19:08:43.238 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 19:08:43.238 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 19:08:43.238 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 19:08:43.238 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 19:08:43.238 [main] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 19:08:43.238 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 19:08:43.238 [main] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 19:08:43.238 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 19:08:43.238 [main] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 19:08:43.238 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 19:08:43.239 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 19:08:43.239 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 19:08:43.241 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#1
[DEBUG] 2021-04-12 19:08:43.242 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 19:09:09.959 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 19:09:09.962 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 19:09:09.971 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 19:09:10.219 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 19:09:10.226 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 19:09:10.537 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 19:09:10.537 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 19:09:10.544 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 19:09:10.867 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 19:09:10.892 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 19:09:10.893 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 19:09:10.912 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 19:09:10.951 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2f651f93
[DEBUG] 2021-04-12 19:09:10.951 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2f651f93
[DEBUG] 2021-04-12 19:09:10.951 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2f651f93
[DEBUG] 2021-04-12 19:09:10.952 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@736309a9
[DEBUG] 2021-04-12 19:09:10.952 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6f6621e3
[DEBUG] 2021-04-12 19:09:10.953 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3cf7298d
[DEBUG] 2021-04-12 19:09:10.954 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@148c7c4b
[DEBUG] 2021-04-12 19:09:10.954 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@148c7c4b
[DEBUG] 2021-04-12 19:09:10.955 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@148c7c4b
[DEBUG] 2021-04-12 19:09:10.958 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6aba5d30
[DEBUG] 2021-04-12 19:09:10.958 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6aba5d30
[DEBUG] 2021-04-12 19:09:10.958 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6aba5d30
[DEBUG] 2021-04-12 19:09:10.959 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2c6aed22
[DEBUG] 2021-04-12 19:09:10.959 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2c6aed22
[DEBUG] 2021-04-12 19:09:10.959 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2c6aed22
[DEBUG] 2021-04-12 19:09:10.960 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1416a80a
[DEBUG] 2021-04-12 19:09:10.961 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1416a80a
[DEBUG] 2021-04-12 19:09:10.961 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1416a80a
[DEBUG] 2021-04-12 19:09:10.966 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2b5183ec
[DEBUG] 2021-04-12 19:09:10.966 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2b5183ec
[DEBUG] 2021-04-12 19:09:10.966 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2b5183ec
[DEBUG] 2021-04-12 19:09:10.968 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@b0e5507
[DEBUG] 2021-04-12 19:09:10.968 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@b0e5507
[DEBUG] 2021-04-12 19:09:10.968 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@b0e5507
[DEBUG] 2021-04-12 19:09:10.969 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@51d9b06c
[DEBUG] 2021-04-12 19:09:10.970 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@51d9b06c
[DEBUG] 2021-04-12 19:09:10.971 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@51d9b06c
[DEBUG] 2021-04-12 19:09:10.973 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7a1f45ed
[DEBUG] 2021-04-12 19:09:10.974 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7a1f45ed
[DEBUG] 2021-04-12 19:09:10.975 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@73437222
[DEBUG] 2021-04-12 19:09:10.975 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@73437222
[DEBUG] 2021-04-12 19:09:10.976 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4096aa05
[DEBUG] 2021-04-12 19:09:10.976 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4096aa05
[DEBUG] 2021-04-12 19:09:10.977 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@184fb68d
[DEBUG] 2021-04-12 19:09:10.980 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71466383
[DEBUG] 2021-04-12 19:09:10.980 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@129fed45
[DEBUG] 2021-04-12 19:09:10.981 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@129fed45
[DEBUG] 2021-04-12 19:09:10.981 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7a2b1eb4
[DEBUG] 2021-04-12 19:09:10.983 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7a2b1eb4
[DEBUG] 2021-04-12 19:09:10.986 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@e4b6f47
[DEBUG] 2021-04-12 19:09:10.987 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@e4b6f47
[DEBUG] 2021-04-12 19:09:11.070 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@173797f0
[DEBUG] 2021-04-12 19:09:11.070 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@173797f0
[DEBUG] 2021-04-12 19:09:11.117 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@33d53216
[DEBUG] 2021-04-12 19:09:11.118 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@33d53216
[DEBUG] 2021-04-12 19:09:11.119 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1d0a61c8
[DEBUG] 2021-04-12 19:09:11.120 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1d0a61c8
[DEBUG] 2021-04-12 19:09:11.121 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@47fbc56
[DEBUG] 2021-04-12 19:09:11.121 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@47fbc56
[DEBUG] 2021-04-12 19:09:11.131 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@64f16277
[DEBUG] 2021-04-12 19:09:11.132 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@64f16277
[DEBUG] 2021-04-12 19:09:11.134 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@26d96e5
[DEBUG] 2021-04-12 19:09:11.135 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@26d96e5
[DEBUG] 2021-04-12 19:09:11.136 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7a0f244f
[DEBUG] 2021-04-12 19:09:11.136 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a0f244f
[DEBUG] 2021-04-12 19:09:11.137 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@54657dd2
[DEBUG] 2021-04-12 19:09:11.137 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@54657dd2
[DEBUG] 2021-04-12 19:09:11.138 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@61f39bb
[DEBUG] 2021-04-12 19:09:11.139 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@61f39bb
[DEBUG] 2021-04-12 19:09:11.139 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@61f39bb
[DEBUG] 2021-04-12 19:09:11.140 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c0b4c83
[DEBUG] 2021-04-12 19:09:11.141 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@350a94ce
[DEBUG] 2021-04-12 19:09:11.142 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@350a94ce
[DEBUG] 2021-04-12 19:09:11.142 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@350a94ce
[DEBUG] 2021-04-12 19:09:11.143 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1b4ae4e0
[DEBUG] 2021-04-12 19:09:11.144 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@37d871c2
[DEBUG] 2021-04-12 19:09:11.144 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37d871c2
[DEBUG] 2021-04-12 19:09:11.145 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@476e8796
[DEBUG] 2021-04-12 19:09:11.145 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@476e8796
[DEBUG] 2021-04-12 19:09:11.146 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@61d84e08
[DEBUG] 2021-04-12 19:09:11.146 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@61d84e08
[DEBUG] 2021-04-12 19:09:11.147 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7397c6
[DEBUG] 2021-04-12 19:09:11.147 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7397c6
[DEBUG] 2021-04-12 19:09:11.149 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6014a9ba
[DEBUG] 2021-04-12 19:09:11.149 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6014a9ba
[DEBUG] 2021-04-12 19:09:11.149 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@f08fdce
[DEBUG] 2021-04-12 19:09:11.150 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6794ac0b
[DEBUG] 2021-04-12 19:09:11.150 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6794ac0b
[DEBUG] 2021-04-12 19:09:11.151 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6794ac0b
[DEBUG] 2021-04-12 19:09:11.151 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@46a953cf
[DEBUG] 2021-04-12 19:09:11.152 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@46a953cf
[DEBUG] 2021-04-12 19:09:11.152 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@46a953cf
[DEBUG] 2021-04-12 19:09:11.153 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@680a66dd
[DEBUG] 2021-04-12 19:09:11.154 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@40712ee9
[DEBUG] 2021-04-12 19:09:11.154 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7942a854
[DEBUG] 2021-04-12 19:09:11.155 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7942a854
[DEBUG] 2021-04-12 19:09:11.155 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7942a854
[DEBUG] 2021-04-12 19:09:11.156 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@93f432e
[DEBUG] 2021-04-12 19:09:11.156 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@93f432e
[DEBUG] 2021-04-12 19:09:11.156 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@93f432e
[DEBUG] 2021-04-12 19:09:11.157 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5b051a5c
[DEBUG] 2021-04-12 19:09:11.157 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@58cf8f94
[DEBUG] 2021-04-12 19:09:11.158 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@764cba
[DEBUG] 2021-04-12 19:09:11.159 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@764cba
[DEBUG] 2021-04-12 19:09:11.159 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3872bc37
[DEBUG] 2021-04-12 19:09:11.160 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3e3861d7
[DEBUG] 2021-04-12 19:09:11.160 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e3861d7
[DEBUG] 2021-04-12 19:09:11.161 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@e8ea697
[DEBUG] 2021-04-12 19:09:11.162 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@e8ea697
[DEBUG] 2021-04-12 19:09:11.162 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@45bf6f39
[DEBUG] 2021-04-12 19:09:11.163 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@618ad2aa
[DEBUG] 2021-04-12 19:09:11.164 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3eabe84a
[DEBUG] 2021-04-12 19:09:11.166 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@670d4d38
[DEBUG] 2021-04-12 19:09:11.166 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@670d4d38
[DEBUG] 2021-04-12 19:09:11.169 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2e060819
[DEBUG] 2021-04-12 19:09:11.169 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@42c28305
[DEBUG] 2021-04-12 19:09:11.169 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2184b4f4
[DEBUG] 2021-04-12 19:09:11.169 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7d199c68
[DEBUG] 2021-04-12 19:09:11.169 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@63411512
[DEBUG] 2021-04-12 19:09:11.169 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@35cd68d4
[DEBUG] 2021-04-12 19:09:11.170 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@316a598d
[DEBUG] 2021-04-12 19:09:11.170 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@216914
[DEBUG] 2021-04-12 19:09:11.200 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 19:09:11.200 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 19:09:11.203 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 19:09:11.203 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 19:09:11.204 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 19:09:11.204 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 19:09:11.209 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 19:09:11.210 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 19:09:11.211 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 19:09:11.211 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 19:09:11.212 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 19:09:11.212 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 19:09:11.212 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 19:09:11.213 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 19:09:11.217 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 19:09:11.218 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 19:09:11.218 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 19:09:11.430 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 19:09:12.177 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 19:09:12.177 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 19:09:12.177 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 19:09:12.210 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 19:09:12.244 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 19:09:12.352 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 19:09:12.444 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 19:09:12.449 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@63538bb4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@24534cb0]
[DEBUG] 2021-04-12 19:09:12.494 [main] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 19:09:12.518 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 19:09:12.524 [main] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 19:09:12.526 [main] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 19:09:12.549 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 19:09:12.551 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 19:09:12.553 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 19:09:12.555 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 19:09:12.558 [main] PropertyBinder - Building property id
[DEBUG] 2021-04-12 19:09:12.560 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 19:09:12.561 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 19:09:12.562 [main] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 19:09:12.562 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 19:09:12.563 [main] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 19:09:12.563 [main] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 19:09:12.563 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 19:09:12.563 [main] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 19:09:12.564 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 19:09:12.565 [main] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 19:09:12.566 [main] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 19:09:12.567 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 19:09:12.568 [main] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 19:09:12.568 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 19:09:12.568 [main] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 19:09:12.568 [main] PropertyBinder - Building property media
[DEBUG] 2021-04-12 19:09:12.569 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 19:09:12.569 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 19:09:12.569 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 19:09:12.569 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 19:09:12.569 [main] PropertyBinder - Building property name
[DEBUG] 2021-04-12 19:09:12.569 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 19:09:12.570 [main] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 19:09:12.570 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 19:09:12.570 [main] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 19:09:12.570 [main] PropertyBinder - Building property species
[DEBUG] 2021-04-12 19:09:12.576 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 19:09:12.576 [main] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 19:09:12.576 [main] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 19:09:12.576 [main] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 19:09:12.576 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 19:09:12.576 [main] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 19:09:12.577 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 19:09:12.610 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 19:09:12.612 [main] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 19:09:12.612 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 19:09:12.612 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 19:09:12.612 [main] Settings - Statistics: disabled
[DEBUG] 2021-04-12 19:09:12.612 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 19:09:12.612 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 19:09:12.612 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 19:09:12.612 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 19:09:12.612 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 19:09:12.612 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 19:09:12.612 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 19:09:12.612 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 19:09:12.612 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 19:09:12.612 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 19:09:12.612 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 19:09:12.614 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 19:09:12.614 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 19:09:12.614 [main] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 19:09:12.614 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 19:09:12.614 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 19:09:12.614 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 19:09:12.614 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 19:09:12.614 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 19:09:12.614 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 19:09:12.614 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 19:09:12.614 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 19:09:12.614 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 19:09:12.615 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 19:09:12.615 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 19:09:12.615 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 19:09:12.615 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 19:09:12.615 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 19:09:12.615 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 19:09:12.615 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 19:09:12.616 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 19:09:12.616 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 19:09:12.619 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 19:09:12.619 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 19:09:12.671 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 19:09:12.687 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 19:09:12.688 [main] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit-rt.jar;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\test-classes;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\classes;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Walker\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Walker\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Walker\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Walker\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Walker\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Walker\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Walker\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Walker\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Walker\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Walker\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Walker\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Walker\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Walker\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Walker\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\Walker\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Walker\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Walker\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Walker\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Walker\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-client\2.29.1\jersey-client-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\2.1.6\jakarta.ws.rs-api-2.1.6.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-common\2.29.1\jersey-common-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.3\osgi-resource-locator-1.0.3.jar;C:\Users\Walker\.m2\repository\com\sun\activation\jakarta.activation\1.2.1\jakarta.activation-1.2.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\jakarta.inject\2.6.1\jakarta.inject-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\inject\jersey-hk2\2.29.1\jersey-hk2-2.29.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-locator\2.6.1\hk2-locator-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\aopalliance-repackaged\2.6.1\aopalliance-repackaged-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-api\2.6.1\hk2-api-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-utils\2.6.1\hk2-utils-2.6.1.jar;C:\Users\Walker\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Walker\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Walker\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0\jackson-core-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 team.persistence.GenericDaoTest,insertSuccess, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=13.0.1+9, user.name=Walker, path.separator=;, hibernate.connection.username=****, os.version=6.3, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Walker\AppData\Local\Temp\, java.version=13.0.1, user.dir=C:\Users\Walker\IdeaProjects\fictionalCharacterAPI, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6c184d4d, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0}
[DEBUG] 2021-04-12 19:09:12.703 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-04-12 19:09:12.703 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 19:09:12.704 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 19:09:12.704 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@63538bb4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2792b416]
[DEBUG] 2021-04-12 19:09:12.768 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 19:09:12.768 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 19:09:12.785 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 19:09:12.785 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 19:09:12.993 [main] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 19:09:12.993 [main] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 19:09:12.993 [main] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 19:09:12.993 [main] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 19:09:12.993 [main] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 19:09:12.993 [main] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 19:09:12.993 [main] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 19:09:13.011 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b37fbec]
[DEBUG] 2021-04-12 19:09:13.012 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 19:09:13.012 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 19:09:13.012 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 19:09:13.012 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 19:09:13.012 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 19:09:13.012 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 19:09:13.023 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 19:09:13.025 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 19:09:13.027 [main] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 19:09:13.027 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e40fbb3]
[DEBUG] 2021-04-12 19:09:13.027 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 19:09:13.027 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 19:09:13.027 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 19:09:13.028 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 19:09:13.028 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 19:09:13.028 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 19:09:13.028 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 19:09:13.029 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 19:09:13.029 [main] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 19:09:13.041 [main] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 19:09:13.041 [main] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 19:09:13.062 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 19:09:13.063 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 19:09:13.063 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 19:09:13.068 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 19:09:13.068 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 19:09:13.069 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 19:09:13.069 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 19:09:13.071 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@31ab1e67
[DEBUG] 2021-04-12 19:09:13.073 [main] SessionFactoryRegistry - Registering SessionFactory: d7e3e3d9-cf5c-4f61-87ef-40ac37df7177 (<unnamed>)
[DEBUG] 2021-04-12 19:09:13.073 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 19:09:13.132 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 19:09:13.140 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-04-12 19:09:13.140 [main] TransactionImpl - begin
[DEBUG] 2021-04-12 19:09:13.170 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-04-12 19:09:13.174 [main] SQL - insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 19:09:13.223 [main] IdentifierGeneratorHelper - Natively generated identity: 16
[DEBUG] 2021-04-12 19:09:13.223 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 19:09:13.225 [main] TransactionImpl - committing
[DEBUG] 2021-04-12 19:09:13.225 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-04-12 19:09:13.226 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-04-12 19:09:13.227 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-04-12 19:09:13.227 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-04-12 19:09:13.228 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-04-12 19:09:13.228 [main] EntityPrinter - team.entity.Character{franchise=Spawn, species=Hellspawn, name=Spawn, id=16, media=Comic, alignment=Neutral}
[DEBUG] 2021-04-12 19:09:13.307 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 19:09:13.310 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 19:09:13.321 [main] SQL - select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 19:09:13.353 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-04-12 19:09:13.354 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-04-12 19:09:13.358 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#16]
[DEBUG] 2021-04-12 19:09:13.358 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Neutral
[DEBUG] 2021-04-12 19:09:13.358 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 19:09:13.358 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Spawn
[DEBUG] 2021-04-12 19:09:13.358 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 19:09:13.358 [main] TwoPhaseLoad - Processing attribute `media` : value = Comic
[DEBUG] 2021-04-12 19:09:13.358 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 19:09:13.358 [main] TwoPhaseLoad - Processing attribute `name` : value = Spawn
[DEBUG] 2021-04-12 19:09:13.358 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 19:09:13.358 [main] TwoPhaseLoad - Processing attribute `species` : value = Hellspawn
[DEBUG] 2021-04-12 19:09:13.358 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 19:09:13.359 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#16]
[DEBUG] 2021-04-12 19:09:13.360 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-04-12 19:09:13.360 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : team.entity.Character#16
[DEBUG] 2021-04-12 19:09:13.360 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-04-12 19:17:50.204 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-12 19:17:50.208 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-12 19:17:50.211 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-12 19:17:50.320 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-12 19:17:50.326 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-12 19:17:50.555 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-12 19:17:50.555 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-12 19:17:50.561 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-12 19:17:50.841 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-12 19:17:50.860 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-12 19:17:50.861 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-12 19:17:50.880 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-12 19:17:50.916 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1f44ddab
[DEBUG] 2021-04-12 19:17:50.916 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1f44ddab
[DEBUG] 2021-04-12 19:17:50.916 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1f44ddab
[DEBUG] 2021-04-12 19:17:50.917 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7eb6b6b6
[DEBUG] 2021-04-12 19:17:50.918 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@10ef5fa0
[DEBUG] 2021-04-12 19:17:50.918 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@b25b095
[DEBUG] 2021-04-12 19:17:50.919 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@747d1932
[DEBUG] 2021-04-12 19:17:50.919 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@747d1932
[DEBUG] 2021-04-12 19:17:50.920 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@747d1932
[DEBUG] 2021-04-12 19:17:50.921 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7c891ba7
[DEBUG] 2021-04-12 19:17:50.921 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7c891ba7
[DEBUG] 2021-04-12 19:17:50.921 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c891ba7
[DEBUG] 2021-04-12 19:17:50.922 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2a03d65c
[DEBUG] 2021-04-12 19:17:50.922 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2a03d65c
[DEBUG] 2021-04-12 19:17:50.922 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2a03d65c
[DEBUG] 2021-04-12 19:17:50.925 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4eb45fec
[DEBUG] 2021-04-12 19:17:50.926 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4eb45fec
[DEBUG] 2021-04-12 19:17:50.926 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4eb45fec
[DEBUG] 2021-04-12 19:17:50.927 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@459cfcca
[DEBUG] 2021-04-12 19:17:50.927 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@459cfcca
[DEBUG] 2021-04-12 19:17:50.927 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@459cfcca
[DEBUG] 2021-04-12 19:17:50.928 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@55a609dd
[DEBUG] 2021-04-12 19:17:50.928 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@55a609dd
[DEBUG] 2021-04-12 19:17:50.928 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@55a609dd
[DEBUG] 2021-04-12 19:17:50.929 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4d27d9d
[DEBUG] 2021-04-12 19:17:50.929 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4d27d9d
[DEBUG] 2021-04-12 19:17:50.929 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4d27d9d
[DEBUG] 2021-04-12 19:17:50.930 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@58b71ceb
[DEBUG] 2021-04-12 19:17:50.930 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@58b71ceb
[DEBUG] 2021-04-12 19:17:50.931 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1108adc8
[DEBUG] 2021-04-12 19:17:50.932 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1108adc8
[DEBUG] 2021-04-12 19:17:50.933 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5fb65013
[DEBUG] 2021-04-12 19:17:50.933 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5fb65013
[DEBUG] 2021-04-12 19:17:50.933 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1744a475
[DEBUG] 2021-04-12 19:17:50.935 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2eb917d0
[DEBUG] 2021-04-12 19:17:50.936 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@12ffd1de
[DEBUG] 2021-04-12 19:17:50.936 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@12ffd1de
[DEBUG] 2021-04-12 19:17:50.937 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@71d8cfe7
[DEBUG] 2021-04-12 19:17:50.937 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@71d8cfe7
[DEBUG] 2021-04-12 19:17:50.941 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7a2b1eb4
[DEBUG] 2021-04-12 19:17:50.942 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7a2b1eb4
[DEBUG] 2021-04-12 19:17:50.944 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@aa149ed
[DEBUG] 2021-04-12 19:17:50.944 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@aa149ed
[DEBUG] 2021-04-12 19:17:50.945 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@8ee0c23
[DEBUG] 2021-04-12 19:17:50.945 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@8ee0c23
[DEBUG] 2021-04-12 19:17:50.946 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2f508f3c
[DEBUG] 2021-04-12 19:17:50.946 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2f508f3c
[DEBUG] 2021-04-12 19:17:50.947 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@ffaaaf0
[DEBUG] 2021-04-12 19:17:50.947 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@ffaaaf0
[DEBUG] 2021-04-12 19:17:50.948 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@62d73ead
[DEBUG] 2021-04-12 19:17:50.948 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@62d73ead
[DEBUG] 2021-04-12 19:17:50.953 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@73fc518f
[DEBUG] 2021-04-12 19:17:50.953 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@73fc518f
[DEBUG] 2021-04-12 19:17:50.954 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@497aec8c
[DEBUG] 2021-04-12 19:17:50.954 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@497aec8c
[DEBUG] 2021-04-12 19:17:50.955 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1846579f
[DEBUG] 2021-04-12 19:17:50.955 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1846579f
[DEBUG] 2021-04-12 19:17:50.956 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3abfe845
[DEBUG] 2021-04-12 19:17:50.956 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3abfe845
[DEBUG] 2021-04-12 19:17:50.956 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3abfe845
[DEBUG] 2021-04-12 19:17:50.958 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7f08caf
[DEBUG] 2021-04-12 19:17:50.961 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@40e60ece
[DEBUG] 2021-04-12 19:17:50.962 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@40e60ece
[DEBUG] 2021-04-12 19:17:50.962 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@40e60ece
[DEBUG] 2021-04-12 19:17:50.964 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@61f39bb
[DEBUG] 2021-04-12 19:17:50.965 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4d654825
[DEBUG] 2021-04-12 19:17:50.966 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4d654825
[DEBUG] 2021-04-12 19:17:50.968 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@b0fc838
[DEBUG] 2021-04-12 19:17:50.968 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b0fc838
[DEBUG] 2021-04-12 19:17:50.969 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2954b5ea
[DEBUG] 2021-04-12 19:17:50.969 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2954b5ea
[DEBUG] 2021-04-12 19:17:50.970 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3ab6678b
[DEBUG] 2021-04-12 19:17:50.970 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3ab6678b
[DEBUG] 2021-04-12 19:17:50.971 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@642505c7
[DEBUG] 2021-04-12 19:17:50.971 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@642505c7
[DEBUG] 2021-04-12 19:17:50.971 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d9f64c9
[DEBUG] 2021-04-12 19:17:50.972 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2a685eba
[DEBUG] 2021-04-12 19:17:50.972 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2a685eba
[DEBUG] 2021-04-12 19:17:50.973 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2a685eba
[DEBUG] 2021-04-12 19:17:50.974 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@77d680e6
[DEBUG] 2021-04-12 19:17:50.974 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@77d680e6
[DEBUG] 2021-04-12 19:17:50.976 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@77d680e6
[DEBUG] 2021-04-12 19:17:50.980 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@37b57b54
[DEBUG] 2021-04-12 19:17:50.980 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7be71476
[DEBUG] 2021-04-12 19:17:50.981 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@154bd49b
[DEBUG] 2021-04-12 19:17:50.981 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@154bd49b
[DEBUG] 2021-04-12 19:17:50.981 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@154bd49b
[DEBUG] 2021-04-12 19:17:50.982 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2dd8239
[DEBUG] 2021-04-12 19:17:50.982 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2dd8239
[DEBUG] 2021-04-12 19:17:50.983 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2dd8239
[DEBUG] 2021-04-12 19:17:50.983 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e53b094
[DEBUG] 2021-04-12 19:17:50.984 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@cf67838
[DEBUG] 2021-04-12 19:17:50.985 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@288214b1
[DEBUG] 2021-04-12 19:17:50.985 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@288214b1
[DEBUG] 2021-04-12 19:17:50.986 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@639aba11
[DEBUG] 2021-04-12 19:17:50.988 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@fabb651
[DEBUG] 2021-04-12 19:17:50.988 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@fabb651
[DEBUG] 2021-04-12 19:17:50.989 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@144ab54
[DEBUG] 2021-04-12 19:17:50.990 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@144ab54
[DEBUG] 2021-04-12 19:17:50.991 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6c518474
[DEBUG] 2021-04-12 19:17:50.991 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5e2a3040
[DEBUG] 2021-04-12 19:17:50.992 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@74dbb1ee
[DEBUG] 2021-04-12 19:17:50.995 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5e8cda75
[DEBUG] 2021-04-12 19:17:50.995 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5e8cda75
[DEBUG] 2021-04-12 19:17:51.001 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6fd12c5
[DEBUG] 2021-04-12 19:17:51.001 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1de0a46c
[DEBUG] 2021-04-12 19:17:51.001 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4d1f1ff5
[DEBUG] 2021-04-12 19:17:51.001 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@222afc67
[DEBUG] 2021-04-12 19:17:51.001 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4c2fb9dd
[DEBUG] 2021-04-12 19:17:51.001 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@54f4a7f0
[DEBUG] 2021-04-12 19:17:51.002 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@61a1ea2c
[DEBUG] 2021-04-12 19:17:51.002 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@149debbb
[DEBUG] 2021-04-12 19:17:51.052 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-12 19:17:51.052 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-12 19:17:51.053 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 19:17:51.053 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-12 19:17:51.053 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-12 19:17:51.054 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-12 19:17:51.058 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-12 19:17:51.059 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 19:17:51.060 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-12 19:17:51.060 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-12 19:17:51.060 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-12 19:17:51.061 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-12 19:17:51.061 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-12 19:17:51.062 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-12 19:17:51.072 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/character_db
[INFO ] 2021-04-12 19:17:51.073 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-12 19:17:51.073 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-12 19:17:51.682 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-12 19:17:51.993 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.23
      major : 8
      minor : 0
[DEBUG] 2021-04-12 19:17:51.993 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-12 19:17:51.993 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-12 19:17:52.014 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-12 19:17:52.028 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-12 19:17:52.182 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-12 19:17:52.247 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-12 19:17:52.251 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5854a18] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@d5556bf]
[DEBUG] 2021-04-12 19:17:52.290 [main] AnnotationBinder - Binding entity from annotated class: team.entity.Character
[DEBUG] 2021-04-12 19:17:52.311 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-12 19:17:52.315 [main] EntityBinder - Import with entity name Character
[DEBUG] 2021-04-12 19:17:52.321 [main] EntityBinder - Bind entity team.entity.Character on table characters
[DEBUG] 2021-04-12 19:17:52.344 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 19:17:52.346 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-04-12 19:17:52.349 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:id]
[DEBUG] 2021-04-12 19:17:52.355 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-04-12 19:17:52.357 [main] PropertyBinder - Building property id
[DEBUG] 2021-04-12 19:17:52.360 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-12 19:17:52.361 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=alignment, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 19:17:52.362 [main] PropertyBinder - MetadataSourceProcessor property alignment with lazy=false
[DEBUG] 2021-04-12 19:17:52.362 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:alignment]
[DEBUG] 2021-04-12 19:17:52.362 [main] SimpleValueBinder - building SimpleValue for alignment
[DEBUG] 2021-04-12 19:17:52.362 [main] PropertyBinder - Building property alignment
[DEBUG] 2021-04-12 19:17:52.363 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=franchise, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 19:17:52.363 [main] PropertyBinder - MetadataSourceProcessor property franchise with lazy=false
[DEBUG] 2021-04-12 19:17:52.363 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:franchise]
[DEBUG] 2021-04-12 19:17:52.365 [main] SimpleValueBinder - building SimpleValue for franchise
[DEBUG] 2021-04-12 19:17:52.365 [main] PropertyBinder - Building property franchise
[DEBUG] 2021-04-12 19:17:52.365 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=media, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 19:17:52.366 [main] PropertyBinder - MetadataSourceProcessor property media with lazy=false
[DEBUG] 2021-04-12 19:17:52.366 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:media]
[DEBUG] 2021-04-12 19:17:52.366 [main] SimpleValueBinder - building SimpleValue for media
[DEBUG] 2021-04-12 19:17:52.366 [main] PropertyBinder - Building property media
[DEBUG] 2021-04-12 19:17:52.366 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 19:17:52.366 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-04-12 19:17:52.366 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:name]
[DEBUG] 2021-04-12 19:17:52.366 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-04-12 19:17:52.366 [main] PropertyBinder - Building property name
[DEBUG] 2021-04-12 19:17:52.366 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(characters), mappingColumn=species, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-12 19:17:52.368 [main] PropertyBinder - MetadataSourceProcessor property species with lazy=false
[DEBUG] 2021-04-12 19:17:52.368 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [team.entity.Character:species]
[DEBUG] 2021-04-12 19:17:52.369 [main] SimpleValueBinder - building SimpleValue for species
[DEBUG] 2021-04-12 19:17:52.369 [main] PropertyBinder - Building property species
[DEBUG] 2021-04-12 19:17:52.371 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-04-12 19:17:52.371 [main] SimpleValueBinder - Starting fillSimpleValue for alignment
[DEBUG] 2021-04-12 19:17:52.371 [main] SimpleValueBinder - Starting fillSimpleValue for franchise
[DEBUG] 2021-04-12 19:17:52.371 [main] SimpleValueBinder - Starting fillSimpleValue for media
[DEBUG] 2021-04-12 19:17:52.371 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-04-12 19:17:52.371 [main] SimpleValueBinder - Starting fillSimpleValue for species
[DEBUG] 2021-04-12 19:17:52.372 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [characters]
[DEBUG] 2021-04-12 19:17:52.402 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-04-12 19:17:52.404 [main] Settings - SessionFactory name : null
[DEBUG] 2021-04-12 19:17:52.404 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-04-12 19:17:52.404 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-04-12 19:17:52.404 [main] Settings - Statistics: disabled
[DEBUG] 2021-04-12 19:17:52.404 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-04-12 19:17:52.404 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-04-12 19:17:52.404 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-04-12 19:17:52.404 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-04-12 19:17:52.404 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-04-12 19:17:52.404 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-04-12 19:17:52.404 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-04-12 19:17:52.404 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-04-12 19:17:52.404 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-04-12 19:17:52.404 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-04-12 19:17:52.404 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-04-12 19:17:52.404 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-04-12 19:17:52.404 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-04-12 19:17:52.404 [main] Settings - Named query checking : enabled
[DEBUG] 2021-04-12 19:17:52.405 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-04-12 19:17:52.405 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-04-12 19:17:52.405 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-04-12 19:17:52.405 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-04-12 19:17:52.405 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-04-12 19:17:52.405 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-04-12 19:17:52.405 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-04-12 19:17:52.405 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-04-12 19:17:52.405 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-04-12 19:17:52.405 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-04-12 19:17:52.405 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-04-12 19:17:52.405 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-04-12 19:17:52.405 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-04-12 19:17:52.405 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-04-12 19:17:52.405 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-04-12 19:17:52.405 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-04-12 19:17:52.405 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-04-12 19:17:52.405 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-04-12 19:17:52.408 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-04-12 19:17:52.408 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-04-12 19:17:52.460 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-04-12 19:17:52.478 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-04-12 19:17:52.478 [main] SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\junit\lib\junit-rt.jar;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\test-classes;C:\Users\Walker\IdeaProjects\fictionalCharacterAPI\target\classes;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Walker\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Walker\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Walker\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Walker\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Walker\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Walker\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Walker\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Walker\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Walker\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Walker\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Walker\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Walker\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Walker\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Walker\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Walker\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Walker\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Walker\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\Walker\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Walker\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Walker\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Walker\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Walker\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Walker\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Walker\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Walker\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Walker\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-client\2.29.1\jersey-client-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\2.1.6\jakarta.ws.rs-api-2.1.6.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\core\jersey-common\2.29.1\jersey-common-2.29.1.jar;C:\Users\Walker\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.3\osgi-resource-locator-1.0.3.jar;C:\Users\Walker\.m2\repository\com\sun\activation\jakarta.activation\1.2.1\jakarta.activation-1.2.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\jakarta.inject\2.6.1\jakarta.inject-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\jersey\inject\jersey-hk2\2.29.1\jersey-hk2-2.29.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-locator\2.6.1\hk2-locator-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\external\aopalliance-repackaged\2.6.1\aopalliance-repackaged-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-api\2.6.1\hk2-api-2.6.1.jar;C:\Users\Walker\.m2\repository\org\glassfish\hk2\hk2-utils\2.6.1\hk2-utils-2.6.1.jar;C:\Users\Walker\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Walker\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Walker\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0\jackson-core-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Walker\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=13, os.name=Windows 8.1, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 team.persistence.GenericDaoTest,getByNameSuccess, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Walker, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-13.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, connection.password=floss1chips2, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=13.0.1+9, user.name=Walker, path.separator=;, hibernate.connection.username=****, os.version=6.3, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/character_db, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Walker\AppData\Local\Temp\, java.version=13.0.1, user.dir=C:\Users\Walker\IdeaProjects\fictionalCharacterAPI, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51bddd98, java.library.path=C:\Program Files\Java\jdk-13.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk-13.0.1\bin;C:\Program Files (x86)\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.1+9, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/character_db, java.class.version=57.0}
[DEBUG] 2021-04-12 19:17:52.493 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-04-12 19:17:52.493 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-04-12 19:17:52.494 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-04-12 19:17:52.494 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5854a18] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6dee8ae6]
[DEBUG] 2021-04-12 19:17:52.555 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 19:17:52.555 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 19:17:52.572 [main] ClassLoaderAccessImpl - Not known whether passed class name [team.entity.Character] is safe
[DEBUG] 2021-04-12 19:17:52.572 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : team.entity.Character
[DEBUG] 2021-04-12 19:17:52.791 [main] AbstractEntityPersister - Static SQL for entity: team.entity.Character
[DEBUG] 2021-04-12 19:17:52.791 [main] AbstractEntityPersister -  Version select: select id from characters where id =?
[DEBUG] 2021-04-12 19:17:52.791 [main] AbstractEntityPersister -  Snapshot select: select character_.id, character_.alignment as alignmen2_0_, character_.franchise as franchis3_0_, character_.media as media4_0_, character_.name as name5_0_, character_.species as species6_0_ from characters character_ where character_.id=?
[DEBUG] 2021-04-12 19:17:52.791 [main] AbstractEntityPersister -  Insert 0: insert into characters (alignment, franchise, media, name, species, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 19:17:52.791 [main] AbstractEntityPersister -  Update 0: update characters set alignment=?, franchise=?, media=?, name=?, species=? where id=?
[DEBUG] 2021-04-12 19:17:52.791 [main] AbstractEntityPersister -  Delete 0: delete from characters where id=?
[DEBUG] 2021-04-12 19:17:52.791 [main] AbstractEntityPersister -  Identity insert: insert into characters (alignment, franchise, media, name, species) values (?, ?, ?, ?, ?)
[DEBUG] 2021-04-12 19:17:52.807 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21f7e537]
[DEBUG] 2021-04-12 19:17:52.809 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 19:17:52.809 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 19:17:52.809 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 19:17:52.809 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 19:17:52.809 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 19:17:52.810 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 19:17:52.820 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 19:17:52.822 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 19:17:52.824 [main] EntityLoader - Static select for entity team.entity.Character [NONE]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 19:17:52.824 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66f16742]
[DEBUG] 2021-04-12 19:17:52.824 [main] MetamodelGraphWalker - Visiting attribute path : alignment
[DEBUG] 2021-04-12 19:17:52.824 [main] MetamodelGraphWalker - Visiting attribute path : franchise
[DEBUG] 2021-04-12 19:17:52.824 [main] MetamodelGraphWalker - Visiting attribute path : media
[DEBUG] 2021-04-12 19:17:52.824 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-04-12 19:17:52.824 [main] MetamodelGraphWalker - Visiting attribute path : species
[DEBUG] 2021-04-12 19:17:52.824 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-04-12 19:17:52.824 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-04-12 19:17:52.824 [main] LoadPlanTreePrinter - LoadPlan(entity=team.entity.Character)
    - Returns
       - EntityReturnImpl(entity=team.entity.Character, querySpaceUid=<gen:0>, path=team.entity.Character)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=team.entity.Character)
          - SQL table alias mapping - character0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-04-12 19:17:52.824 [main] EntityLoader - Static select for entity team.entity.Character [READ]: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 19:17:52.835 [main] Loader - Static select for action ACTION_MERGE on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 19:17:52.835 [main] Loader - Static select for action ACTION_REFRESH on entity team.entity.Character: select character0_.id as id1_0_0_, character0_.alignment as alignmen2_0_0_, character0_.franchise as franchis3_0_0_, character0_.media as media4_0_0_, character0_.name as name5_0_0_, character0_.species as species6_0_0_ from characters character0_ where character0_.id=?
[DEBUG] 2021-04-12 19:17:52.858 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-04-12 19:17:52.858 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-04-12 19:17:52.858 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-04-12 19:17:52.863 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-12 19:17:52.863 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-04-12 19:17:52.864 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-04-12 19:17:52.864 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-04-12 19:17:52.865 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5bfc79cb
[DEBUG] 2021-04-12 19:17:52.867 [main] SessionFactoryRegistry - Registering SessionFactory: 1f1daf15-abe0-4548-994c-f4137aaf7d52 (<unnamed>)
[DEBUG] 2021-04-12 19:17:52.868 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-04-12 19:17:52.926 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-04-12 19:17:52.994 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Character as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2021-04-12 19:17:53.022 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6818fd48
[DEBUG] 2021-04-12 19:17:53.100 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from team.entity.Character as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2021-04-12 19:17:53.105 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-04-12 19:17:53.135 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'team'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Character'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-04-12 19:17:53.154 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-04-12 19:17:53.170 [main] FromElement - FromClause{level=1} : team.entity.Character (generatedAlias0) -> character0_
[DEBUG] 2021-04-12 19:17:53.170 [main] FromReferenceNode - Resolved : generatedAlias0 -> character0_.id
[DEBUG] 2021-04-12 19:17:53.173 [main] FromReferenceNode - Resolved : generatedAlias0 -> character0_.id
[DEBUG] 2021-04-12 19:17:53.175 [main] DotNode - getDataType() : name -> org.hibernate.type.StringType@5fb65013
[DEBUG] 2021-04-12 19:17:53.175 [main] FromReferenceNode - Resolved : generatedAlias0.name -> character0_.name
[DEBUG] 2021-04-12 19:17:53.177 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-04-12 19:17:53.177 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} character0_.id ) ( FromClause{level=1} characters character0_ ) ( where ( = ( character0_.name character0_.id name ) ? ) ) )
[DEBUG] 2021-04-12 19:17:53.194 [main] JoinProcessor - Using FROM fragment [characters character0_]
[DEBUG] 2021-04-12 19:17:53.194 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-04-12 19:17:53.194 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (characters)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'character0_.id as id1_0_' {alias=generatedAlias0, className=team.entity.Character, tableAlias=character0_}
    |  \-[SQL_TOKEN] SqlFragment: 'character0_.alignment as alignmen2_0_, character0_.franchise as franchis3_0_, character0_.media as media4_0_, character0_.name as name5_0_, character0_.species as species6_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[character0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'characters character0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=characters,tableAlias=character0_,origin=null,columns={,className=team.entity.Character}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'character0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=character0_,className=team.entity.Character,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'character0_.id' {alias=generatedAlias0, className=team.entity.Character, tableAlias=character0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5fb65013}

[DEBUG] 2021-04-12 19:17:53.195 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-04-12 19:17:53.199 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from team.entity.Character as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2021-04-12 19:17:53.199 [main] QueryTranslatorImpl - SQL: select character0_.id as id1_0_, character0_.alignment as alignmen2_0_, character0_.franchise as franchis3_0_, character0_.media as media4_0_, character0_.name as name5_0_, character0_.species as species6_0_ from characters character0_ where character0_.name=?
[DEBUG] 2021-04-12 19:17:53.199 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-04-12 19:17:53.214 [main] SQL - select character0_.id as id1_0_, character0_.alignment as alignmen2_0_, character0_.franchise as franchis3_0_, character0_.media as media4_0_, character0_.name as name5_0_, character0_.species as species6_0_ from characters character0_ where character0_.name=?
[DEBUG] 2021-04-12 19:17:53.288 [main] Loader - Result set row: 0
[DEBUG] 2021-04-12 19:17:53.292 [main] Loader - Result row: EntityKey[team.entity.Character#1]
[DEBUG] 2021-04-12 19:17:53.297 [main] TwoPhaseLoad - Resolving attributes for [team.entity.Character#1]
[DEBUG] 2021-04-12 19:17:53.298 [main] TwoPhaseLoad - Processing attribute `alignment` : value = Good
[DEBUG] 2021-04-12 19:17:53.299 [main] TwoPhaseLoad - Attribute (`alignment`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 19:17:53.299 [main] TwoPhaseLoad - Processing attribute `franchise` : value = Lord Of The Rings
[DEBUG] 2021-04-12 19:17:53.299 [main] TwoPhaseLoad - Attribute (`franchise`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 19:17:53.299 [main] TwoPhaseLoad - Processing attribute `media` : value = book
[DEBUG] 2021-04-12 19:17:53.299 [main] TwoPhaseLoad - Attribute (`media`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 19:17:53.299 [main] TwoPhaseLoad - Processing attribute `name` : value = Gandalf
[DEBUG] 2021-04-12 19:17:53.299 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 19:17:53.299 [main] TwoPhaseLoad - Processing attribute `species` : value = Maia
[DEBUG] 2021-04-12 19:17:53.299 [main] TwoPhaseLoad - Attribute (`species`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-04-12 19:17:53.300 [main] TwoPhaseLoad - Done materializing entity [team.entity.Character#1]
[DEBUG] 2021-04-12 19:17:53.301 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
